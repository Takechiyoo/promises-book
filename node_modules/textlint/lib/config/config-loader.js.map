{"version":3,"sources":["../../src/config/config-loader.js"],"names":["load","rcConfigLoader","require","interopRequire","configFilePath","configFileName","moduleResolver","modulePath","resolveConfigPackageName","config","filePath","error","result","defaultExtension","undefined"],"mappings":"AAAA;AACA;;;;;kBASwBA,I;AARxB,IAAMC,iBAAiBC,QAAQ,kBAAR,CAAvB;AACA,IAAMC,iBAAiBD,QAAQ,iBAAR,CAAvB;AACA;;;;;;AAMe,SAASF,IAAT,CAAcI,cAAd,QAAkE;AAAA,QAAlCC,cAAkC,QAAlCA,cAAkC;AAAA,QAAlBC,cAAkB,QAAlBA,cAAkB;;AAC7E;AACA,QAAIF,cAAJ,EAAoB;AAChB,YAAI;AACA,gBAAMG,aAAaD,eAAeE,wBAAf,CAAwCJ,cAAxC,CAAnB;AACA,mBAAO;AACHK,wBAAQN,eAAeI,UAAf,CADL;AAEHG,0BAAUH;AAFP,aAAP;AAIH,SAND,CAME,OAAOI,KAAP,EAAc;AACZ;AACH;AACJ;AACD;AACA,QAAMC,SAASX,eAAeI,cAAf,EAA+B;AAC1CA,wBAAgBD,cAD0B;AAE1CS,0BAAkB,CAAC,OAAD,EAAU,KAAV,EAAiB,MAAjB;AAFwB,KAA/B,CAAf;AAIA,QAAID,WAAWE,SAAf,EAA0B;AACtB,eAAO;AACHL,oBAAQ,EADL;AAEHC,sBAAUI;AAFP,SAAP;AAIH;AACD,WAAO;AACHL,gBAAQG,OAAOH,MADZ;AAEHC,kBAAUE,OAAOF;AAFd,KAAP;AAIH","file":"config-loader.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nconst rcConfigLoader = require(\"rc-config-loader\");\nconst interopRequire = require(\"interop-require\");\n/**\n * @param configFilePath\n * @param configFileName\n * @param moduleResolver\n * @returns {{ config: Object, filePath:string}}\n */\nexport default function load(configFilePath, { configFileName, moduleResolver }) {\n    // if specify Config module, use it \n    if (configFilePath) {\n        try {\n            const modulePath = moduleResolver.resolveConfigPackageName(configFilePath);\n            return {\n                config: interopRequire(modulePath),\n                filePath: modulePath\n            };\n        } catch (error) {\n            // not found config module\n        }\n    }\n    // auto or specify path to config file\n    const result = rcConfigLoader(configFileName, {\n        configFileName: configFilePath,\n        defaultExtension: [\".json\", \".js\", \".yml\"]\n    });\n    if (result === undefined) {\n        return {\n            config: {},\n            filePath: undefined\n        };\n    }\n    return {\n        config: result.config,\n        filePath: result.filePath\n    };\n}\n"]}