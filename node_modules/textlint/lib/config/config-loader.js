// LICENSE : MIT
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = load;
var rcConfigLoader = require("rc-config-loader");
var interopRequire = require("interop-require");
/**
 * @param configFilePath
 * @param configFileName
 * @param moduleResolver
 * @returns {{ config: Object, filePath:string}}
 */
function load(configFilePath, _ref) {
    var configFileName = _ref.configFileName,
        moduleResolver = _ref.moduleResolver;

    // if specify Config module, use it 
    if (configFilePath) {
        try {
            var modulePath = moduleResolver.resolveConfigPackageName(configFilePath);
            return {
                config: interopRequire(modulePath),
                filePath: modulePath
            };
        } catch (error) {
            // not found config module
        }
    }
    // auto or specify path to config file
    var result = rcConfigLoader(configFileName, {
        configFileName: configFilePath,
        defaultExtension: [".json", ".js", ".yml"]
    });
    if (result === undefined) {
        return {
            config: {},
            filePath: undefined
        };
    }
    return {
        config: result.config,
        filePath: result.filePath
    };
}
module.exports = exports["default"];
//# sourceMappingURL=config-loader.js.map