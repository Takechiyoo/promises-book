"0ea0f35fce7426ad14e4db9cf796999008eba4f7"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#3=[nil nil ((945 . 949) (t 23158 13532 796938 700000)) nil (23158 13536 801731 400000) 0 nil]) ((947 . 954)) nil (23158 13532 557031 100000) 0 nil]) ((929 . 948) (t 23158 13342 591230 400000)) nil (23158 13532 557055 200000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1847) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1)) nil (23158 13342 380930 600000) 0 nil]) ((#("    console.log(\"NOT SUPPORTED: \" + elem.context);" 0 16 (fontified t) 16 33 (fontified t face font-lock-string-face) 33 48 (fontified t) 48 50 (fontified t)) . 1847) (undo-tree-id2417 . -50) (t 23158 13330 12287 600000)) nil (23158 13342 380978 500000) 0 nil]) ((7543 . 7697) (#("{
      type: \"Paragraph\",
      children: [{ type: \"Str\", value: raw, loc, range, raw }],
      loc,
      range,
      raw
    }" 14 25 (face font-lock-string-face) 52 57 (face font-lock-string-face)) . 7543) (t 23158 12984 953351 300000)) nil (23158 13342 381017 800000) 0 nil]) ((#("
" 0 1 (fontified t)) . 8825) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1)) nil (23158 12984 634661 800000) 0 nil]) ((#("          console.log(this.lines[i + j - 1 + offset]);" 0 8 (fontified t) 8 10 (fontified t) 10 22 (fontified t) 22 26 (fontified t face font-lock-constant-face) 26 45 (fontified t) 45 51 (fontified t) 51 52 (rear-nonsticky t fontified t) 52 53 (fontified t) 53 54 (fontified t)) . 8825) (undo-tree-id2410 . -53) (undo-tree-id2411 . -22) (undo-tree-id2412 . -54) (t 23158 12983 386336 900000)) nil (23158 12984 634781 100000) 0 nil]) ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -8908) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -8888) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -8833) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -8769) 8922 (t 23158 12977 321865 900000)) nil (23158 12983 121677 200000) 0 nil]) ((5414 . 5417) (t 23158 12949 349701 0)) nil (23158 12976 946855 200000) 0 nil] [nil ([nil ([nil ([nil nil ((#("    let offset = 0; // see \"comment in paragraph\" test case.
" 0 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 14 (fontified t face font-lock-variable-name-face) 14 16 (fontified t) 16 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t face font-lock-comment-delimiter-face) 21 22 (fontified t face font-lock-comment-delimiter-face) 22 23 (fontified t face font-lock-comment-delimiter-face) 23 26 (fontified t face font-lock-comment-face) 26 49 (fontified t face font-lock-comment-face) 49 54 (fontified t face font-lock-comment-face) 54 60 (fontified t face font-lock-comment-face) 60 61 (fontified t rear-nonsticky t face font-lock-comment-face)) . 8566) (undo-tree-id2396 . -61) (undo-tree-id2397 . -61) (undo-tree-id2398 . -61) (undo-tree-id2399 . -61) (undo-tree-id2400 . -61) (undo-tree-id2401 . -61) 8627 (t 23158 12944 566910 300000)) ((8566 . 8627)) (23158 12947 212709 600000) 0 nil]) ((#("  " 0 2 (fontified t)) . -8570) 8566) ((8570 . 8572) (t 23158 12944 566910 300000)) (23158 12947 217999 700000) 0 nil]) ((nil rear-nonsticky nil 8628 . 8629) (nil fontified nil 8628 . 8629) (nil fontified nil 8622 . 8628) (nil fontified nil 8617 . 8622) (nil fontified nil 8594 . 8617) (nil fontified nil 8591 . 8594) (nil fontified nil 8590 . 8591) (nil fontified nil 8589 . 8590) (nil fontified nil 8588 . 8589) (nil fontified nil 8587 . 8588) (nil fontified nil 8584 . 8587) (nil fontified nil 8582 . 8584) (nil fontified nil 8576 . 8582) (nil fontified nil 8575 . 8576) (nil fontified nil 8572 . 8575) (nil fontified nil 8566 . 8572) (8566 . 8629)) ((#("      let offset = 0; // see \"comment in paragraph\" test case.
" 0 4 (fontified nil) 4 6 (fontified nil) 6 9 (fontified nil face font-lock-keyword-face) 9 10 (fontified nil) 10 16 (fontified nil face font-lock-variable-name-face) 16 18 (fontified nil) 18 21 (fontified nil) 21 22 (fontified nil) 22 23 (fontified nil face font-lock-comment-delimiter-face) 23 24 (fontified nil face font-lock-comment-delimiter-face) 24 25 (fontified nil face font-lock-comment-delimiter-face) 25 28 (fontified nil face font-lock-comment-face) 28 51 (fontified nil face font-lock-comment-face) 51 56 (fontified nil face font-lock-comment-face) 56 62 (fontified nil face font-lock-comment-face) 62 63 (fontified nil rear-nonsticky nil face font-lock-comment-face)) . 8566) (undo-tree-id2402 . -63) (undo-tree-id2403 . -63) (undo-tree-id2404 . -63) (undo-tree-id2405 . -63) (nil rear-nonsticky t 8628 . 8629)) (23158 12947 770235 300000) 0 nil]) ((#("      let offset = 0; // see \"comment in paragraph\" test case.
" 0 6 (fontified t) 6 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 16 (fontified t face font-lock-variable-name-face) 16 18 (fontified t) 18 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t face font-lock-comment-delimiter-face) 23 24 (fontified t face font-lock-comment-delimiter-face) 24 25 (fontified t face font-lock-comment-delimiter-face) 25 28 (fontified t face font-lock-comment-face) 28 51 (fontified t face font-lock-comment-face) 51 56 (fontified t face font-lock-comment-face) 56 62 (fontified t face font-lock-comment-face) 62 63 (fontified t face font-lock-comment-face)) . 8648) (undo-tree-id2391 . -63) (undo-tree-id2392 . -63) (undo-tree-id2393 . -63) (undo-tree-id2394 . -63) (t 23158 12927 238507 600000)) ((8648 . 8711)) (23158 12948 4686 700000) 0 nil]) ((8914 . 8917) (8891 . 8894) (8833 . 8836) (8766 . 8769) 8907 (t 23158 12920 978734 300000)) nil (23158 12948 313602 400000) 0 nil]) ((#("
" 0 1 (fontified t)) . 8566) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1)) nil (23158 12920 762959 100000) 0 nil]) ((#("    console.log(lines);" 0 23 (fontified t)) . 8566) (undo-tree-id2390 . -23) (t 23158 12861 584164 500000)) nil (23158 12920 763021 0) 0 nil]) ((nil rear-nonsticky nil 8897 . 8898) (nil fontified nil 8897 . 8898) (nil fontified nil 8891 . 8897) (nil fontified nil 8872 . 8891) (nil fontified nil 8868 . 8872) (8868 . 8898)) nil (23158 12861 352698 0) 0 nil] [nil nil ((nil rear-nonsticky nil 8898 . 8899) (nil fontified nil 8898 . 8899) (nil fontified nil 8892 . 8898) (nil fontified nil 8873 . 8892) (nil fontified nil 8869 . 8873) (8869 . 8899)) ((#("this.lines[i + j - 1 + offset]" 0 4 (fontified nil face font-lock-constant-face) 4 23 (fontified nil) 23 29 (fontified nil) 29 30 (fontified nil rear-nonsticky nil)) . 8869) (undo-tree-id2385 . -30) (undo-tree-id2386 . -30) (nil rear-nonsticky t 8898 . 8899)) (23158 12860 676538 200000) 0 nil]) ((8867 . 8870)) nil (23158 12860 677208 400000) 0 nil]) ((#("8" 0 1 (fontified t)) . -8867)) nil (23158 12860 676568 0) 0 nil]) ((#(")" 0 1 (fontified t)) . -8868)) nil (23158 12860 676577 100000) 0 nil]) ((#(";" 0 1 (fontified t)) . -8869)) nil (23158 12860 676586 100000) 0 nil]) ((8861 . 8870)) nil (23158 12860 676592 900000) 0 nil]) ((#("e" 0 1 (fontified t)) . -8861)) nil (23158 12860 676599 0) 0 nil]) ((8856 . 8862)) nil (23158 12860 676606 100000) 0 nil]) ((8845 . 8856) (t 23158 12836 794202 300000)) nil (23158 12860 676612 900000) 0 nil]) ((#("
" 0 1 (fontified t)) . 8866) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1)) nil (23158 12836 446729 900000) 0 nil]) ((#("          break;" 0 10 (fontified t) 10 15 (fontified t face font-lock-keyword-face) 15 16 (fontified t)) . 8866) (undo-tree-id2384 . -16)) nil (23158 12836 446788 400000) 0 nil] [nil ([nil nil ((#("
" 0 1 (fontified t)) . 8883) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1)) ((8883 . 8884)) (23158 12835 285771 900000) 0 nil]) ((#("        }" 0 9 (fontified t)) . 8883) (undo-tree-id2380 . -9)) ((8883 . 8892)) (23158 12835 287334 0) 0 nil] [nil ([nil nil ((nil rear-nonsticky nil 8862 . 8863) (nil fontified nil 8862 . 8863) (nil fontified nil 8861 . 8862) (nil fontified nil 8856 . 8861) (nil fontified nil 8846 . 8856) (8846 . 8863)) ((#("          break;
" 0 10 (fontified nil) 10 15 (fontified nil face font-lock-keyword-face) 15 16 (fontified nil) 16 17 (fontified nil rear-nonsticky nil)) . 8846) (undo-tree-id2370 . -17) (undo-tree-id2371 . -17) (undo-tree-id2372 . -17) (undo-tree-id2373 . -17) (nil rear-nonsticky t 8862 . 8863) (t 23158 12831 822425 500000)) (23158 12831 436458 400000) 0 nil]) ((#("          break;
" 0 10 (fontified t) 10 15 (fontified t face font-lock-keyword-face) 15 16 (fontified t) 16 17 (fontified t)) . 8866) (undo-tree-id2366 . -17) (undo-tree-id2367 . -17) (undo-tree-id2368 . -17) 8883 (t 23158 12827 794462 400000)) ((8866 . 8883)) (23158 12833 830047 100000) 0 nil]) ((8876 . 8882)) nil (23158 12835 451498 900000) 0 nil]) ((8865 . 8876) (t 23158 12763 747035 100000)) nil (23158 12827 462169 100000) 0 nil]) ((#("off" 0 3 (fontified t)) . -9149) (9152 . 9158) 9152) nil (23158 12763 503900 600000) 0 nil]) ((9146 . 9152)) nil (23158 12763 503931 600000) 0 nil] [nil ([nil nil ((#("off" 0 3 (fontified t)) . -9102) (9105 . 9111) 9105) ((#("offset" 0 6 (fontified nil)) . 9105) (undo-tree-id2364 . -6) (9102 . 9105)) (23158 12760 208368 500000) 0 nil]) ((9099 . 9105)) ((#(" + off" 0 3 (fontified t) 3 6 (fontified t)) . 9099) (undo-tree-id2365 . -6)) (23158 12760 209093 900000) 0 nil]) ((#(" " 0 1 (fontified t)) . -9146)) nil (23158 12760 669736 300000) 0 nil]) ((#("+" 0 1 (fontified t)) . -9147)) nil (23158 12760 208413 800000) 0 nil]) ((9146 . 9148) (t 23158 12742 405496 100000)) nil (23158 12760 208422 900000) 0 nil]) ((#("
" 0 1 (fontified t)) . 8876) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . 1) (undo-tree-id2363 . -1)) nil (23158 12742 42000 700000) 0 nil]) ((8865 . 8874) (#(" " 0 1 (fontified t)) . 8865) 8866) nil (23158 12742 42036 200000) 0 nil]) ((8845 . 8856) (#(" " 0 1 (fontified t)) . 8845) 8846) nil (23158 12742 42062 300000) 0 nil]) ((#("        " 0 8 (fontified nil)) . 8858) (8858 . 8866) (8858 . 8859) (t 23158 12724 991117 700000)) nil (23158 12742 42080 0) 0 nil]) ((#("\\" 0 1 (fontified t face font-lock-string-face)) . -8840)) nil (23158 12724 682854 400000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-string-face)) . -8841)) nil (23158 12724 682874 500000) 0 nil]) ((#("+" 0 1 (fontified t face font-lock-string-face)) . -8842)) nil (23158 12724 682883 500000) 0 nil]) ((8842 . 8843)) nil (23158 12724 682891 400000) 0 nil]) ((#("*" 0 1 (fontified t face font-lock-string-face)) . -8842)) nil (23158 12724 682898 600000) 0 nil]) ((8840 . 8843)) nil (23158 12724 682905 800000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-string-face)) . -8840)) nil (23158 12724 682911 500000) 0 nil]) ((8840 . 8841)) nil (23158 12724 682917 900000) 0 nil]) ((8854 . 8856)) nil (23158 12724 682923 900000) 0 nil]) ((8845 . 8846)) nil (23158 12724 682930 300000) 0 nil]) ((#("b" 0 1 (fontified t)) . -8853)) nil (23158 12724 682936 400000) 0 nil]) ((8845 . 8854)) nil (23158 12724 682943 600000) 0 nil] [nil nil ((#("        while (this.lines[i + j - 1 + offset].match(/^\\/\\//)) {}" 0 8 (fontified t) 8 13 (fontified t face font-lock-keyword-face) 13 15 (fontified t) 15 19 (fontified t face font-lock-constant-face) 19 38 (fontified t) 38 44 (fontified t) 44 46 (fontified t) 46 52 (fontified t) 52 53 (syntax-table #1=(7 . 47) fontified t face font-lock-string-face) 53 55 (fontified t face font-lock-string-face) 55 57 (fontified t face font-lock-string-face) 57 58 (fontified t face font-lock-string-face) 58 59 (syntax-table #2=(7 . 47) fontified t face font-lock-string-face) 59 60 (fontified t) 60 61 (fontified t) 61 64 (fontified t)) . 8782) (undo-tree-id2357 . -63) (undo-tree-id2359 . -64)) ((8782 . 8846) (t 23158 12698 484036 700000)) (23158 12698 89942 400000) 0 nil] [nil ([nil ([nil ([nil nil ((#("
" 0 1 (fontified t)) . 8566) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1)) ((8566 . 8567) (t 23158 12691 894396 600000)) (23158 12691 645278 0) 0 nil]) ((#("    console.log(lines);" 0 23 (fontified t)) . 8566)) ((8566 . 8589)) (23158 12693 579251 400000) 0 nil] [nil ([nil nil ((#("
" 0 1 (fontified t)) . 8566) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1)) ((8566 . 8567) (t 23158 12684 940155 700000)) (23158 12684 688194 300000) 0 nil]) ((#("    console.log(lines);" 0 23 (fontified t)) . 8566) (t 23158 12667 483911 400000)) ((8566 . 8589)) (23158 12690 372621 400000) 0 nil]) ((8852 . 8856)) ((#("++; " 0 4 (fontified t)) . 8852)) (23158 12693 721336 0) 0 nil]) ((8845 . 8852)) ((#(" offset" 0 7 (fontified t)) . 8845)) (23158 12694 30649 700000) 0 nil]) ((8843 . 8846)) nil (23158 12701 529639 300000) 0 nil]) ((#("." 0 1 (fontified t face font-lock-string-face)) . -8840)) nil (23158 12667 362960 400000) 0 nil]) ((8840 . 8841)) nil (23158 12667 362962 600000) 0 nil]) ((8838 . 8839)) nil (23158 12667 362964 500000) 0 nil]) ((8836 . 8837)) nil (23158 12667 362966 800000) 0 nil]) ((8835 . 8838)) nil (23158 12667 362968 700000) 0 nil]) ((8834 . 8836)) nil (23158 12667 362970 900000) 0 nil]) ((8833 . 8835)) nil (23158 12667 362972 800000) 0 nil]) ((#("?" 0 1 (fontified t)) . -8833)) nil (23158 12667 362975 100000) 0 nil]) ((#("match" 0 5 (fontified t)) . -8828) (8833 . 8839) 8833) nil (23158 12667 362977 700000) 0 nil]) ((8827 . 8833)) nil (23158 12667 362980 400000) 0 nil]) ((#("off" 0 3 (fontified t)) . -8820) (8823 . 8829) 8823) nil (23158 12667 362982 600000) 0 nil]) ((8808 . 8823)) nil (23158 12667 362985 300000) 0 nil]) ((8801 . 8809)) nil (23158 12667 362987 500000) 0 nil]) ((#("," 0 1 (fontified t)) . -8801)) nil (23158 12667 362989 400000) 0 nil]) ((8797 . 8802)) nil (23158 12667 362991 300000) 0 nil]) ((#("line" 0 4 (fontified t)) . 8797)) nil (23158 12667 362993 200000) 0 nil]) ((#("b" 0 1 (fontified t)) . -8801)) nil (23158 12667 362995 100000) 0 nil]) ((8797 . 8802)) nil (23158 12667 362997 400000) 0 nil]) ((8795 . 8798)) nil (23158 12667 362999 600000) 0 nil]) ((8790 . 8795)) nil (23158 12667 363001 500000) 0 nil]) ((8781 . 8790)) nil (23158 12667 363003 400000) 0 nil]) ((#("          
" 0 10 (fontified t face (my-face-u-1)) 10 11 (fontified t)) . 8853) (undo-tree-id2347 . -11) (undo-tree-id2348 . -11)) nil (23158 12667 363028 700000) 0 nil]) ((8852 . 8863)) nil (23158 12667 363032 500000) 0 nil]) ((8723 . 8734)) nil (23158 12667 363034 400000) 0 nil]) ((8702 . 8722)) nil (23158 12667 363036 200000) 0 nil]) ((8697 . 8703)) nil (23158 12667 363038 900000) 0 nil]) ((#("comment " 0 7 (fontified t face font-lock-comment-face) 7 8 (fontified t face (font-lock-comment-face my-face-u-1))) . 8697)) nil (23158 12667 363040 800000) 0 nil]) ((8697 . 8704)) nil (23158 12667 363043 0) 0 nil]) ((#("o" 0 1 (fontified t face font-lock-comment-face)) . -8697)) nil (23158 12667 363045 300000) 0 nil]) ((8697 . 8698)) nil (23158 12667 363048 0) 0 nil]) ((#("comment" 0 7 (fontified t face font-lock-comment-face)) . 8697)) nil (23158 12667 363049 800000) 0 nil]) ((8693 . 8705)) nil (23158 12667 363052 100000) 0 nil]) ((8773 . 8782)) nil (23158 12667 363054 700000) 0 nil]) ((#("+" 0 1 (fontified t)) . -8773)) nil (23158 12667 363056 300000) 0 nil]) ((8773 . 8774)) nil (23158 12667 363058 500000) 0 nil]) ((8678 . 8693)) nil (23158 12667 363060 400000) 0 nil]) ((8671 . 8678) (t 23158 12438 227789 400000)) nil (23158 12667 363062 300000) 0 nil]) ((8588 . 8589)) nil (23158 12438 68591 300000) 0 nil]) ((8582 . 8587)) nil (23158 12438 68618 900000) 0 nil]) ((8570 . 8583)) nil (23158 12438 68632 800000) 0 nil]) ((8565 . 8570)) nil (23158 12438 68643 0) 0 nil]) ((#("    
" 0 4 (fontified t face (my-face-u-1)) 4 5 (fontified t)) . 5662) (undo-tree-id2344 . -5) (undo-tree-id2345 . -5) (undo-tree-id2346 . -5)) nil (23158 12438 68688 300000) 0 nil]) ((5661 . 5666) (t 23158 12343 245861 900000)) nil (23158 12438 68705 300000) 0 nil]) ((#("      children.unshift();
" 0 6 (fontified t) 6 23 (fontified t) 23 24 (fontified t) 24 26 (fontified t)) . 5425) (undo-tree-id2333 . -26) (undo-tree-id2334 . -26) (undo-tree-id2335 . -23) (undo-tree-id2336 . -26) (undo-tree-id2337 . -26) 5451) nil (23158 12342 955939 600000) 0 nil]) ((5423 . 5424)) nil (23158 12342 955970 600000) 0 nil]) ((#("chil" 0 4 (fontified t)) . -5414) (5418 . 5426) 5418) nil (23158 12342 955985 300000) 0 nil]) ((5412 . 5418)) nil (23158 12342 955998 200000) 0 nil]) ((5370 . 5373)) nil (23158 12342 956008 400000) 0 nil]) ((nil fontified nil 5408 . 5409) (nil fontified nil 5374 . 5408) (nil fontified nil 5370 . 5374) (5370 . 5409)) nil (23158 12342 956021 200000) 0 nil]) ((#("this.createParagraph(elem.text, lineno)" 0 4 (fontified t face font-lock-constant-face) 4 38 (fontified t) 38 39 (rear-nonsticky t fontified t)) . 5395) (undo-tree-id2338 . -39) (undo-tree-id2339 . 1) (undo-tree-id2340 . -39) (undo-tree-id2341 . 19) (undo-tree-id2342 . -21) (undo-tree-id2343 . -39) 5434) nil (23158 12342 956070 300000) 0 nil]) ((5358 . 5371)) nil (23158 12342 956084 600000) 0 nil]) ((5351 . 5358) (t 23158 12324 727464 200000)) nil (23158 12342 956091 400000) 0 nil]) ((7662 . 7663)) nil (23158 12324 475224 600000) 0 nil]) ((7531 . 7532)) nil (23158 12324 475253 300000) 0 nil]) ((7458 . 7468)) nil (23158 12324 475267 600000) 0 nil]) ((7452 . 7458)) nil (23158 12324 475278 600000) 0 nil]) ((#("      console.log(raw);" 0 23 (fontified t)) . 7452)) nil (23158 12324 475287 700000) 0 nil]) ((#(" === null" 0 5 (fontified t) 5 9 (fontified t face font-lock-constant-face)) . 7448)) nil (23158 12324 475298 600000) 0 nil]) ((7444 . 7445) (t 23158 12208 198052 800000)) nil (23158 12324 475311 400000) 0 nil]) ((#("
" 0 1 (fontified t)) . 396) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1)) nil (23158 12207 922918 100000) 0 nil]) ((#("    console.log(doc.$source_lines());" 0 16 (fontified t) 16 34 (fontified t) 34 35 (fontified t rear-nonsticky t) 35 37 (fontified t)) . 396) (undo-tree-id2325 . -35) (undo-tree-id2326 . -16) (undo-tree-id2327 . -37)) nil (23158 12207 922963 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 396) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) 397 (t 23158 12177 445276 600000)) nil (23158 12207 923144 600000) 0 nil]) ((nil rear-nonsticky nil 431 . 432) (nil fontified nil 413 . 432) (413 . 432)) nil (23158 12177 244563 700000) 0 nil]) ((401 . 415)) nil (23158 12177 244585 200000) 0 nil]) ((397 . 401) (#("    " 0 4 (fontified nil)) . 396) (396 . 400) (396 . 397) (#("    " 0 4 (fontified t face (my-face-u-1))) . 396) 400) nil (23158 12177 244598 800000) 0 nil]) ((395 . 400) (t 23158 12064 269059 400000)) nil (23158 12177 244609 800000) 0 nil]) ((7478 . 7481)) nil (23158 12063 988010 900000) 0 nil]) ((#("lineno" 0 6 (fontified t)) . 7478) (undo-tree-id2321 . -6) (t 23158 12051 569295 800000)) nil (23158 12063 988112 900000) 0 nil]) ((#(".length" 0 7 (fontified t)) . 7484) (undo-tree-id2320 . -7) (t 23158 12033 479359 600000)) nil (23158 12051 283432 0) 0 nil]) ((#("a" 0 1 (fontified t)) . -7491) (t 23158 12032 750047 500000)) nil (23158 12033 140309 700000) 0 nil]) ((7484 . 7492) (t 23158 12020 769685 800000)) nil (23158 12032 450098 0) 0 nil]) ((7466 . 7486)) nil (23158 12020 481019 100000) 0 nil]) ((7459 . 7466)) nil (23158 12020 481047 800000) 0 nil]) ((#("    
" 0 4 (fontified t face (my-face-u-1)) 4 5 (fontified t)) . 7466) (undo-tree-id2316 . -5) (undo-tree-id2317 . -5) (undo-tree-id2318 . -5)) nil (23158 12020 481158 0) 0 nil]) ((7465 . 7470)) nil (23158 12020 481178 0) 0 nil]) ((7459 . 7464)) nil (23158 12020 481189 700000) 0 nil]) ((7457 . 7460)) nil (23158 12020 481200 300000) 0 nil]) ((#(" " 0 1 (fontified t)) . -7456)) nil (23158 12020 481210 900000) 0 nil]) ((7451 . 7452)) nil (23158 12020 481223 0) 0 nil]) ((7444 . 7455)) nil (23158 12020 481234 700000) 0 nil]) ((#("lic" 0 3 (fontified t)) . 7444) (undo-tree-id2319 . -3)) nil (23158 12020 481256 200000) 0 nil]) ((7444 . 7448)) nil (23158 12020 481269 0) 0 nil]) ((7440 . 7445)) nil (23158 12020 481489 200000) 0 nil]) ((7435 . 7440) (t 23158 11633 772814 100000)) nil (23158 12020 481531 500000) 0 nil]) ((1896 . 1897)) nil (23158 11633 416839 600000) 0 nil]) ((1880 . 1895)) nil (23158 11633 416860 0) 0 nil]) ((1864 . 1879)) nil (23158 11633 416869 400000) 0 nil]) ((1863 . 1865)) nil (23158 11633 416876 200000) 0 nil]) ((1859 . 1862)) nil (23158 11633 416883 0) 0 nil]) ((#("llg" 0 3 (fontified t)) . 1859) (undo-tree-id2315 . -3)) nil (23158 11633 416947 600000) 0 nil]) ((1851 . 1864)) nil (23158 11633 416958 500000) 0 nil]) ((1846 . 1851) (t 23157 41732 489133 500000)) nil (23158 11633 416966 100000) 0 nil] [nil ([nil nil ((1917 . 1919)) ((#("\"\"" 0 2 (fontified t face font-lock-string-face)) . 1917) (t 23157 41721 766399 0)) (23157 41721 533167 500000) 0 nil]) ((#("elem.$source()" 0 14 (fontified t)) . 1917) (undo-tree-id2308 . -14) (undo-tree-id2309 . 1) (undo-tree-id2310 . -14) (undo-tree-id2311 . 2) (undo-tree-id2312 . -13) 1931 (t 23157 40781 747344 700000)) ((1917 . 1931)) (23157 41731 189895 700000) 0 nil]) ((1789 . 1836) (#(" ...lineno, update: false" 0 1 (fontified t) 1 11 (fontified t) 11 20 (fontified t) 20 25 (fontified t face font-lock-constant-face)) . 1789) (undo-tree-id2314 . -11) 1735 (t 23157 40779 126415 200000)) nil (23157 41731 556698 800000) 0 nil]) ((#("     " 0 5 (fontified t)) . -1815) 1814) nil (23157 40778 951417 300000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1814) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1)) nil (23157 40778 951488 600000) 0 nil]) ((#("         " 0 9 (fontified t)) . -1790) 1789) nil (23157 40778 951497 700000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1789) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1)) nil (23157 40778 951518 100000) 0 nil]) ((#("       " 0 7 (fontified t)) . -1811) 1810) nil (23157 40778 951521 500000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1810) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (t 23157 40776 66571 900000)) nil (23157 40778 951556 600000) 0 nil]) ((1790 . 1800) (#("        " 0 8 (fontified nil)) . 1790) (1798 . 1808)) nil (23157 40775 873650 700000) 0 nil]) ((1789 . 1798)) nil (23157 40775 873673 300000) 0 nil]) ((#("        min,
        max,
" 0 26 (fontified t)) . 1790) (undo-tree-id2286 . -13) (undo-tree-id2287 . -13) (undo-tree-id2288 . -26) (undo-tree-id2289 . -26) (undo-tree-id2290 . -26) (undo-tree-id2291 . -26) 1816 (t 23157 40747 563985 400000)) nil (23157 40775 873765 500000) 0 nil]) ((1689 . 5301) (#("'admonition' || elem.context === \"example\") {
      return this.convertElementList(elem.$blocks(), {        min,　      max,
      update: false
    });
    }
    return [];
  }

  convertDocument(elem, lineno) {
    const raw = elem.$source();
    let children = this.convertElementList(elem.$blocks(), lineno);
    if (!elem.$header()[\"$nil?\"]()) {
      children = [this.convertHeader(elem.$header(), lineno), ...children];
    }
    if (children.length === 0) {
      return [];
    }
    const loc = {
      start: children[0].loc.start,
      end: children[children.length - 1].loc.end
    };
    const range = this.locationToRange(loc);
    return [{ type: \"Document\", children, loc, range, raw }];
  }

  convertHeader(elem, lineno) {
    const raw = elem.title;
    const loc = this.findLocation([raw], lineno);
    const range = this.locationToRange(loc);
    return {
      type: \"Header\",
      depth: elem.$level() + 1,
      children: [{ type: \"Str\", value: elem.title, loc, range, raw }],
      loc,
      range,
      raw
    };
  }

  convertSection(elem, lineno) {
    const raw = elem.title;
    const loc = this.findLocation([raw], lineno);
    if (!loc) {
      return [];
    }
    const range = this.locationToRange(loc);
    const header = {
      type: \"Header\",
      depth: elem.$level() + 1,
      children: [{ type: \"Str\", value: elem.title, loc, range, raw }],
      loc,
      range,
      raw
    };
    const children = this.convertElementList(elem.$blocks(), lineno);
    return [header, ...children];
  }

  convertParagraph(elem, { min, max }) {
    const raw = elem.$source();
    const loc = this.findLocation(elem.$lines(), { min, max });
    if (!loc) {
      return [];
    }
    const range = this.locationToRange(loc);
    return [
      {
        type: \"Paragraph\",
        children: [{ type: \"Str\", value: raw, loc, range, raw }],
        loc,
        range,
        raw
      }
    ];
  }

  convertQuote(elem, { min, max }) {
    const raw = \"\"; // TODO: fix asciidoc/asciidoc
    const children = this.convertElementList(elem.$blocks(), {
      min,
      max,
      update: false
    });
    if (children.length === 0) {
      return [];
    }
    return [
      { type: \"BlockQuote\", children, raw, ...this.locAndRangeFrom(children) }
    ];
  }

  convertListing(elem, { min, max }) {
    const raw = elem.$source();
    const loc = this.findLocation(elem.$lines(), { min, max });
    if (!loc) {
      return [];
    }
    const range = this.locationToRange(loc);
    return [{ type: \"CodeBlock\", value: raw, loc, range, raw }];
  }

  convertList(elem, { min, max }) {
    const raw = \"\"; // TODO: fix asciidoc/asciidoc
    const children = this.convertElementList(elem.$blocks(), {
      min,
      max,
      update: false
    });
    if (children.length === 0) {
      return [];
    }
    return [{ type: \"List\", children, raw, ...this.locAndRangeFrom(children) }];
  }

  convertDefinitionList(elem, { min, max }) {
    const raw = \"\"; // TODO: fix asciidoc/asciidoc
    const concat = Array.prototype.concat;
    const blocks = concat.apply(
      [],
      elem.$blocks().map(([terms, item]) => [...terms, item])
    );
    const children = this.convertElementList(blocks, {
      min,
      max,
      update: false
    });
    if (children.length === 0) {
      return [];
    }
    return [{ type: \"List\", children, raw, ...this.locAndRangeFrom(children) }];
  }

  convertListItem(elem, lineno) {
    const raw = \"\"; // TODO: fix asciidoc/asciidoc
    let children = this.convertElementList(elem.$blocks(), lineno);
    if (!elem.text['$nil?'" 0 12 (face font-lock-string-face) 27 28 (rear-nonsticky t) 33 42 (face font-lock-string-face) 52 58 (face font-lock-keyword-face) 59 63 (face font-lock-constant-face) 112 113 (face (my-face-b-1)) 138 143 (face font-lock-constant-face) 150 151 (rear-nonsticky t) 162 168 (face font-lock-keyword-face) 216 221 (face font-lock-keyword-face) 222 225 (face font-lock-variable-name-face) 248 251 (face font-lock-keyword-face) 252 260 (face font-lock-variable-name-face) 263 267 (face font-lock-constant-face) 316 318 (face font-lock-keyword-face) 336 343 (face font-lock-string-face) 368 372 (face font-lock-constant-face) 436 438 (face font-lock-keyword-face) 471 477 (face font-lock-keyword-face) 492 497 (face font-lock-keyword-face) 498 501 (face font-lock-variable-name-face) 602 607 (face font-lock-keyword-face) 608 613 (face font-lock-variable-name-face) 616 620 (face font-lock-constant-face) 647 653 (face font-lock-keyword-face) 663 673 (face font-lock-string-face) 746 751 (face font-lock-keyword-face) 752 755 (face font-lock-variable-name-face) 774 779 (face font-lock-keyword-face) 780 783 (face font-lock-variable-name-face) 786 790 (face font-lock-constant-face) 824 829 (face font-lock-keyword-face) 830 835 (face font-lock-variable-name-face) 838 842 (face font-lock-constant-face) 869 875 (face font-lock-keyword-face) 890 898 (face font-lock-string-face) 957 962 (face font-lock-string-face) 1086 1091 (face font-lock-keyword-face) 1092 1095 (face font-lock-variable-name-face) 1114 1119 (face font-lock-keyword-face) 1120 1123 (face font-lock-variable-name-face) 1126 1130 (face font-lock-constant-face) 1164 1166 (face font-lock-keyword-face) 1182 1188 (face font-lock-keyword-face) 1203 1208 (face font-lock-keyword-face) 1209 1214 (face font-lock-variable-name-face) 1217 1221 (face font-lock-constant-face) 1248 1253 (face font-lock-keyword-face) 1254 1260 (face font-lock-variable-name-face) 1277 1285 (face font-lock-string-face) 1344 1349 (face font-lock-string-face) 1435 1440 (face font-lock-keyword-face) 1441 1449 (face font-lock-variable-name-face) 1452 1456 (face font-lock-constant-face) 1505 1511 (face font-lock-keyword-face) 1585 1590 (face font-lock-keyword-face) 1591 1594 (face font-lock-variable-name-face) 1617 1622 (face font-lock-keyword-face) 1623 1626 (face font-lock-variable-name-face) 1629 1633 (face font-lock-constant-face) 1681 1683 (face font-lock-keyword-face) 1699 1705 (face font-lock-keyword-face) 1720 1725 (face font-lock-keyword-face) 1726 1731 (face font-lock-variable-name-face) 1734 1738 (face font-lock-constant-face) 1765 1771 (face font-lock-keyword-face) 1796 1807 (face font-lock-string-face) 1836 1841 (face font-lock-string-face) 1976 1981 (face font-lock-keyword-face) 1982 1985 (face font-lock-variable-name-face) 1988 1990 (face font-lock-string-face) 1992 1995 (face font-lock-comment-delimiter-face) 1995 2023 (face font-lock-comment-face) 2027 2032 (face font-lock-keyword-face) 2033 2041 (face font-lock-variable-name-face) 2044 2048 (face font-lock-constant-face) 2122 2127 (face font-lock-constant-face) 2140 2142 (face font-lock-keyword-face) 2175 2181 (face font-lock-keyword-face) 2196 2202 (face font-lock-keyword-face) 2219 2231 (face font-lock-string-face) 2251 2255 (face font-lock-constant-face) 2339 2344 (face font-lock-keyword-face) 2345 2348 (face font-lock-variable-name-face) 2371 2376 (face font-lock-keyword-face) 2377 2380 (face font-lock-variable-name-face) 2383 2387 (face font-lock-constant-face) 2435 2437 (face font-lock-keyword-face) 2453 2459 (face font-lock-keyword-face) 2474 2479 (face font-lock-keyword-face) 2480 2485 (face font-lock-variable-name-face) 2488 2492 (face font-lock-constant-face) 2519 2525 (face font-lock-keyword-face) 2535 2546 (face font-lock-string-face) 2625 2630 (face font-lock-keyword-face) 2631 2634 (face font-lock-variable-name-face) 2637 2639 (face font-lock-string-face) 2641 2644 (face font-lock-comment-delimiter-face) 2644 2672 (face font-lock-comment-face) 2676 2681 (face font-lock-keyword-face) 2682 2690 (face font-lock-variable-name-face) 2693 2697 (face font-lock-constant-face) 2771 2776 (face font-lock-constant-face) 2789 2791 (face font-lock-keyword-face) 2824 2830 (face font-lock-keyword-face) 2845 2851 (face font-lock-keyword-face) 2861 2867 (face font-lock-string-face) 2887 2891 (face font-lock-constant-face) 2977 2982 (face font-lock-keyword-face) 2983 2986 (face font-lock-variable-name-face) 2989 2991 (face font-lock-string-face) 2993 2996 (face font-lock-comment-delimiter-face) 2996 3024 (face font-lock-comment-face) 3028 3033 (face font-lock-keyword-face) 3034 3040 (face font-lock-variable-name-face) 3049 3058 (face font-lock-constant-face) 3071 3076 (face font-lock-keyword-face) 3077 3083 (face font-lock-variable-name-face) 3183 3188 (face font-lock-keyword-face) 3189 3197 (face font-lock-variable-name-face) 3200 3204 (face font-lock-constant-face) 3270 3275 (face font-lock-constant-face) 3288 3290 (face font-lock-keyword-face) 3323 3329 (face font-lock-keyword-face) 3344 3350 (face font-lock-keyword-face) 3360 3366 (face font-lock-string-face) 3386 3390 (face font-lock-constant-face) 3464 3469 (face font-lock-keyword-face) 3470 3473 (face font-lock-variable-name-face) 3476 3478 (face font-lock-string-face) 3480 3483 (face font-lock-comment-delimiter-face) 3483 3511 (face font-lock-comment-face) 3515 3518 (face font-lock-keyword-face) 3519 3527 (face font-lock-variable-name-face) 3530 3534 (face font-lock-constant-face) 3577 3578 (rear-nonsticky t) 3583 3585 (face font-lock-keyword-face) 3598 3605 (face font-lock-string-face)) . 1689) (undo-tree-id2292 . -158) (undo-tree-id2293 . -151) (undo-tree-id2294 . -152) (undo-tree-id2295 . -16) (undo-tree-id2296 . -152) (undo-tree-id2297 . -151) (undo-tree-id2298 . -151) (undo-tree-id2299 . -59) (undo-tree-id2300 . -158) 180 (t 23157 40743 145466 400000)) nil (23157 40775 873832 700000) 0 nil]) ((#("\201\212" 0 2 (fontified t)) . 1) (undo-tree-id2283 . -2) (undo-tree-id2284 . -2) (undo-tree-id2285 . -2)) nil (23157 40742 927710 700000) 0 nil]) ((1 . 3) (t 23157 40738 682249 600000)) nil (23157 40742 927719 400000) 0 nil]) ((#("
  convertAdmonition(elem, { min, max }) {
    return 
  }
" 0 1 (fontified t) 1 3 (fontified t) 3 19 (fontified t) 19 20 (rear-nonsticky t fontified t) 20 40 (fontified t) 40 43 (fontified t) 43 47 (fontified t) 47 53 (fontified t face font-lock-keyword-face) 53 54 (fontified t face (my-face-u-1)) 54 55 (fontified t) 55 58 (fontified t) 58 59 (fontified t)) . 7291) (undo-tree-id2237 . -59) (undo-tree-id2238 . -54) (undo-tree-id2239 . -55) (undo-tree-id2240 . -55) (undo-tree-id2241 . -59) (undo-tree-id2242 . -59) (undo-tree-id2243 . -43) (undo-tree-id2244 . -43) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -43) (undo-tree-id2248 . -55) (undo-tree-id2249 . -54) (undo-tree-id2250 . -54) (undo-tree-id2251 . -54) (undo-tree-id2252 . -54) (undo-tree-id2253 . -59) (undo-tree-id2254 . -59)) nil (23157 40738 473325 400000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1847) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1)) nil (23157 40738 473377 500000) 0 nil]) ((#("    console.log(elem.context);" 0 30 (fontified t)) . 1847) (undo-tree-id2259 . -30)) nil (23157 40738 473398 300000) 0 nil]) ((1801 . 1802)) nil (23157 40738 473409 600000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1801) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1)) nil (23157 40738 473427 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -1789) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1)) nil (23157 40738 473445 800000) 0 nil]) ((1790 . 1798) (#("      " 0 6 (fontified t)) . 1790)) nil (23157 40738 473456 400000) 0 nil]) ((#("this.convert(elem, lineno);" 0 4 (fontified t face font-lock-constant-face) 4 26 (fontified t) 26 27 (fontified t)) . 1839) (undo-tree-id2264 . -12) (undo-tree-id2265 . -27)) nil (23157 40738 473476 0) 0 nil]) ((nil rear-nonsticky nil 1838 . 1839) (nil fontified nil 1832 . 1839) (nil fontified nil 1831 . 1832) (nil fontified nil 1826 . 1831) (nil fontified nil 1812 . 1826) (nil fontified nil 1801 . 1812) (nil fontified nil 1790 . 1801) (nil fontified nil 1789 . 1790) (nil fontified nil 1788 . 1789) (nil fontified nil 1787 . 1788) (nil fontified nil 1752 . 1787) (nil fontified nil 1748 . 1752) (1748 . 1839)) nil (23157 40738 473498 700000) 0 nil]) ((#("this.convertElementList(elem.$blocks(), {
      min,
      max,
      update: false
    });" 0 4 (fontified t face font-lock-constant-face) 4 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 53 (fontified t) 53 64 (fontified t) 64 78 (fontified t) 78 83 (fontified t face font-lock-constant-face) 83 84 (fontified t) 84 91 (fontified t)) . 7311) (undo-tree-id2266 . -84) (undo-tree-id2267 . -42) (undo-tree-id2268 . -42) (undo-tree-id2269 . -53) (undo-tree-id2270 . -53) (undo-tree-id2271 . -64) (undo-tree-id2272 . -64) (undo-tree-id2273 . -84) (undo-tree-id2274 . -84) (undo-tree-id2275 . -64) (undo-tree-id2276 . -64) (undo-tree-id2277 . -91) 7402) nil (23157 40738 473581 400000) 0 nil]) ((#("A" 0 1 (fontified t)) . -1760)) nil (23157 40738 473594 200000) 0 nil]) ((#("d" 0 1 (fontified t)) . -1761)) nil (23157 40738 473600 600000) 0 nil]) ((#("m" 0 1 (fontified t)) . -1762)) nil (23157 40738 473607 400000) 0 nil]) ((#("o" 0 1 (fontified t)) . -1763)) nil (23157 40738 473614 200000) 0 nil]) ((#("n" 0 1 (fontified t)) . -1764)) nil (23157 40738 473620 300000) 0 nil]) ((#("i" 0 1 (fontified t)) . -1765)) nil (23157 40738 473626 700000) 0 nil]) ((#("t" 0 1 (fontified t)) . -1766)) nil (23157 40738 473633 500000) 0 nil]) ((#("i" 0 1 (fontified t)) . -1767)) nil (23157 40738 473639 900000) 0 nil]) ((#("o" 0 1 (fontified t)) . -1768)) nil (23157 40738 473646 700000) 0 nil]) ((#("n" 0 1 (fontified t)) . -1769)) nil (23157 40738 473653 500000) 0 nil]) ((#("    } else if (elem.context === 'admonition') {
      return this.convertAdmonition(elem, lineno);
" 0 5 (fontified t) 5 6 (fontified t) 6 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t) 11 13 (fontified t face font-lock-keyword-face) 13 32 (fontified t) 32 44 (fontified t face font-lock-string-face) 44 45 (fontified t) 45 48 (fontified t) 48 54 (fontified t) 54 60 (fontified t face font-lock-keyword-face) 60 61 (fontified t) 61 65 (fontified t face font-lock-constant-face) 65 97 (fontified t) 97 98 (fontified t) 98 99 (fontified t rear-nonsticky t)) . 1786) (undo-tree-id2278 . -48) (undo-tree-id2279 . -48) (undo-tree-id2280 . -99) (undo-tree-id2281 . -99) (undo-tree-id2282 . -99) 1885) nil (23157 40738 473675 0) 0 nil]) ((1723 . 1730)) nil (23157 40738 473683 300000) 0 nil]) ((#("example" 0 7 (fontified t face font-lock-string-face)) . 1723)) nil (23157 40738 473689 400000) 0 nil]) ((1723 . 1730)) nil (23157 40738 473696 200000) 0 nil]) ((1717 . 1724)) nil (23157 40738 473702 600000) 0 nil]) ((nil rear-nonsticky nil 1716 . 1717) (nil fontified nil 1705 . 1717) (1705 . 1717)) nil (23157 40738 473710 100000) 0 nil]) ((1702 . 1705)) nil (23157 40738 473725 300000) 0 nil]) ((#("~" 0 1 (fontified t)) . -1702)) nil (23157 40738 473732 0) 0 nil]) ((#("~" 0 1 (fontified t)) . -1703)) nil (23157 40738 473739 200000) 0 nil]) ((#(" " 0 1 (fontified t)) . -1704)) nil (23157 40738 473745 600000) 0 nil]) ((1701 . 1705)) nil (23157 40738 473752 800000) 0 nil]) ((nil rear-nonsticky nil 1854 . 1855) (nil fontified nil 1854 . 1855) (nil fontified nil 1853 . 1854) (nil fontified nil 1821 . 1853) (nil fontified nil 1817 . 1821) (nil fontified nil 1816 . 1817) (nil fontified nil 1810 . 1816) (nil fontified nil 1804 . 1810) (nil fontified nil 1801 . 1804) (nil fontified nil 1800 . 1801) (nil fontified nil 1788 . 1800) (nil fontified nil 1769 . 1788) (nil fontified nil 1767 . 1769) (nil fontified nil 1766 . 1767) (nil fontified nil 1762 . 1766) (nil fontified nil 1761 . 1762) (nil fontified nil 1756 . 1761) (1756 . 1855) (t 23157 40634 555002 300000)) nil (23157 40738 473772 800000) 0 nil] [nil nil ((1762 . 1763) (t 23157 40634 555002 300000)) ((#("p" 0 1 (fontified t)) . 1762)) (23157 40691 636161 900000) 0 nil]) ((1778 . 1790)) nil (23157 40691 639833 600000) 0 nil]) ((1766 . 1780)) nil (23157 40634 437481 300000) 0 nil]) ((1761 . 1766) (t 23157 40192 893421 200000)) nil (23157 40634 437484 700000) 0 nil]) ((#("    
    if (children.length === 0) {
      return [];
    }
    return [;
" 0 4 (fontified t face (my-face-u-1)) 4 5 (fontified t) 5 9 (fontified t) 9 11 (fontified t face font-lock-keyword-face) 11 38 (fontified t) 38 44 (fontified t) 44 50 (fontified t face font-lock-keyword-face) 50 61 (fontified t) 61 65 (fontified t) 65 71 (fontified t face font-lock-keyword-face) 71 74 (fontified t) 74 75 (fontified t)) . 7352) (undo-tree-id2221 . -55) (undo-tree-id2222 . -55) (undo-tree-id2223 . -38) (undo-tree-id2224 . -38) (undo-tree-id2225 . -5) (undo-tree-id2226 . -5) (undo-tree-id2227 . -61) (undo-tree-id2228 . -61) (undo-tree-id2229 . -61) (undo-tree-id2230 . -61) (undo-tree-id2231 . -75) (undo-tree-id2232 . -75) (undo-tree-id2233 . -61) (undo-tree-id2234 . -61) (undo-tree-id2235 . -75) (undo-tree-id2236 . -75) 7427) nil (23157 40192 758091 700000) 0 nil] [nil ([nil nil ((#(" " 0 1 (fontified t face (my-face-u-1))) . -7299)) ((7299 . 7300)) (23157 40189 978189 100000) 0 nil]) ((#("{" 0 1 (fontified t)) . -7300)) ((7300 . 7301)) (23157 40189 979502 300000) 0 nil]) ((7253 . 7260)) nil (23157 40190 194093 400000) 0 nil]) ((#(" " 0 1 (fontified t)) . -7253) 7249) nil (23157 40189 978233 700000) 0 nil]) ((#("
" 0 1 (fontified t)) . 7249) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1)) nil (23157 40189 978281 200000) 0 nil]) ((#("    const raw = \"\"; // TODO: fix asciidoc/asciidoc" 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 13 (fontified t face font-lock-variable-name-face) 13 16 (fontified t) 16 18 (fontified t face font-lock-string-face) 18 20 (fontified t) 20 23 (fontified t face font-lock-comment-delimiter-face) 23 50 (fontified t face font-lock-comment-face)) . 7249) (undo-tree-id2201 . -50)) nil (23157 40189 978312 500000) 0 nil]) ((#("r" 0 1 (fontified t)) . -7304)) nil (23157 40189 978322 300000) 0 nil]) ((#("t" 0 1 (fontified t)) . -7305)) nil (23157 40189 978330 200000) 0 nil]) ((7304 . 7306)) nil (23157 40189 978338 200000) 0 nil]) ((#("=" 0 1 (fontified t)) . 7304)) nil (23157 40189 978345 0) 0 nil]) ((#(" " 0 1 (fontified t)) . 7304)) nil (23157 40189 978352 500000) 0 nil]) ((#(" children" 0 1 (fontified t) 1 9 (fontified t)) . 7304) (undo-tree-id2202 . -9)) nil (23157 40189 978408 400000) 0 nil]) ((#("const" 0 5 (fontified t face font-lock-keyword-face)) . 7304) (undo-tree-id2203 . -5)) nil (23157 40189 978423 100000) 0 nil]) ((7412 . 7417)) nil (23157 40189 978430 700000) 0 nil]) ((#("]" 0 1 (fontified t)) . -7481) (undo-tree-id2204 . 1) (undo-tree-id2205 . -1)) nil (23157 40189 978445 800000) 0 nil]) ((#("
" 0 1 (rear-nonsticky t fontified t)) . 7469) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1)) nil (23157 40189 978480 100000) 0 nil]) ((#("    return [{ type: \"List\", children, raw, ...this.locAndRangeFrom(children) }];" 0 4 (fontified t) 4 10 (fontified t face font-lock-keyword-face) 10 20 (fontified t) 20 26 (fontified t face font-lock-string-face) 26 46 (fontified t) 46 50 (fontified t face font-lock-constant-face) 50 80 (fontified t)) . 7469) (undo-tree-id2213 . -80)) nil (23157 40189 978495 600000) 0 nil]) ((7234 . 7244)) nil (23157 40189 978504 300000) 0 nil]) ((7233 . 7235)) nil (23157 40189 978514 100000) 0 nil]) ((#("lineno" 0 6 (fontified t)) . 7233) (undo-tree-id2214 . -6)) nil (23157 40189 978525 500000) 0 nil]) ((#("
" 0 1 (fontified t)) . 7544) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1)) nil (23157 40189 978550 0) 0 nil]) ((#("    console.log(elem.$blocks()[0].$lineno());" 0 45 (fontified t)) . 7544) (undo-tree-id2220 . -45)) nil (23157 40189 978562 100000) 0 nil]) ((nil rear-nonsticky nil 7543 . 7544) (nil fontified nil 7513 . 7544) (nil fontified nil 7509 . 7513) (nil fontified nil 7489 . 7509) (nil fontified nil 7483 . 7489) (nil fontified nil 7473 . 7483) (nil fontified nil 7467 . 7473) (nil fontified nil 7463 . 7467) (nil fontified nil 7452 . 7463) (nil fontified nil 7446 . 7452) (nil fontified nil 7413 . 7446) (nil fontified nil 7411 . 7413) (nil fontified nil 7407 . 7411) (nil fontified nil 7399 . 7407) (nil fontified nil 7398 . 7399) (nil fontified nil 7393 . 7398) (nil fontified nil 7379 . 7393) (nil fontified nil 7319 . 7379) (nil fontified nil 7315 . 7319) (nil fontified nil 7312 . 7315) (nil fontified nil 7304 . 7312) (nil fontified nil 7303 . 7304) (nil fontified nil 7298 . 7303) (nil fontified nil 7294 . 7298) (nil fontified nil 7266 . 7294) (nil fontified nil 7263 . 7266) (nil fontified nil 7261 . 7263) (nil fontified nil 7259 . 7261) (nil fontified nil 7256 . 7259) (nil fontified nil 7253 . 7256) (nil fontified nil 7252 . 7253) (nil fontified nil 7247 . 7252) (nil fontified nil 7243 . 7247) (7243 . 7544) (t 23157 40161 365770 400000)) nil (23157 40189 978596 800000) 0 nil]) ((7286 . 7288)) nil (23157 40161 173195 400000) 0 nil]) ((7247 . 7259)) nil (23157 40161 173222 200000) 0 nil]) ((7264 . 7274)) nil (23157 40161 173237 300000) 0 nil]) ((7262 . 7263)) nil (23157 40161 173247 500000) 0 nil]) ((7251 . 7263)) nil (23157 40161 173258 100000) 0 nil]) ((#("b" 0 1 (fontified t)) . -7251)) nil (23157 40161 173267 600000) 0 nil]) ((#("." 0 1 (fontified t)) . -7252)) nil (23157 40161 173279 300000) 0 nil]) ((7247 . 7253)) nil (23157 40161 173289 500000) 0 nil]) ((7242 . 7247)) nil (23157 40161 173300 800000) 0 nil]) ((#("
" 0 1 (fontified t)) . 7243) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1)) nil (23157 40161 173341 600000) 0 nil]) ((#("    console.log(elem.blocks);" 0 29 (fontified t)) . 7243) (t 23157 40096 671446 100000)) nil (23157 40161 173354 400000) 0 nil]) ((7267 . 7270)) nil (23157 40096 474402 200000) 0 nil]) ((#("k" 0 1 (fontified t)) . -7267)) nil (23157 40096 474429 800000) 0 nil]) ((7264 . 7268)) nil (23157 40096 474441 500000) 0 nil]) ((#("lines" 0 5 (fontified t)) . 7264) (undo-tree-id2195 . -5) (t 23157 40092 833593 100000)) nil (23157 40096 474562 300000) 0 nil]) ((7263 . 7269)) nil (23157 40092 614867 100000) 0 nil]) ((#(")" 0 1 (fontified t)) . 7263)) nil (23157 40092 614894 300000) 0 nil]) ((#("(" 0 1 (fontified t)) . 7263) (undo-tree-id2192 . 1) (undo-tree-id2193 . -1)) nil (23157 40092 615058 900000) 0 nil]) ((#(".$source" 0 8 (fontified t)) . 7263) (undo-tree-id2194 . -8) (t 23157 40081 989275 500000)) nil (23157 40092 615087 600000) 0 nil]) ((#("
" 0 1 (fontified t rear-nonsticky t)) . 1705) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1)) nil (23157 40081 741934 600000) 0 nil]) ((#("    console.log(elem.context)" 0 29 (fontified t)) . 1705) (undo-tree-id2191 . -29) (t 23157 40078 147705 500000)) nil (23157 40081 742013 100000) 0 nil]) ((nil rear-nonsticky nil 1734 . 1735) (nil fontified nil 1734 . 1735) (nil fontified nil 1705 . 1734) (1705 . 1735)) nil (23157 40077 881898 400000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1762) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1)) nil (23157 40077 882136 600000) 0 nil]) ((#("    console.log(elem.context)" 0 29 (fontified t)) . 1762) (undo-tree-id2185 . -29) (t 23157 40074 144221 900000)) nil (23157 40077 882159 300000) 0 nil]) ((1789 . 1790)) nil (23157 40073 945378 900000) 0 nil]) ((1778 . 1789)) nil (23157 40073 945405 700000) 0 nil]) ((1766 . 1779)) nil (23157 40073 945419 700000) 0 nil]) ((1761 . 1766) (t 23157 40022 119076 400000)) nil (23157 40073 945432 900000) 0 nil]) ((#("
" 0 1 (fontified t)) . 7243) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (t 23157 40020 71692 800000)) nil (23157 40021 898403 500000) 0 nil]) ((#("    " 0 4 (fontified nil)) . 7243) (7243 . 7247) (7243 . 7244) (t 23157 40003 697962 500000)) nil (23157 40019 881925 200000) 0 nil]) ((7264 . 7273)) nil (23157 40003 531319 200000) 0 nil]) ((#("4source" 0 7 (fontified t)) . 7264) (undo-tree-id2176 . -7)) nil (23157 40003 531370 500000) 0 nil]) ((7263 . 7271) (t 23157 39958 536625 800000)) nil (23157 40003 531389 0) 0 nil] [nil ([nil nil ((#("
" 0 1 (fontified t)) . 7243) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1)) ((7243 . 7244)) (23157 39998 358922 100000) 0 nil]) ((#("    console.log(elem);" 0 22 (fontified t)) . 7243) (undo-tree-id2175 . -22) (t 23157 39958 536625 800000)) ((7243 . 7265)) (23157 39998 359570 800000) 0 nil]) ((7263 . 7264)) nil (23157 39998 988209 500000) 0 nil]) ((#("(" 0 1 (fontified t)) . -7263) (t 23157 39957 299809 100000)) nil (23157 39958 281994 100000) 0 nil]) ((7247 . 7265)) nil (23157 39957 45075 100000) 0 nil]) ((7242 . 7247)) nil (23157 39957 45094 300000) 0 nil]) ((7247 . 7257)) nil (23157 39957 45103 800000) 0 nil]) ((7242 . 7247)) nil (23157 39957 45110 600000) 0 nil]) ((7242 . 7245)) nil (23157 39957 45116 600000) 0 nil]) ((7240 . 7243)) nil (23157 39957 45122 600000) 0 nil]) ((7227 . 7239)) nil (23157 39957 45129 100000) 0 nil]) ((7226 . 7228)) nil (23157 39957 45135 500000) 0 nil]) ((nil rear-nonsticky nil 7225 . 7226) (nil fontified nil 7209 . 7226) (7209 . 7226)) nil (23157 39957 45144 500000) 0 nil]) ((7207 . 7209) (#("  " 0 2 (fontified nil)) . 7206) (7206 . 7208) (7206 . 7207) (#("  " 0 2 (fontified t face (my-face-u-1))) . 7206) 7208) nil (23157 39957 45157 0) 0 nil]) ((7205 . 7208)) nil (23157 39957 45166 800000) 0 nil]) ((#("    console.log(elem.context);
" 0 30 (fontified t) 30 31 (fontified t)) . 1762) (undo-tree-id2167 . -31) (undo-tree-id2168 . -31) (undo-tree-id2169 . -31) (undo-tree-id2170 . -31) (undo-tree-id2171 . -31) (t 23157 39821 427865 600000)) nil (23157 39957 45200 0) 0 nil] [nil ([nil nil ((#("
" 0 1 (fontified t)) . 1793) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1)) ((1793 . 1794)) (23157 39940 732779 600000) 0 nil]) ((#("    return [];" 0 4 (fontified t) 4 10 (fontified t face font-lock-keyword-face) 10 13 (fontified t) 13 14 (fontified t)) . 1793) (undo-tree-id2166 . -14) (t 23157 39821 427865 600000)) ((1793 . 1807)) (23157 39940 733284 400000) 0 nil]) ((#("." 0 1 (fontified t)) . -1754) (t 23157 39818 101494 400000)) nil (23157 39940 925484 100000) 0 nil]) ((1741 . 1753)) nil (23157 39817 868287 100000) 0 nil]) ((1732 . 1742)) nil (23157 39817 868308 200000) 0 nil]) ((#("o" 0 1 (fontified t)) . -1732)) nil (23157 39817 868317 600000) 0 nil]) ((1718 . 1733)) nil (23157 39817 868327 100000) 0 nil]) ((#("thsi" 0 4 (fontified t)) . 1718) (undo-tree-id2160 . -4)) nil (23157 39817 868421 800000) 0 nil]) ((1718 . 1723)) nil (23157 39817 868432 400000) 0 nil]) ((#("[" 0 1 (fontified t)) . -1718)) nil (23157 39817 868438 800000) 0 nil]) ((#("]" 0 1 (fontified t)) . -1719) (undo-tree-id2161 . 1) (undo-tree-id2162 . -1) (t 23157 39808 786296 300000)) nil (23157 39817 868503 800000) 0 nil]) ((#("o" 0 1 (fontified t)) . 1705) (undo-tree-id2159 . -1) (t 23157 39807 904500 400000)) nil (23157 39808 508783 900000) 0 nil] [nil nil ((nil fontified t 1709 . 1710) (#("o" 0 1 (fontified t)) . -1705) (1706 . 1711) 1706) ((#("olist" 0 5 (fontified nil)) . 1706) (undo-tree-id2158 . -5) (1705 . 1706)) (23157 39807 104091 500000) 0 nil]) ((1705 . 1706) (t 23157 39803 902348 100000)) nil (23157 39807 104777 900000) 0 nil]) ((1711 . 1721)) nil (23157 39803 722273 900000) 0 nil]) ((1704 . 1711)) nil (23157 39803 722309 0) 0 nil]) ((1704 . 1709)) nil (23157 39803 722322 600000) 0 nil]) ((1702 . 1705)) nil (23157 39803 722334 0) 0 nil]) ((1690 . 1700)) nil (23157 39803 722344 500000) 0 nil]) ((#("adomonition" 0 11 (fontified t face font-lock-string-face)) . 1690) (undo-tree-id2157 . -11)) nil (23157 39803 722488 0) 0 nil]) ((1693 . 1701)) nil (23157 39803 722505 0) 0 nil]) ((#("m" 0 1 (fontified t face font-lock-string-face)) . -1693)) nil (23157 39803 722516 0) 0 nil]) ((#("i" 0 1 (fontified t face font-lock-string-face)) . -1694)) nil (23157 39803 722527 700000) 0 nil]) ((1690 . 1695)) nil (23157 39803 722536 0) 0 nil]) ((1672 . 1691)) nil (23157 39803 722543 900000) 0 nil]) ((1662 . 1673) (t 23157 39764 109782 800000)) nil (23157 39803 722552 600000) 0 nil]) ((1692 . 1693)) nil (23157 39763 936790 700000) 0 nil]) ((1679 . 1691)) nil (23157 39763 936800 500000) 0 nil]) ((1667 . 1680)) nil (23157 39763 936803 900000) 0 nil]) ((1662 . 1667) (t 23157 39482 481758 700000)) nil (23157 39763 936806 900000) 0 nil]) ((5132 . 5134)) nil (23157 39482 234241 700000) 0 nil]) ((#("c" 0 1 (fontified t)) . -5123)) nil (23157 39482 234269 200000) 0 nil]) ((#("h" 0 1 (fontified t)) . -5124)) nil (23157 39482 234283 200000) 0 nil]) ((#("i" 0 1 (fontified t)) . -5125)) nil (23157 39482 234293 0) 0 nil]) ((#("l" 0 1 (fontified t)) . -5126)) nil (23157 39482 234303 200000) 0 nil]) ((#("d" 0 1 (fontified t)) . -5127)) nil (23157 39482 234311 900000) 0 nil]) ((#("r" 0 1 (fontified t)) . -5128)) nil (23157 39482 234320 600000) 0 nil]) ((#("e" 0 1 (fontified t)) . -5129)) nil (23157 39482 234328 900000) 0 nil]) ((#("n" 0 1 (fontified t)) . -5130)) nil (23157 39482 234337 600000) 0 nil]) ((#(" " 0 1 (fontified t)) . -5131)) nil (23157 39482 234345 900000) 0 nil]) ((#("=" 0 1 (fontified t)) . -5132)) nil (23157 39482 234354 600000) 0 nil]) ((#(" " 0 1 (fontified t)) . -5133)) nil (23157 39482 234362 500000) 0 nil]) ((5123 . 5134) (t 23157 39456 375 400000)) nil (23157 39482 234373 100000) 0 nil]) ((#("
" 0 1 (fontified t)) . 7199) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1)) nil (23157 39455 757628 300000) 0 nil]) ((#("    console.log(loc);" 0 21 (fontified t)) . 7199) (undo-tree-id2156 . -21) (t 23157 39441 907155 600000)) nil (23157 39455 757659 600000) 0 nil]) ((7203 . 7220)) nil (23157 39441 694265 900000) 0 nil]) ((7199 . 7203)) nil (23157 39441 694287 500000) 0 nil]) ((#("    console.log" 0 15 (fontified t)) . 7199) (undo-tree-id2152 . -15)) nil (23157 39441 694360 700000) 0 nil]) ((7203 . 7214)) nil (23157 39441 694373 900000) 0 nil]) ((7198 . 7203) (t 23157 39429 799833 600000)) nil (23157 39441 694386 0) 0 nil]) ((#("      console.log(elem.text);
" 0 6 (fontified t) 6 29 (fontified t) 29 30 (rear-nonsticky t fontified t)) . 5117) (undo-tree-id2146 . -30) (undo-tree-id2147 . -30) (undo-tree-id2148 . -30) (undo-tree-id2149 . -30) (undo-tree-id2150 . -30) (undo-tree-id2151 . -30) 5147 (t 23157 39418 157845 600000)) nil (23157 39429 600698 800000) 0 nil]) ((5117 . 5123) (#("    " 0 4 (fontified t)) . 5117)) nil (23157 39417 962858 600000) 0 nil]) ((nil fontified nil 5144 . 5145) (nil fontified nil 5117 . 5144) (5117 . 5145)) nil (23157 39417 962911 0) 0 nil]) ((#("    console.log(elem.text);
" 0 27 (fontified t) 27 28 (fontified t rear-nonsticky t)) . 5084) (undo-tree-id2139 . -28) (undo-tree-id2140 . -28) (undo-tree-id2141 . -28) (undo-tree-id2142 . -28) (undo-tree-id2143 . -28) (undo-tree-id2144 . -28) (undo-tree-id2145 . -28) 5112 (t 23157 39390 495050 300000)) nil (23157 39417 963071 900000) 0 nil]) ((5092 . 5111)) nil (23157 39390 287137 200000) 0 nil]) ((#("l" 0 1 (fontified t)) . -5092)) nil (23157 39390 287158 0) 0 nil]) ((5088 . 5093)) nil (23157 39390 287168 200000) 0 nil]) ((5084 . 5088)) nil (23157 39390 287175 0) 0 nil]) ((#("    console.log(children, lineno);" 0 34 (fontified t)) . 5084) (undo-tree-id2138 . -34) (t 23157 39353 977242 0)) nil (23157 39390 287273 200000) 0 nil]) ((5108 . 5116)) nil (23157 39353 728931 600000) 0 nil]) ((#("    
" 0 4 (fontified t face (my-face-u-1)) 4 5 (fontified t)) . 5111) (undo-tree-id2134 . -5) (undo-tree-id2135 . -5) (undo-tree-id2136 . -5) (undo-tree-id2137 . -5)) nil (23157 39353 729096 900000) 0 nil]) ((nil rear-nonsticky nil 5110 . 5111) (nil fontified nil 5110 . 5111) (nil fontified nil 5084 . 5110) (5084 . 5111)) nil (23157 39353 729120 0) 0 nil]) ((5083 . 5088) (t 23157 39344 450196 500000)) nil (23157 39353 729132 800000) 0 nil]) ((#("    console.log(children);
" 0 26 (fontified t) 26 27 (fontified t)) . 5084) (undo-tree-id2130 . -27) (undo-tree-id2131 . -27) (undo-tree-id2132 . -27) (undo-tree-id2133 . -27) 5111 (t 23157 39333 637656 0)) nil (23157 39344 254209 700000) 0 nil]) ((5108 . 5110)) nil (23157 39333 427412 900000) 0 nil]) ((5088 . 5108)) nil (23157 39333 427438 500000) 0 nil]) ((5083 . 5088)) nil (23157 39333 427449 900000) 0 nil]) ((#("      
" 0 6 (fontified t face (my-face-u-1)) 6 7 (fontified t)) . 5180) (undo-tree-id2113 . -7) (undo-tree-id2114 . -7) (undo-tree-id2115 . -7) (undo-tree-id2116 . -7) (undo-tree-id2117 . -7) (undo-tree-id2118 . -7) (undo-tree-id2119 . -7) (undo-tree-id2120 . -7)) nil (23157 39333 427699 800000) 0 nil]) ((5179 . 5186)) nil (23157 39333 427719 800000) 0 nil]) ((#("    } else {
      console.log(elem.$blocks().length);
" 0 5 (fontified t) 5 6 (fontified t) 6 10 (fontified t face font-lock-keyword-face) 10 13 (fontified t) 13 54 (fontified t) 54 55 (fontified t)) . 5180) (undo-tree-id2121 . -13) (undo-tree-id2122 . -13) (undo-tree-id2123 . -13) (undo-tree-id2124 . -13) (undo-tree-id2125 . -55) (undo-tree-id2126 . -55) (undo-tree-id2127 . -13) (undo-tree-id2128 . -55) (undo-tree-id2129 . -55) 5235 (t 23157 39317 860778 0)) nil (23157 39333 427831 600000) 0 nil]) ((5215 . 5232) (t 23157 39286 152440 100000)) nil (23157 39317 621446 500000) 0 nil]) ((#("    console.log(blocks);
" 0 24 (fontified t) 24 25 (fontified t)) . 4789) (undo-tree-id2108 . -25) (undo-tree-id2109 . -25) (undo-tree-id2110 . -25) (undo-tree-id2111 . -25) (undo-tree-id2112 . -25) (t 23157 39227 487776 100000)) nil (23157 39285 961133 400000) 0 nil]) ((4805 . 4811)) nil (23157 39227 262177 900000) 0 nil]) ((4793 . 4807)) nil (23157 39227 262204 300000) 0 nil]) ((4788 . 4793)) nil (23157 39227 262217 100000) 0 nil]) ((#("
" 0 1 (fontified t)) . 4478) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1)) nil (23157 39227 262381 400000) 0 nil]) ((#("    console.log(elem);" 0 22 (fontified t)) . 4478) (undo-tree-id2107 . -22) (t 23157 39201 480119 300000)) nil (23157 39227 262427 100000) 0 nil]) ((4494 . 4498)) nil (23157 39201 280704 200000) 0 nil]) ((4482 . 4496)) nil (23157 39201 280723 500000) 0 nil]) ((4477 . 4482) (t 23157 39183 254632 200000)) nil (23157 39201 280734 100000) 0 nil]) ((#("  console.log(JSON.stringify(ret));
  return ret;
" 0 35 (fontified t) 35 36 (fontified t) 36 38 (fontified t) 38 44 (fontified t face font-lock-keyword-face) 44 49 (fontified t) 49 50 (rear-nonsticky t fontified t)) . 9267) (undo-tree-id2098 . -36) (undo-tree-id2099 . -36) (undo-tree-id2100 . -50) (undo-tree-id2101 . -50) (undo-tree-id2102 . -50) (undo-tree-id2103 . -50) 9317) nil (23157 39183 47506 0) 0 nil]) ((9229 . 9236)) nil (23157 39183 47535 100000) 0 nil]) ((#("c" 0 1 (fontified t)) . -9229)) nil (23157 39183 47545 700000) 0 nil]) ((#("o" 0 1 (fontified t)) . -9230)) nil (23157 39183 47555 900000) 0 nil]) ((#("n" 0 1 (fontified t)) . -9231)) nil (23157 39183 47565 300000) 0 nil]) ((#("s" 0 1 (fontified t)) . -9232)) nil (23157 39183 47573 600000) 0 nil]) ((#("t" 0 1 (fontified t)) . -9233)) nil (23157 39183 47581 900000) 0 nil]) ((#(" " 0 1 (fontified t)) . -9234)) nil (23157 39183 47590 200000) 0 nil]) ((#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -9235)) nil (23157 39183 47599 300000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -9236)) nil (23157 39183 47608 700000) 0 nil]) ((#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -9237)) nil (23157 39183 47615 900000) 0 nil]) ((#(" " 0 1 (fontified nil)) . -9238)) nil (23157 39183 47621 600000) 0 nil]) ((#("=" 0 1 (fontified t)) . -9239)) nil (23157 39183 47628 0) 0 nil]) ((#("\\" 0 1 (fontified t)) . -9240)) nil (23157 39183 47633 700000) 0 nil]) ((9240 . 9241)) nil (23157 39183 47639 700000) 0 nil]) ((#(" " 0 1 (fontified t)) . -9240) (t 23157 39140 717041 700000)) nil (23157 39183 47669 500000) 0 nil]) ((9305 . 9307)) nil (23157 39140 493577 700000) 0 nil]) ((#(";" 0 1 (fontified t)) . -9305)) nil (23157 39140 493598 100000) 0 nil]) ((9294 . 9306)) nil (23157 39140 493609 800000) 0 nil]) ((9274 . 9294)) nil (23157 39140 493618 100000) 0 nil]) ((9271 . 9274) (t 23157 39026 115540 300000)) nil (23157 39140 493649 800000) 0 nil]) ((5211 . 5215)) nil (23157 39025 921704 100000) 0 nil]) ((5199 . 5213)) nil (23157 39025 921724 100000) 0 nil]) ((5192 . 5199)) nil (23157 39025 921733 200000) 0 nil]) ((5192 . 5197)) nil (23157 39025 921739 600000) 0 nil]) ((5185 . 5193) (t 23157 38847 963916 200000)) nil (23157 39025 921747 200000) 0 nil]) ((#("    const p =  ?  ;
" 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 11 (fontified t face font-lock-variable-name-face) 11 14 (fontified t) 14 18 (fontified t) 18 20 (fontified t)) . 5016) (undo-tree-id2090 . -20) (undo-tree-id2091 . -20) (undo-tree-id2092 . -14) (undo-tree-id2093 . -20) (undo-tree-id2094 . -14) (undo-tree-id2095 . -18) (undo-tree-id2096 . -20) (undo-tree-id2097 . -20) 5036) nil (23157 38847 780237 600000) 0 nil]) ((nil rear-nonsticky nil 5196 . 5197) (nil fontified nil 5162 . 5197) (nil fontified nil 5158 . 5162) (5158 . 5197)) nil (23157 38847 780267 800000) 0 nil] [nil nil ((nil rear-nonsticky nil 5197 . 5198) (nil fontified nil 5163 . 5198) (nil fontified nil 5159 . 5163) (5159 . 5198)) ((#("this.createParagraph(elem.text, lineno)" 0 4 (fontified nil face font-lock-constant-face) 4 38 (fontified nil) 38 39 (fontified nil rear-nonsticky nil)) . 5159) (undo-tree-id2084 . -39) (undo-tree-id2085 . 1) (undo-tree-id2086 . -39) (undo-tree-id2087 . 19) (undo-tree-id2088 . -21) (undo-tree-id2089 . -39) (nil rear-nonsticky t 5197 . 5198)) (23157 38845 501034 300000) 0 nil]) ((#("this.createParagraph(elem.text, lineno)" 0 4 (fontified t face font-lock-constant-face) 4 39 (fontified t)) . 5034) (undo-tree-id2061 . -39) (undo-tree-id2062 . 1) (undo-tree-id2063 . -39) (undo-tree-id2064 . 19) (undo-tree-id2065 . -21) (undo-tree-id2066 . -39) 5073) nil (23157 38845 501657 300000) 0 nil]) ((5190 . 5199)) nil (23157 38845 501087 200000) 0 nil]) ((#("child" 0 5 (fontified t)) . -5182) (5187 . 5195) 5187) nil (23157 38845 501094 700000) 0 nil]) ((5182 . 5187)) nil (23157 38845 501101 900000) 0 nil]) ((5175 . 5182)) nil (23157 38845 501106 800000) 0 nil]) ((5175 . 5180)) nil (23157 38845 501111 700000) 0 nil]) ((5173 . 5176)) nil (23157 38845 501117 0) 0 nil]) ((5151 . 5152)) nil (23157 38845 501121 500000) 0 nil]) ((#("!" 0 1 (fontified t)) . -5151) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1)) nil (23157 38845 501134 400000) 0 nil]) ((5151 . 5152)) nil (23157 38845 501141 200000) 0 nil]) ((nil rear-nonsticky nil 5170 . 5171) (nil fontified nil 5168 . 5171) (nil fontified nil 5161 . 5168) (nil fontified nil 5151 . 5161) (5151 . 5171)) nil (23157 38845 501148 400000) 0 nil]) ((5147 . 5152)) nil (23157 38845 501155 900000) 0 nil]) ((5143 . 5147)) nil (23157 38845 501161 200000) 0 nil]) ((#("elem.text['$nil?']()" 0 10 (fontified t) 10 17 (fontified t face font-lock-string-face) 17 20 (fontified t)) . 5030) (undo-tree-id2070 . -20) (undo-tree-id2071 . 1) (undo-tree-id2072 . -20) (undo-tree-id2073 . 2) (undo-tree-id2074 . -19) (undo-tree-id2075 . -20) 5050) nil (23157 38845 501183 500000) 0 nil]) ((#("    if (eoeml)" 0 4 (fontified t) 4 6 (fontified t face font-lock-keyword-face) 6 14 (fontified t)) . 5163)) nil (23157 38845 501191 0) 0 nil]) ((5171 . 5176)) nil (23157 38845 501197 800000) 0 nil]) ((5167 . 5172)) nil (23157 38845 501202 700000) 0 nil]) ((#("  " 0 2 (fontified t)) . -5099) 5099) nil (23157 38845 501208 800000) 0 nil]) ((#("    const blocks = 
" 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 16 (fontified t face font-lock-variable-name-face) 16 18 (fontified t) 18 19 (fontified t face (my-face-u-1)) 19 20 (fontified t)) . 5095) (undo-tree-id2076 . -20) (undo-tree-id2077 . -20) (undo-tree-id2078 . -20) (undo-tree-id2079 . -20)) nil (23157 38845 501225 400000) 0 nil]) ((5185 . 5189) (5115 . 5121) (#("    " 0 4 (fontified nil)) . 5115) (5182 . 5183)) nil (23157 38845 501236 0) 0 nil]) ((#("[p, ...blocks];" 0 15 (fontified t)) . 5182) (undo-tree-id2080 . 15) (undo-tree-id2081 . -1) (undo-tree-id2082 . 2) (undo-tree-id2083 . -14)) nil (23157 38845 501252 600000) 0 nil]) ((nil rear-nonsticky nil 5181 . 5182) (nil fontified nil 5138 . 5182) (nil fontified nil 5134 . 5138) (5134 . 5182)) nil (23157 38845 501261 600000) 0 nil]) ((#("this.convertElementList(elem.$blocks(), lineno);" 0 4 (fontified t face font-lock-constant-face) 4 48 (fontified t)) . 5114)) nil (23157 38845 501267 700000) 0 nil]) ((5167 . 5170)) nil (23157 38845 501273 700000) 0 nil]) ((#("const" 0 5 (fontified t face font-lock-keyword-face)) . 5167)) nil (23157 38845 501279 0) 0 nil] [nil nil ((#("elem.text['$nil?']() ?  " 0 10 (fontified t) 10 17 (fontified t face font-lock-string-face) 17 24 (fontified t)) . 5030) (undo-tree-id2056 . -24) (undo-tree-id2057 . -24)) ((5030 . 5054) (t 23157 38798 402345 200000)) (23157 38798 210291 900000) 0 nil]) ((#("[" 0 1 (fontified t)) . -5053)) nil (23157 38806 557319 500000) 0 nil]) ((#("]" 0 1 (fontified t)) . -5054) (undo-tree-id2059 . 1) (undo-tree-id2060 . -1)) nil (23157 38798 210375 700000) 0 nil]) ((#(" " 0 1 (fontified t)) . -5055)) nil (23157 38798 210385 500000) 0 nil]) ((5048 . 5056)) nil (23157 38798 210393 100000) 0 nil]) ((5041 . 5042)) nil (23157 38798 210398 400000) 0 nil]) ((5044 . 5045)) nil (23157 38798 210405 200000) 0 nil]) ((5041 . 5044)) nil (23157 38798 210411 600000) 0 nil]) ((5040 . 5042)) nil (23157 38798 210418 0) 0 nil]) ((5039 . 5041)) nil (23157 38798 210424 800000) 0 nil]) ((#("." 0 1 (fontified t)) . -5039)) nil (23157 38798 210431 600000) 0 nil]) ((5039 . 5040)) nil (23157 38798 210438 800000) 0 nil]) ((5030 . 5040) (t 23157 38767 268792 400000)) nil (23157 38798 210446 0) 0 nil]) ((5225 . 5230)) nil (23157 38767 90599 800000) 0 nil]) ((5209 . 5215) (#("    " 0 4 (fontified nil)) . 5209) (5213 . 5223)) nil (23157 38767 90621 700000) 0 nil]) ((5208 . 5213)) nil (23157 38767 90632 600000) 0 nil]) ((5206 . 5209)) nil (23157 38767 90639 100000) 0 nil]) ((5204 . 5205)) nil (23157 38767 90645 500000) 0 nil]) ((5184 . 5204)) nil (23157 38767 90651 500000) 0 nil]) ((5180 . 5185)) nil (23157 38767 90657 600000) 0 nil]) ((5175 . 5180)) nil (23157 38767 90663 200000) 0 nil]) ((#("
" 0 1 (fontified t)) . 5016) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1)) nil (23157 38767 90732 0) 0 nil]) ((#("    if " 0 4 (fontified t) 4 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t face (my-face-u-1))) . 5016)) nil (23157 38767 90742 100000) 0 nil]) ((5020 . 5023)) nil (23157 38767 90749 300000) 0 nil]) ((5015 . 5020) (t 23157 38745 17633 900000)) nil (23157 38767 90756 500000) 0 nil]) ((#("ｌ￥" 0 2 (fontified t)) . 82) (undo-tree-id2041 . -2)) nil (23157 38744 813571 800000) 0 nil]) ((82 . 84)) nil (23157 38744 813596 400000) 0 nil]) ((#("  " 0 2 (fontified t)) . -7318)) nil (23157 38744 813606 200000) 0 nil]) ((#("  " 0 2 (fontified t)) . -7310) 7310) nil (23157 38744 813616 700000) 0 nil]) ((#("  " 0 2 (fontified t)) . -7297) 7297) nil (23157 38744 813628 800000) 0 nil]) ((#("  " 0 2 (fontified t)) . -7286) 7286) nil (23157 38744 813641 300000) 0 nil]) ((#("  " 0 2 (fontified t)) . -7222) 7222) nil (23157 38744 813652 600000) 0 nil]) ((#("  " 0 2 (fontified t)) . -7197) 7195) nil (23157 38744 813663 900000) 0 nil]) ((#("  " 0 2 (fontified t)) . -7182) 7182) nil (23157 38744 813675 600000) 0 nil]) ((#("  " 0 2 (fontified t)) . -7137) 7137) nil (23157 38744 813688 500000) 0 nil]) ((#("  " 0 2 (fontified t)) . -7077) 7073) nil (23157 38744 813699 100000) 0 nil]) ((#("
" 0 1 (fontified t)) . 7073) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1)) nil (23157 38744 813772 300000) 0 nil]) ((#("    try {" 0 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 9 (fontified t)) . 7073) (undo-tree-id2045 . -9)) nil (23157 38744 813794 200000) 0 nil]) ((#("    } catch(e) {
      console.log(e);
    }
" 0 5 (fontified t) 5 6 (fontified t) 6 11 (fontified t face font-lock-keyword-face) 11 14 (fontified t) 14 17 (fontified t) 17 38 (fontified t) 38 39 (fontified t) 39 44 (fontified t) 44 45 (rear-nonsticky t fontified t)) . 7349) (undo-tree-id2046 . -39) (undo-tree-id2047 . -39) (undo-tree-id2048 . -45) (undo-tree-id2049 . -45) (undo-tree-id2050 . -17) (undo-tree-id2051 . -17) (undo-tree-id2052 . -45) (undo-tree-id2053 . -45) 7394) nil (23157 38744 813927 100000) 0 nil] [nil nil ((7384 . 7389)) ((#("raw, " 0 5 (fontified t)) . 7384) (t 23157 38714 620649 400000)) (23157 38714 443733 800000) 0 nil]) ((#("      
" 0 6 (fontified t face (my-face-u-1)) 6 7 (fontified t)) . 7366) (undo-tree-id2033 . -7) (undo-tree-id2034 . -7) (undo-tree-id2035 . 1) (undo-tree-id2036 . -7)) nil (23157 38728 905461 400000) 0 nil]) ((7365 . 7372)) nil (23157 38714 443835 400000) 0 nil]) ((7384 . 7385)) nil (23157 38714 443842 200000) 0 nil]) ((7372 . 7386)) nil (23157 38714 443848 200000) 0 nil]) ((7365 . 7372)) nil (23157 38714 443854 200000) 0 nil]) ((7365 . 7370)) nil (23157 38714 443860 700000) 0 nil]) ((7363 . 7366)) nil (23157 38714 443867 100000) 0 nil]) ((7361 . 7362)) nil (23157 38714 443873 900000) 0 nil]) ((7354 . 7362) (#("  " 0 2 (fontified nil face (my-face-u-1))) . -7353) (7355 . 7356)) nil (23157 38714 443886 300000) 0 nil]) ((7348 . 7355)) nil (23157 38714 443896 500000) 0 nil]) ((7340 . 7346) (#("    " 0 4 (fontified t)) . 7340)) nil (23157 38714 443906 700000) 0 nil]) ((7328 . 7336) (#("      " 0 6 (fontified t)) . 7328)) nil (23157 38714 443918 0) 0 nil]) ((7313 . 7321) (#("      " 0 6 (fontified t)) . 7313)) nil (23157 38714 443926 0) 0 nil]) ((7300 . 7308) (#("      " 0 6 (fontified t)) . 7300)) nil (23157 38714 443933 900000) 0 nil]) ((7234 . 7242) (#("      " 0 6 (fontified t)) . 7234)) nil (23157 38714 443941 500000) 0 nil]) ((7207 . 7215) (#("      " 0 6 (fontified t)) . 7207)) nil (23157 38714 443949 400000) 0 nil]) ((7192 . 7198) (#("    " 0 4 (fontified t)) . 7192)) nil (23157 38714 443956 900000) 0 nil]) ((7145 . 7151) (#("    " 0 4 (fontified t)) . 7145)) nil (23157 38714 443964 900000) 0 nil]) ((7083 . 7089) (#("    " 0 4 (fontified t)) . 7083)) nil (23157 38714 443975 100000) 0 nil]) ((7077 . 7082)) nil (23157 38714 443984 500000) 0 nil]) ((7072 . 7077)) nil (23157 38714 443991 700000) 0 nil]) ((#("
" 0 1 (fontified t)) . 7073) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1)) nil (23157 38714 444015 500000) 0 nil]) ((#("    if ()" 0 4 (fontified t) 4 6 (fontified t face font-lock-keyword-face) 6 9 (fontified t)) . 7073) (undo-tree-id2040 . -9)) nil (23157 38714 444032 500000) 0 nil]) ((7077 . 7082)) nil (23157 38714 444041 900000) 0 nil]) ((7072 . 7077) (t 23157 38622 866612 0)) nil (23157 38714 444050 200000) 0 nil]) ((5460 . 5470)) nil (23157 38622 656928 100000) 0 nil]) ((5453 . 5460)) nil (23157 38622 656968 900000) 0 nil]) ((5453 . 5458)) nil (23157 38622 656984 400000) 0 nil]) ((5450 . 5454)) nil (23157 38622 656994 600000) 0 nil]) ((#("(" 0 1 (fontified t)) . -5450)) nil (23157 38622 657004 800000) 0 nil]) ((5449 . 5451)) nil (23157 38622 657016 100000) 0 nil]) ((#("'" 0 1 (fontified t face font-lock-string-face)) . -5446)) nil (23157 38622 657101 0) 0 nil]) ((5447 . 5450)) nil (23157 38622 657114 300000) 0 nil]) ((#(")" 0 1 (fontified t face font-lock-string-face)) . -5447) (undo-tree-id2020 . 1) (undo-tree-id2021 . -1)) nil (23157 38622 657250 200000) 0 nil]) ((5442 . 5448)) nil (23157 38622 657269 400000) 0 nil]) ((5437 . 5442) (t 23157 38504 698261 300000)) nil (23157 38622 657281 900000) 0 nil]) ((8884 . 9032) (#("  type: \"Document\",
        children: [],
        range: [0, 0],
      loc: {start: { line: 1, column: 0}, end: { line: 1, column: 0} },
        raw: \"\",
  " 0 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 18 (fontified t face font-lock-string-face) 18 20 (fontified t) 20 37 (fontified t) 37 42 (fontified t) 42 56 (fontified t) 56 62 (fontified t) 62 65 (fontified t) 65 75 (fontified t) 75 77 (fontified t) 77 106 (fontified t) 106 110 (fontified t) 110 134 (fontified t) 134 135 (rear-nonsticky t fontified t) 135 136 (fontified t) 136 137 (fontified t) 137 149 (fontified t) 149 150 (fontified t) 150 152 (fontified t face font-lock-string-face) 152 153 (fontified t) 153 154 (fontified t) 154 156 (fontified t)) . 8884) (undo-tree-id2022 . -20) (undo-tree-id2023 . -20) (undo-tree-id2024 . -65) (undo-tree-id2025 . -65) (undo-tree-id2026 . -42) (undo-tree-id2027 . -42) (undo-tree-id2028 . -154) (undo-tree-id2029 . -154) (undo-tree-id2030 . -137) (undo-tree-id2031 . -137) (undo-tree-id2032 . -65) 8949 (t 23157 38502 880869 400000)) nil (23157 38622 657428 800000) 0 nil]) ((#("  " 0 2 (fontified nil)) . -8955) (9021 . 9022)) nil (23157 38502 691502 0) 0 nil]) ((#(";" 0 1 (fontified t)) . -9021) (t 23157 38493 37255 300000)) nil (23157 38502 691546 600000) 0 nil]) ((nil rear-nonsticky nil 9047 . 9048) (nil fontified nil 9047 . 9048) (nil fontified nil 9040 . 9047) (nil fontified nil 9039 . 9040) (nil fontified nil 9038 . 9039) (nil fontified nil 9036 . 9038) (nil fontified nil 9035 . 9036) (nil fontified nil 9023 . 9035) (nil fontified nil 9022 . 9023) (nil fontified nil 9021 . 9022) (nil fontified nil 9020 . 9021) (nil fontified nil 8996 . 9020) (nil fontified nil 8992 . 8996) (nil fontified nil 8963 . 8992) (nil fontified nil 8961 . 8963) (nil fontified nil 8949 . 8961) (nil fontified nil 8946 . 8949) (nil fontified nil 8940 . 8946) (nil fontified nil 8926 . 8940) (nil fontified nil 8921 . 8926) (nil fontified nil 8904 . 8921) (nil fontified nil 8902 . 8904) (nil fontified nil 8892 . 8902) (nil fontified nil 8891 . 8892) (nil fontified nil 8890 . 8891) (nil fontified nil 8878 . 8890) (nil fontified nil 8877 . 8878) (nil fontified nil 8876 . 8877) (8876 . 9048)) nil (23157 38492 793333 900000) 0 nil]) ((8869 . 8876)) nil (23157 38492 793366 0) 0 nil]) ((8864 . 8869)) nil (23157 38492 793375 0) 0 nil]) ((726 . 729)) nil (23157 38492 793382 200000) 0 nil]) ((nil fontified t 711 . 726) (#("createParagraph" 0 15 (fontified t)) . -707) (722 . 741) 722) nil (23157 38492 793392 800000) 0 nil]) ((#("cre" 0 3 (fontified t)) . -707) (710 . 725) 710) nil (23157 38492 793404 500000) 0 nil]) ((702 . 710)) nil (23157 38492 793413 200000) 0 nil]) ((#("r" 0 1 (fontified t)) . -702)) nil (23157 38492 793420 0) 0 nil]) ((#("e" 0 1 (fontified t)) . -703)) nil (23157 38492 793426 800000) 0 nil]) ((702 . 704)) nil (23157 38492 793434 700000) 0 nil]) ((#("{
        type: \"Document\",
        children: [],
        range: [0, 0],
        loc: {start: { line: 1, column: 0}, end: { line: 1, column: 0} };
        raw: \"\",
      };" 0 1 (fontified t) 1 2 (fontified t) 2 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 26 (fontified t face font-lock-string-face) 26 28 (fontified t) 28 45 (fontified t) 45 50 (fontified t) 50 64 (fontified t) 64 70 (fontified t) 70 73 (fontified t) 73 85 (fontified t) 85 87 (fontified t) 87 116 (fontified t) 116 120 (fontified t) 120 144 (fontified t) 144 145 (fontified t rear-nonsticky t) 145 146 (fontified t) 146 147 (fontified t) 147 159 (fontified t) 159 160 (fontified t) 160 162 (fontified t face font-lock-string-face) 162 163 (fontified t) 163 164 (fontified t) 164 171 (fontified t) 171 172 (fontified t)) . 702) (undo-tree-id1997 . -172) (undo-tree-id1998 . -2) (undo-tree-id1999 . -2) (undo-tree-id2000 . -28) (undo-tree-id2001 . -28) (undo-tree-id2002 . -145) (undo-tree-id2003 . -50) (undo-tree-id2004 . -50) (undo-tree-id2005 . -73) (undo-tree-id2006 . -73) (undo-tree-id2007 . -147) (undo-tree-id2008 . -147) (undo-tree-id2009 . -164) (undo-tree-id2010 . -164) (undo-tree-id2011 . -58) (undo-tree-id2012 . -69) (undo-tree-id2013 . -87) (undo-tree-id2014 . -145) (undo-tree-id2015 . -117) (undo-tree-id2016 . -14) (undo-tree-id2017 . -172) (undo-tree-id2018 . -171) (undo-tree-id2019 . -172)) nil (23157 38492 793540 400000) 0 nil] [nil ([nil nil ((#("{" 0 1 (fontified t)) . -702)) ((702 . 703)) (23157 38477 977413 500000) 0 nil]) ((#(": \"Document\",
        children: [],
        range: [0, 0],
        loc: {start: { line: 1, column: 0}, end: { line: 1, column: 0} };
        raw: \"\",
      };" 0 1 (fontified t) 1 2 (fontified t) 2 12 (fontified t face font-lock-string-face) 12 14 (fontified t) 14 31 (fontified t) 31 36 (fontified t) 36 50 (fontified t) 50 56 (fontified t) 56 59 (fontified t) 59 71 (fontified t) 71 73 (fontified t) 73 102 (fontified t) 102 106 (fontified t) 106 130 (fontified t) 130 131 (fontified t rear-nonsticky t) 131 132 (fontified t) 132 133 (fontified t) 133 145 (fontified t) 145 146 (fontified t) 146 148 (fontified t face font-lock-string-face) 148 149 (fontified t) 149 150 (fontified t) 150 157 (fontified t) 157 158 (fontified t)) . 716) (undo-tree-id1967 . -14) (undo-tree-id1968 . -14) (undo-tree-id1969 . -131) (undo-tree-id1970 . -36) (undo-tree-id1971 . -36) (undo-tree-id1972 . -59) (undo-tree-id1973 . -59) (undo-tree-id1974 . -133) (undo-tree-id1975 . -133) (undo-tree-id1976 . -150) (undo-tree-id1977 . -150) (undo-tree-id1978 . -44) (undo-tree-id1979 . -55) (undo-tree-id1980 . -73) (undo-tree-id1981 . -131) (undo-tree-id1982 . -103) (undo-tree-id1983 . -158) (undo-tree-id1984 . -158) 874) ((716 . 874)) (23157 38477 978472 600000) 0 nil]) ((9009 . 9012)) nil (23157 38478 705404 500000) 0 nil]) ((9008 . 9009)) nil (23157 38477 977543 400000) 0 nil]) ((8999 . 9009)) nil (23157 38477 977551 700000) 0 nil]) ((#("d" 0 1 (fontified t)) . -8999)) nil (23157 38477 977558 500000) 0 nil]) ((#("u" 0 1 (fontified t)) . -9000)) nil (23157 38477 977566 0) 0 nil]) ((8998 . 9001)) nil (23157 38477 977573 600000) 0 nil]) ((#("O" 0 1 (fontified t)) . -8998)) nil (23157 38477 977580 400000) 0 nil]) ((#("c" 0 1 (fontified t)) . -8999)) nil (23157 38477 977587 900000) 0 nil]) ((#("u" 0 1 (fontified t)) . -9000)) nil (23157 38477 977595 100000) 0 nil]) ((#("m" 0 1 (fontified t)) . -9001)) nil (23157 38477 977602 600000) 0 nil]) ((#("e" 0 1 (fontified t)) . -9002)) nil (23157 38477 977610 200000) 0 nil]) ((#("n" 0 1 (fontified t)) . -9003)) nil (23157 38477 977617 700000) 0 nil]) ((8996 . 9004)) nil (23157 38477 977625 300000) 0 nil]) ((#("h" 0 1 (fontified t)) . -8996)) nil (23157 38477 977632 100000) 0 nil]) ((#("y" 0 1 (fontified t)) . -8997)) nil (23157 38477 977639 300000) 0 nil]) ((#("D" 0 1 (fontified t)) . -8998)) nil (23157 38477 977647 200000) 0 nil]) ((#("o" 0 1 (fontified t)) . -8999)) nil (23157 38477 977654 0) 0 nil]) ((#("c" 0 1 (fontified t)) . -9000)) nil (23157 38477 977661 200000) 0 nil]) ((#("u" 0 1 (fontified t)) . -9001)) nil (23157 38477 977668 300000) 0 nil]) ((8986 . 9002)) nil (23157 38477 977675 900000) 0 nil]) ((8984 . 8986) (#("  " 0 2 (fontified nil)) . 8983) (8983 . 8985) (8983 . 8984) (#("  " 0 2 (fontified t face (my-face-u-1))) . 8983) 8985) nil (23157 38477 977688 700000) 0 nil]) ((8982 . 8985)) nil (23157 38477 977697 800000) 0 nil]) ((819 . 822)) nil (23157 38477 977705 0) 0 nil]) ((#("d" 0 1 (fontified t)) . -819)) nil (23157 38477 977711 800000) 0 nil]) ((#("n" 0 1 (fontified t)) . -820)) nil (23157 38477 977718 900000) 0 nil]) ((#("e" 0 1 (fontified t)) . -821)) nil (23157 38477 977726 100000) 0 nil]) ((819 . 822)) nil (23157 38477 977733 300000) 0 nil]) ((#("start" 0 5 (fontified t)) . 819)) nil (23157 38477 977740 500000) 0 nil]) ((849 . 850)) nil (23157 38477 977747 600000) 0 nil]) ((817 . 818)) nil (23157 38477 977755 200000) 0 nil]) ((nil rear-nonsticky nil 847 . 848) (nil fontified nil 818 . 848) (818 . 848)) nil (23157 38477 977764 600000) 0 nil]) ((#("}" 0 1 (fontified t rear-nonsticky t)) . -818) (undo-tree-id1985 . -1) (undo-tree-id1986 . 1) (undo-tree-id1987 . -1)) nil (23157 38477 977783 500000) 0 nil]) ((nil rear-nonsticky nil 818 . 819) (nil fontified nil 789 . 819) (789 . 819)) nil (23157 38477 977795 200000) 0 nil]) ((#(" " 0 1 (fontified t face (my-face-u-1))) . -789)) nil (23157 38477 977802 800000) 0 nil]) ((#("start: { line: 1, column: 0} }" 0 30 (fontified t)) . 790)) nil (23157 38477 977811 100000) 0 nil]) ((818 . 819)) nil (23157 38477 977818 200000) 0 nil]) ((814 . 817)) nil (23157 38477 977825 0) 0 nil]) ((#("b" 0 1 (fontified t)) . -814)) nil (23157 38477 977832 600000) 0 nil]) ((#("e" 0 1 (fontified t)) . -815)) nil (23157 38477 977840 100000) 0 nil]) ((798 . 816)) nil (23157 38477 977847 700000) 0 nil]) ((797 . 799)) nil (23157 38477 977854 900000) 0 nil]) ((#(":" 0 1 (fontified t)) . 797)) nil (23157 38477 977861 700000) 0 nil]) ((#("line" 0 4 (fontified t)) . 797)) nil (23157 38477 977868 800000) 0 nil]) ((797 . 802)) nil (23157 38477 977876 400000) 0 nil]) ((789 . 797)) nil (23157 38477 977883 900000) 0 nil]) ((783 . 790)) nil (23157 38477 977891 100000) 0 nil]) ((771 . 772)) nil (23157 38477 977897 900000) 0 nil]) ((#("-" 0 1 (fontified t)) . -771)) nil (23157 38477 977904 300000) 0 nil]) ((771 . 772)) nil (23157 38477 977911 900000) 0 nil]) ((#("this.chars[this.chars.length - 1]" 0 4 (fontified t face font-lock-constant-face) 4 5 (fontified t) 5 11 (fontified t) 11 15 (fontified t face font-lock-constant-face) 15 16 (fontified t) 16 32 (fontified t) 32 33 (fontified t)) . 771) (undo-tree-id1988 . -33) (undo-tree-id1989 . 1) (undo-tree-id1990 . -33) (undo-tree-id1991 . 23) (undo-tree-id1992 . -11) 804) nil (23157 38477 977934 900000) 0 nil]) ((806 . 815)) nil (23157 38477 977944 400000) 0 nil]) ((805 . 806)) nil (23157 38477 977951 200000) 0 nil]) ((802 . 803)) nil (23157 38477 977958 300000) 0 nil]) ((782 . 802)) nil (23157 38477 977965 100000) 0 nil]) ((768 . 783)) nil (23157 38477 977971 500000) 0 nil]) ((760 . 769)) nil (23157 38477 977979 100000) 0 nil]) ((751 . 760)) nil (23157 38477 977985 500000) 0 nil]) ((#("        
" 0 8 (fontified t face (my-face-u-1)) 8 9 (fontified t)) . 730) (undo-tree-id1993 . -9) (undo-tree-id1994 . -9)) nil (23157 38477 977999 100000) 0 nil]) ((729 . 738)) nil (23157 38477 978007 400000) 0 nil]) ((746 . 751)) nil (23157 38477 978014 200000) 0 nil]) ((#("]" 0 1 (fontified t)) . -746) (undo-tree-id1995 . 1) (undo-tree-id1996 . -1)) nil (23157 38477 978027 100000) 0 nil]) ((738 . 747)) nil (23157 38477 978035 400000) 0 nil]) ((729 . 738)) nil (23157 38477 978042 200000) 0 nil]) ((738 . 746)) nil (23157 38477 978049 0) 0 nil]) ((729 . 738)) nil (23157 38477 978055 0) 0 nil]) ((728 . 729)) nil (23157 38477 978061 0) 0 nil]) ((719 . 727)) nil (23157 38477 978067 800000) 0 nil]) ((712 . 720)) nil (23157 38477 978074 600000) 0 nil]) ((703 . 712)) nil (23157 38477 978081 0) 0 nil]) ((703 . 710)) nil (23157 38477 978087 800000) 0 nil]) ((702 . 704)) nil (23157 38477 978094 600000) 0 nil]) ((#("null" 0 4 (fontified t face font-lock-constant-face)) . 702) (t 23157 38356 637289 800000)) nil (23157 38477 978102 900000) 0 nil]) ((#("  console.log(JSON.stringify(ret));
" 0 36 (fontified t)) . 8902) (undo-tree-id1957 . -36) (undo-tree-id1958 . -36) (undo-tree-id1959 . -32) (undo-tree-id1960 . -36) (undo-tree-id1961 . -36) 8938) nil (23157 38356 430940 700000) 0 nil]) ((#("  console.log(\"YAY\");
" 0 14 (fontified t) 14 19 (fontified t face font-lock-string-face) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t)) . 8857) (undo-tree-id1962 . -22) (undo-tree-id1963 . -22) (undo-tree-id1964 . -22) (undo-tree-id1965 . -22) (undo-tree-id1966 . -22) 8879 (t 23157 38346 584350 0)) nil (23157 38356 431032 100000) 0 nil]) ((8872 . 8875)) nil (23157 38346 361830 700000) 0 nil]) ((8871 . 8873)) nil (23157 38346 361850 700000) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-string-face)) . -8872)) nil (23157 38346 361860 500000) 0 nil]) ((8872 . 8873)) nil (23157 38346 361868 800000) 0 nil]) ((8859 . 8873)) nil (23157 38346 361875 200000) 0 nil]) ((8856 . 8859) (t 23157 38326 78252 300000)) nil (23157 38346 361901 300000) 0 nil]) ((8934 . 8937)) nil (23157 38325 853189 200000) 0 nil]) ((#(")" 0 1 (fontified t)) . -8934) (undo-tree-id1951 . -1) (undo-tree-id1952 . 1) (undo-tree-id1953 . -1)) nil (23157 38325 853424 400000) 0 nil]) ((#(")" 0 1 (fontified t)) . -8935) (undo-tree-id1954 . -1) (undo-tree-id1955 . 1) (undo-tree-id1956 . -1)) nil (23157 38325 853474 600000) 0 nil]) ((#("；" 0 1 (fontified t)) . -8936) (t 23157 38315 641640 700000)) nil (23157 38325 853486 0) 0 nil]) ((8868 . 8870) (t 23157 38305 888715 300000)) nil (23157 38315 427877 700000) 0 nil]) ((8914 . 8933)) nil (23157 38305 673688 500000) 0 nil]) ((#(";" 0 1 (fontified t)) . -8916)) nil (23157 38305 673720 900000) 0 nil]) ((#("l" 0 1 (fontified t)) . -8927)) nil (23157 38305 673739 400000) 0 nil]) ((8920 . 8928)) nil (23157 38305 673753 800000) 0 nil]) ((8915 . 8917)) nil (23157 38305 673766 300000) 0 nil]) ((8918 . 8922)) nil (23157 38305 673778 300000) 0 nil]) ((8915 . 8918)) nil (23157 38305 673789 300000) 0 nil]) ((#("  
" 0 2 (fontified t face (my-face-u-1)) 2 3 (fontified t)) . 8916) (undo-tree-id1944 . -3) (undo-tree-id1945 . -3) (undo-tree-id1946 . -3) (undo-tree-id1947 . -3)) nil (23157 38305 673937 700000) 0 nil]) ((nil rear-nonsticky nil 8915 . 8916) (nil fontified nil 8915 . 8916) (nil fontified nil 8900 . 8915) (8900 . 8916)) nil (23157 38305 673961 800000) 0 nil]) ((8899 . 8902)) nil (23157 38305 673972 800000) 0 nil]) ((#("  console.log()
" 0 15 (fontified t) 15 16 (fontified t)) . 8857) (undo-tree-id1948 . -16) (undo-tree-id1949 . -16)) nil (23157 38305 673991 300000) 0 nil]) ((8875 . 8884)) nil (23157 38305 674002 600000) 0 nil]) ((#("return" 0 6 (fontified t face font-lock-keyword-face)) . 8875) (undo-tree-id1950 . -6)) nil (23157 38305 674015 800000) 0 nil]) ((8859 . 8872)) nil (23157 38305 674025 700000) 0 nil]) ((8856 . 8859) (t 23157 37224 147726 700000)) nil (23157 38305 674035 100000) 0 nil]) ((#("
" 0 1 (fontified t)) . 8897) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1)) nil (23157 37223 938877 900000) 0 nil]) ((#("  return ret;" 0 2 (fontified t) 2 8 (fontified t face font-lock-keyword-face) 8 13 (fontified t)) . 8897) (undo-tree-id1926 . -13)) nil (23157 37223 938902 500000) 0 nil]) ((8859 . 8865)) nil (23157 37223 938912 300000) 0 nil]) ((#("=" 0 1 (fontified t)) . 8859)) nil (23157 37223 938919 500000) 0 nil]) ((#(" " 0 1 (fontified t)) . 8859)) nil (23157 37223 938927 0) 0 nil]) ((#(" ret" 0 1 (fontified t) 1 4 (fontified t)) . 8859) (undo-tree-id1927 . -4)) nil (23157 37223 938938 0) 0 nil]) ((#("const" 0 5 (fontified t face font-lock-keyword-face)) . 8859) (undo-tree-id1928 . -5)) nil (23157 37223 938949 700000) 0 nil]) ((#("
" 0 1 (fontified t)) . 8902) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1)) nil (23157 37223 938965 500000) 0 nil]) ((#("  console.log(JSON.stringify(ret));" 0 35 (fontified t)) . 8902) (undo-tree-id1932 . -35)) nil (23157 37223 938976 500000) 0 nil]) ((2665 . 2675)) nil (23157 37223 938984 400000) 0 nil]) ((2658 . 2665)) nil (23157 37223 938990 800000) 0 nil]) ((2658 . 2663)) nil (23157 37223 938997 600000) 0 nil]) ((2656 . 2659)) nil (23157 37223 939003 700000) 0 nil]) ((2651 . 2655)) nil (23157 37223 939010 100000) 0 nil]) ((2647 . 2652)) nil (23157 37223 939016 500000) 0 nil]) ((2642 . 2647)) nil (23157 37223 939022 500000) 0 nil]) ((#("    if (!loc) {
      console.log(this.lines);
      console.log(raw, lineno);
    }
" 0 4 (fontified t) 4 6 (fontified t face font-lock-keyword-face) 6 12 (fontified t) 12 13 (fontified t) 13 16 (fontified t) 16 34 (fontified t) 34 38 (fontified t face font-lock-constant-face) 38 44 (fontified t) 44 46 (fontified t) 46 47 (fontified t) 47 78 (fontified t) 78 79 (fontified t) 79 84 (fontified t) 84 85 (fontified t)) . 2643) (undo-tree-id1933 . -47) (undo-tree-id1934 . -47) (undo-tree-id1935 . -16) (undo-tree-id1936 . -16) (undo-tree-id1937 . -79) (undo-tree-id1938 . -79) (undo-tree-id1939 . -85) (undo-tree-id1940 . -85) (undo-tree-id1941 . -16) (undo-tree-id1942 . -16) (undo-tree-id1943 . -85) 2728 (t 23157 37177 136599 500000)) nil (23157 37223 939067 900000) 0 nil]) ((#("    " 0 4 (fontified nil)) . 536) (536 . 540) (536 . 537) (t 23157 37174 583108 0)) nil (23157 37176 871381 0) 0 nil]) ((#("    " 0 4 (fontified nil)) . 180) (180 . 184) (180 . 181) (t 23157 37172 733495 900000)) nil (23157 37174 373671 100000) 0 nil]) ((#("    " 0 4 (fontified nil)) . 395) (395 . 399) (395 . 396) (t 23157 37167 351072 400000)) nil (23157 37172 511219 0) 0 nil]) ((386 . 388)) nil (23157 37167 147641 700000) 0 nil]) ((345 . 364)) nil (23157 37167 147658 300000) 0 nil]) ((359 . 367)) nil (23157 37167 147665 500000) 0 nil]) ((#("ori" 0 3 (fontified t)) . -345) (348 . 362) 348) nil (23157 37167 147672 700000) 0 nil]) ((345 . 348)) nil (23157 37167 147679 900000) 0 nil]) ((338 . 345)) nil (23157 37167 147684 400000) 0 nil]) ((338 . 343)) nil (23157 37167 147689 700000) 0 nil]) ((336 . 339)) nil (23157 37167 147694 600000) 0 nil]) ((332 . 333)) nil (23157 37167 147699 100000) 0 nil]) ((328 . 329)) nil (23157 37167 147704 400000) 0 nil]) ((329 . 331)) nil (23157 37167 147709 300000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-string-face)) . -329)) nil (23157 37167 147714 200000) 0 nil]) ((328 . 330)) nil (23157 37167 147719 500000) 0 nil]) ((318 . 319)) nil (23157 37167 147724 0) 0 nil]) ((317 . 319)) nil (23157 37167 147729 0) 0 nil]) ((288 . 303)) nil (23157 37167 147733 900000) 0 nil]) ((#("ori" 0 3 (fontified t)) . -274) (277 . 291) 277) nil (23157 37167 147739 900000) 0 nil]) ((274 . 277)) nil (23157 37167 147747 100000) 0 nil]) ((295 . 297)) nil (23157 37167 147751 600000) 0 nil]) ((294 . 296)) nil (23157 37167 147756 900000) 0 nil]) ((#("/" 0 1 (fontified t)) . -294)) nil (23157 37167 147761 400000) 0 nil]) ((#("/" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -295)) nil (23157 37167 147766 700000) 0 nil]) ((288 . 296)) nil (23157 37167 147772 0) 0 nil]) ((#("ori" 0 3 (fontified t)) . -274) (277 . 291) 277) nil (23157 37167 147777 700000) 0 nil]) ((274 . 277)) nil (23157 37167 147784 500000) 0 nil]) ((267 . 275)) nil (23157 37167 147790 100000) 0 nil]) ((263 . 267)) nil (23157 37167 147796 900000) 0 nil]) ((#("    for ()" 0 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 10 (fontified t)) . 263) (undo-tree-id1910 . 1) (undo-tree-id1911 . -10) (undo-tree-id1912 . 2) (undo-tree-id1913 . -9)) nil (23157 37167 147858 100000) 0 nil]) ((267 . 273)) nil (23157 37167 147866 0) 0 nil]) ((262 . 267)) nil (23157 37167 147872 800000) 0 nil]) ((#("    
" 0 4 (fontified t face (my-face-u-1)) 4 5 (fontified t)) . 225) (undo-tree-id1914 . -5) (undo-tree-id1915 . -5)) nil (23157 37167 147887 500000) 0 nil]) ((224 . 229)) nil (23157 37167 147894 700000) 0 nil]) ((223 . 224)) nil (23157 37167 147900 800000) 0 nil]) ((219 . 221)) nil (23157 37167 147907 900000) 0 nil]) ((218 . 220)) nil (23157 37167 147914 300000) 0 nil]) ((204 . 219)) nil (23157 37167 147920 800000) 0 nil]) ((184 . 204)) nil (23157 37167 147927 200000) 0 nil]) ((179 . 184)) nil (23157 37167 147933 200000) 0 nil]) ((#("    
" 0 4 (fontified t face (my-face-u-1)) 4 5 (fontified t)) . 218) (undo-tree-id1916 . -5) (undo-tree-id1917 . -5) (undo-tree-id1918 . -5) (undo-tree-id1919 . -5) (undo-tree-id1920 . -5) (undo-tree-id1921 . -5) (undo-tree-id1922 . -5)) nil (23157 37167 147963 100000) 0 nil]) ((217 . 222) (t 23157 37015 80166 300000)) nil (23157 37167 147974 800000) 0 nil]) ((#("    while (this.lines.length > 0 && this.lines[0].match(/^\\s*$/)) {
      this.lines.shift();
    }
" 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 11 (fontified t) 11 15 (fontified t face font-lock-constant-face) 15 20 (fontified t) 20 21 (fontified t rear-nonsticky t) 21 36 (fontified t) 36 40 (fontified t face font-lock-constant-face) 40 56 (fontified t) 56 57 (fontified t syntax-table #1# face font-lock-string-face) 57 62 (fontified t face font-lock-string-face) 62 63 (fontified t syntax-table #2# face font-lock-string-face) 63 64 (fontified t) 64 65 (fontified t) 65 68 (fontified t) 68 74 (fontified t) 74 78 (fontified t face font-lock-constant-face) 78 94 (fontified t) 94 98 (fontified t) 98 99 (fontified t) 99 100 (fontified t)) . 218) (undo-tree-id1898 . -68) (undo-tree-id1899 . -100) (undo-tree-id1900 . -100) (undo-tree-id1901 . -94) (undo-tree-id1902 . -94) (undo-tree-id1903 . -11) (undo-tree-id1904 . -21) (undo-tree-id1905 . -68) (undo-tree-id1906 . -68) (undo-tree-id1907 . -11) (undo-tree-id1908 . -100) (undo-tree-id1909 . -100) 318 (t 23157 36960 486679 900000)) nil (23157 37014 872438 300000) 0 nil]) ((#("n" 0 1 (fontified t)) . 303)) nil (23157 36960 52168 100000) 0 nil]) ((#("u" 0 1 (fontified t)) . 303) (t 23157 36904 949254 500000)) nil (23157 36960 52254 900000) 0 nil]) ((303 . 313)) nil (23157 36904 756038 700000) 0 nil]) ((303 . 308)) nil (23157 36904 756062 100000) 0 nil]) ((285 . 292) (#(" " 0 1 (fontified t)) . 285) 286) nil (23157 36904 756077 200000) 0 nil]) ((239 . 254)) nil (23157 36904 756090 0) 0 nil]) ((nil rear-nonsticky nil 238 . 239) (nil fontified nil 233 . 239) (nil fontified nil 229 . 233) (229 . 239)) nil (23157 36904 756103 600000) 0 nil]) ((266 . 272)) nil (23157 36904 756113 800000) 0 nil]) ((251 . 254)) nil (23157 36904 756121 800000) 0 nil]) ((251 . 252)) nil (23157 36904 756129 700000) 0 nil]) ((#("#" 0 1 (fontified t face font-lock-string-face)) . -251)) nil (23157 36904 756138 400000) 0 nil]) ((250 . 252)) nil (23157 36904 756147 400000) 0 nil]) ((249 . 251)) nil (23157 36904 756155 400000) 0 nil]) ((242 . 250)) nil (23157 36904 756164 400000) 0 nil]) ((240 . 241)) nil (23157 36904 756172 700000) 0 nil]) ((229 . 241)) nil (23157 36904 756181 400000) 0 nil]) ((#("true" 0 4 (fontified t face font-lock-constant-face)) . 229) (undo-tree-id1896 . -4)) nil (23157 36904 756209 700000) 0 nil]) ((236 . 242)) nil (23157 36904 756219 900000) 0 nil]) ((234 . 237)) nil (23157 36904 756227 500000) 0 nil]) ((229 . 233)) nil (23157 36904 756235 400000) 0 nil]) ((222 . 230)) nil (23157 36904 756243 700000) 0 nil]) ((218 . 222)) nil (23157 36904 756251 700000) 0 nil]) ((#("    for (let i = 0; i < )" 0 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 9 (fontified t) 9 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t) 13 14 (fontified t face font-lock-variable-name-face) 14 24 (fontified t) 24 25 (fontified t)) . 218) (undo-tree-id1897 . -25)) nil (23157 36904 756267 100000) 0 nil]) ((227 . 242)) nil (23157 36904 756276 200000) 0 nil]) ((222 . 228)) nil (23157 36904 756285 600000) 0 nil]) ((217 . 222) (t 23157 36805 193094 0)) nil (23157 36904 756294 300000) 0 nil]) ((2508 . 2509) (t 23157 36804 411665 500000)) nil (23157 36804 935717 200000) 0 nil]) ((2497 . 2507)) nil (23157 36804 218925 500000) 0 nil]) ((2493 . 2496)) nil (23157 36804 218947 800000) 0 nil]) ((#("lgo" 0 3 (fontified t)) . 2493)) nil (23157 36804 218958 0) 0 nil]) ((2485 . 2498)) nil (23157 36804 218967 800000) 0 nil]) ((2478 . 2485)) nil (23157 36804 218976 100000) 0 nil]) ((#("    console.log(\"line = \", lines);
" 0 16 (fontified t) 16 25 (fontified t face font-lock-string-face) 25 27 (fontified t) 27 34 (fontified t) 34 35 (fontified t)) . 7988) (undo-tree-id1886 . -35) (undo-tree-id1887 . -35) (undo-tree-id1888 . -35) 8023) nil (23157 36804 219011 600000) 0 nil]) ((#("        console.log(this.lines[i + j - 1]);
" 0 20 (fontified t) 20 24 (fontified t face font-lock-constant-face) 24 40 (fontified t) 40 41 (fontified t rear-nonsticky t) 41 43 (fontified t) 43 44 (fontified t)) . 8152) (undo-tree-id1889 . -44) (undo-tree-id1890 . -44) (undo-tree-id1891 . -44) (undo-tree-id1892 . -41) (undo-tree-id1893 . -8) (undo-tree-id1894 . -44) (undo-tree-id1895 . -44) (t 23157 36738 981294 0)) nil (23157 36804 219048 600000) 0 nil]) ((8193 . 8195)) nil (23157 36738 781418 300000) 0 nil]) ((8160 . 8172)) nil (23157 36738 781442 400000) 0 nil]) ((nil rear-nonsticky nil 8180 . 8181) (nil fontified nil 8164 . 8181) (nil fontified nil 8160 . 8164) (8160 . 8181)) nil (23157 36738 781459 400000) 0 nil]) ((8151 . 8160) (t 23157 36725 983630 500000)) nil (23157 36738 781507 0) 0 nil]) ((8011 . 8012)) nil (23157 36725 750486 200000) 0 nil]) ((8012 . 8014)) nil (23157 36725 750513 100000) 0 nil]) ((8005 . 8011)) nil (23157 36725 750526 300000) 0 nil]) ((8004 . 8006)) nil (23157 36725 750536 500000) 0 nil] [nil ([nil nil ((#("
" 0 1 (fontified t)) . 7988) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1)) ((7988 . 7989) (t 23157 36714 950589 600000)) (23157 36714 761559 700000) 0 nil]) ((#("    console.log(lines);" 0 23 (fontified t)) . 7988) (t 23157 36701 570650 700000)) ((7988 . 8011)) (23157 36717 361959 0) 0 nil]) ((7992 . 8011)) nil (23157 36717 547365 900000) 0 nil]) ((7987 . 7992) (t 23157 36633 56007 800000)) nil (23157 36701 390806 400000) 0 nil]) ((2500 . 2508) (t 23157 36620 168941 500000)) nil (23157 36632 863334 600000) 0 nil]) ((2497 . 2500)) nil (23157 36620 4356 0) 0 nil]) ((2485 . 2499)) nil (23157 36620 4375 200000) 0 nil]) ((2478 . 2485)) nil (23157 36620 4383 900000) 0 nil]) ((2478 . 2483)) nil (23157 36620 4391 100000) 0 nil]) ((2476 . 2479)) nil (23157 36620 4397 500000) 0 nil]) ((2471 . 2475)) nil (23157 36620 4403 200000) 0 nil] [nil nil ((2471 . 2483)) ((#("loc === null" 0 8 (fontified t) 8 12 (fontified t face font-lock-constant-face)) . 2471) (undo-tree-id1881 . -12)) (23157 36610 489183 700000) 0 nil]) ((2467 . 2472)) nil (23157 36610 489691 200000) 0 nil]) ((2462 . 2467) (t 23157 36265 542969 300000)) nil (23157 36610 489224 900000) 0 nil]) ((8717 . 8718)) nil (23157 36265 361087 900000) 0 nil]) ((8715 . 8716)) nil (23157 36265 361109 800000) 0 nil]) ((8697 . 8712)) nil (23157 36265 361120 400000) 0 nil]) ((8704 . 8715)) nil (23157 36265 361134 800000) 0 nil]) ((8701 . 8704)) nil (23157 36265 361142 300000) 0 nil]) ((8697 . 8700)) nil (23157 36265 361149 900000) 0 nil]) ((8685 . 8698)) nil (23157 36265 361157 0) 0 nil]) ((8682 . 8685)) nil (23157 36265 361163 500000) 0 nil]) ((8640 . 8651)) nil (23157 36265 361170 300000) 0 nil]) ((#("return" 0 6 (fontified t face font-lock-keyword-face)) . 8640) (undo-tree-id1880 . -6) (t 23157 36102 916273 300000)) nil (23157 36265 361196 300000) 0 nil]) ((#("    " 0 4 (fontified nil)) . 5242) (5242 . 5246) (5242 . 5243)) nil (23157 36102 728746 200000) 0 nil]) ((#("    
" 0 4 (fontified t face (my-face-u-1)) 4 5 (fontified t)) . 5242) (undo-tree-id1834 . -5) (undo-tree-id1835 . -5) (undo-tree-id1836 . -5)) nil (23157 36102 728844 800000) 0 nil]) ((nil fontified nil 5241 . 5242) (nil fontified nil 5219 . 5241) (nil fontified nil 5215 . 5219) (nil fontified nil 5212 . 5215) (nil fontified nil 5207 . 5212) (nil fontified nil 5206 . 5207) (nil fontified nil 5201 . 5206) (nil fontified nil 5197 . 5201) (nil fontified nil 5194 . 5197) (nil fontified nil 5188 . 5194) (nil fontified nil 5185 . 5188) (nil fontified nil 5184 . 5185) (nil fontified nil 5182 . 5184) (nil fontified nil 5181 . 5182) (nil fontified nil 5157 . 5181) (nil fontified nil 5153 . 5157) (nil fontified nil 5150 . 5153) (nil fontified nil 5147 . 5150) (nil fontified nil 5146 . 5147) (nil fontified nil 5141 . 5146) (nil fontified nil 5137 . 5141) (nil fontified nil 5123 . 5137) (nil fontified nil 5120 . 5123) (nil fontified nil 5119 . 5120) (nil fontified nil 5114 . 5119) (nil fontified nil 5110 . 5114) (5110 . 5242)) nil (23157 36102 728877 300000) 0 nil]) ((5109 . 5114)) nil (23157 36102 728893 100000) 0 nil]) ((#("    const raw = elem.text;
    const loc = this.findLocation(raw.split(/\\n/), lineno);
    const range = this.locationToRange(loc);
" 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 13 (fontified t face font-lock-variable-name-face) 13 27 (fontified t) 27 31 (fontified t) 31 36 (fontified t face font-lock-keyword-face) 36 37 (fontified t) 37 40 (fontified t face font-lock-variable-name-face) 40 43 (fontified t) 43 47 (fontified t face font-lock-constant-face) 47 71 (fontified t) 71 72 (syntax-table #1# fontified t face font-lock-string-face) 72 74 (fontified t face font-lock-string-face) 74 75 (syntax-table #2# fontified t face font-lock-string-face) 75 78 (fontified t) 78 84 (fontified t) 84 87 (fontified t) 87 91 (fontified t) 91 96 (fontified t face font-lock-keyword-face) 96 97 (fontified t) 97 102 (fontified t face font-lock-variable-name-face) 102 105 (fontified t) 105 109 (fontified t face font-lock-constant-face) 109 131 (fontified t) 131 132 (rear-nonsticky t fontified t)) . 5437) (undo-tree-id1837 . -27) (undo-tree-id1838 . -99) (undo-tree-id1839 . -27) (undo-tree-id1840 . -27) (undo-tree-id1841 . -87) (undo-tree-id1842 . -87) (undo-tree-id1843 . -132) (undo-tree-id1844 . -132) (undo-tree-id1845 . -27) (undo-tree-id1846 . -132) (undo-tree-id1847 . -132) 5569 (t 23157 36034 494579 800000)) nil (23157 36102 728948 600000) 0 nil]) ((5156 . 5429) (#("'asciidoc') {
      children = this.convertElementList(elem.$inner_document().$blocks(), lineno);
    } else {
      children = [
          {
            type: \"Str\",
            value: raw,
            loc,
            range,
            raw
          }
        ]" 0 10 (fontified t face font-lock-string-face) 10 11 (fontified t) 11 14 (fontified t) 14 28 (fontified t) 28 31 (fontified t) 31 35 (fontified t face font-lock-constant-face) 35 61 (fontified t) 61 77 (fontified t) 77 97 (fontified t) 97 98 (rear-nonsticky t fontified t) 98 103 (fontified t) 103 104 (fontified t) 104 108 (fontified t face font-lock-keyword-face) 108 111 (fontified t) 111 128 (fontified t) 128 130 (fontified t) 130 142 (fontified t) 142 160 (fontified t) 160 165 (fontified t face font-lock-string-face) 165 263 (fontified t) 263 264 (rear-nonsticky t fontified t)) . 5156) (undo-tree-id1848 . -117) (undo-tree-id1849 . -142) (undo-tree-id1850 . -142) (undo-tree-id1851 . -264) (undo-tree-id1852 . -98) (undo-tree-id1853 . -98) (undo-tree-id1854 . -14) (undo-tree-id1855 . -14) (undo-tree-id1856 . -130) (undo-tree-id1857 . -130) (undo-tree-id1858 . -111) (undo-tree-id1859 . -111) (undo-tree-id1860 . -255) (undo-tree-id1861 . -255) (undo-tree-id1862 . -243) (undo-tree-id1863 . -243) (undo-tree-id1864 . -227) (undo-tree-id1865 . -227) (undo-tree-id1866 . -208) (undo-tree-id1867 . -208) (undo-tree-id1868 . -167) (undo-tree-id1869 . -167) (undo-tree-id1870 . -14) (undo-tree-id1871 . -191) (undo-tree-id1872 . -191) (undo-tree-id1873 . -75) (undo-tree-id1874 . -14) (undo-tree-id1875 . -264) (undo-tree-id1876 . 124) (undo-tree-id1877 . -141) (undo-tree-id1878 . 11) (undo-tree-id1879 . -254) 5286 (t 23157 36027 701001 400000)) nil (23157 36102 729150 600000) 0 nil]) ((#(":" 0 1 (fontified t)) . -5624) (undo-tree-id1811 . -1)) nil (23157 36027 480609 0) 0 nil]) ((#(" " 0 1 (fontified t)) . -5625) (undo-tree-id1812 . -1)) nil (23157 36027 480645 300000) 0 nil]) ((5273 . 5284)) nil (23157 36027 480661 100000) 0 nil]) ((nil rear-nonsticky nil 5408 . 5409) (nil fontified nil 5310 . 5409) (nil fontified nil 5305 . 5310) (nil fontified nil 5273 . 5305) (5273 . 5409)) nil (23157 36027 480678 900000) 0 nil]) ((5266 . 5273)) nil (23157 36027 480690 600000) 0 nil]) ((#("[
          {
            type: \"Str\",
            value: raw,
            loc,
            range,
            raw
          }
        ]" 0 32 (fontified t) 32 37 (fontified t face font-lock-string-face) 37 136 (fontified t)) . 5472) (undo-tree-id1813 . -127) (undo-tree-id1814 . -127) (undo-tree-id1815 . -115) (undo-tree-id1816 . -115) (undo-tree-id1817 . -99) (undo-tree-id1818 . -99) (undo-tree-id1819 . -80) (undo-tree-id1820 . -80) (undo-tree-id1821 . -63) (undo-tree-id1822 . -63) (undo-tree-id1823 . -39) (undo-tree-id1824 . -39) (undo-tree-id1825 . -2) (undo-tree-id1826 . -2) (undo-tree-id1827 . -136) (undo-tree-id1828 . 1) (undo-tree-id1829 . -136) (undo-tree-id1830 . 136) (undo-tree-id1831 . -1) 5608) nil (23157 36027 480804 600000) 0 nil]) ((5266 . 5271)) nil (23157 36027 480824 600000) 0 nil]) ((5259 . 5267)) nil (23157 36027 480847 700000) 0 nil]) ((5176 . 5184)) nil (23157 36027 480859 0) 0 nil]) ((#(" blocks" 0 1 (fontified t) 1 7 (fontified t)) . 5176)) nil (23157 36027 480869 200000) 0 nil]) ((#("const" 0 5 (fontified t face font-lock-keyword-face)) . 5176)) nil (23157 36027 480880 200000) 0 nil]) ((5114 . 5132)) nil (23157 36027 480891 500000) 0 nil]) ((5109 . 5114)) nil (23157 36027 480901 300000) 0 nil]) ((5212 . 5214)) nil (23157 36027 480911 500000) 0 nil]) ((5197 . 5198)) nil (23157 36027 480921 300000) 0 nil]) ((nil fontified t 5207 . 5211) (#("inne" 0 4 (fontified t)) . -5197) (5201 . 5215) 5201) nil (23157 36027 480935 700000) 0 nil]) ((5196 . 5201)) nil (23157 36027 480948 500000) 0 nil]) ((5147 . 5153) (#("    " 0 4 (fontified t)) . 5147)) nil (23157 36027 480959 900000) 0 nil]) ((#("
" 0 1 (fontified t)) . 5215) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1)) nil (23157 36027 480983 300000) 0 nil]) ((#("      elem.$inner_document().$blocks()" 0 12 (fontified t) 12 38 (fontified t)) . 5215)) nil (23157 36027 480995 700000) 0 nil]) ((nil rear-nonsticky nil 5214 . 5215) (nil fontified nil 5170 . 5215) (nil fontified nil 5166 . 5170) (nil fontified nil 5163 . 5166) (nil fontified nil 5157 . 5163) (nil fontified nil 5156 . 5157) (nil fontified nil 5151 . 5156) (nil fontified nil 5147 . 5151) (5147 . 5215)) nil (23157 36027 481018 0) 0 nil]) ((5173 . 5185)) nil (23157 36027 481031 600000) 0 nil]) ((5158 . 5159)) nil (23157 36027 481041 400000) 0 nil]) ((nil fontified t 5167 . 5172) (#("inner" 0 5 (fontified t)) . -5158) (5163 . 5177) 5163) nil (23157 36027 481055 800000) 0 nil]) ((5153 . 5163)) nil (23157 36027 481068 200000) 0 nil]) ((5146 . 5153)) nil (23157 36027 481077 700000) 0 nil]) ((#("    " 0 4 (fontified nil)) . 5153) (5153 . 5157) (5153 . 5154)) nil (23157 36027 481090 500000) 0 nil]) ((5146 . 5151)) nil (23157 36027 481102 200000) 0 nil]) ((5144 . 5147)) nil (23157 36027 481112 400000) 0 nil]) ((5134 . 5142)) nil (23157 36027 481121 500000) 0 nil]) ((5118 . 5135)) nil (23157 36027 481131 700000) 0 nil]) ((5114 . 5119)) nil (23157 36027 481141 500000) 0 nil]) ((5110 . 5114)) nil (23157 36027 481151 300000) 0 nil]) ((#("    console.log(elem);" 0 22 (fontified t)) . 5110) (t 23157 35952 603861 0)) nil (23157 36027 481163 400000) 0 nil]) ((5123 . 5132)) nil (23157 35952 376849 600000) 0 nil]) ((#("g" 0 1 (fontified t)) . -5123)) nil (23157 35952 376876 800000) 0 nil]) ((#("(" 0 1 (fontified t)) . -5124)) nil (23157 35952 376892 700000) 0 nil]) ((#("l" 0 1 (fontified t)) . -5125)) nil (23157 35952 376904 400000) 0 nil]) ((#("e" 0 1 (fontified t)) . -5126)) nil (23157 35952 376916 100000) 0 nil]) ((5114 . 5127)) nil (23157 35952 376927 400000) 0 nil]) ((5109 . 5114) (t 23157 35789 54514 100000)) nil (23157 35952 376939 900000) 0 nil]) ((5254 . 6562) (#("{
      type: \"TableCell\",
      children: [{
        type: 'Str',
        value: raw,
        loc,
        range,
        raw,
      }],
      loc,
      range,
      raw,
    }];
  }

  convertTableRow(row, lineno) {
    let children = []
    for (let cell of row) {
      children = [...children, ...this.convertTableCell(cell, lineno)];
    }
    if (children.length === 0) {
      return [];
    }
    const loc = {
      start: children[0].loc.start,
      end: children[children.length - 1].loc.end
    };
    const range = this.locationToRange(loc);
    return [{
      type: \"TableRow\",
      children,
      loc,
      range,
      raw: \"\",
    }];
  }

  convertTable(elem, { min, max }) {
    let children = [];
    for (let row of elem.$rows().$body()) {
      children = [...children, ...this.convertTableRow(row, { min, max, update: false })];
    }
    if (children.length === 0) {
      return [];
    }
    const loc = {
      start: children[0].loc.start,
      end: children[children.length - 1].loc.end
    };
    const range = this.locationToRange(loc);
    return [{
      type: \"Table\",
      children,
      loc,
      range,
      raw: \"\",
    }" 0 2 (fontified t) 2 14 (fontified t) 14 25 (fontified t face font-lock-string-face) 25 27 (fontified t) 27 44 (fontified t) 44 46 (fontified t) 46 54 (fontified t) 54 59 (fontified t) 59 60 (fontified t) 60 65 (fontified t face font-lock-string-face) 65 67 (fontified t) 67 75 (fontified t) 75 81 (fontified t) 81 87 (fontified t) 87 95 (fontified t) 95 100 (fontified t) 100 108 (fontified t) 108 115 (fontified t) 115 123 (fontified t) 123 127 (fontified t) 127 128 (fontified t) 128 134 (fontified t) 134 138 (fontified t) 138 144 (fontified t) 144 149 (fontified t) 149 155 (fontified t) 155 162 (fontified t) 162 168 (fontified t) 168 172 (fontified t) 172 173 (rear-nonsticky t fontified t) 173 178 (fontified t) 178 179 (fontified t) 179 180 (rear-nonsticky t fontified t) 180 181 (fontified t) 181 185 (fontified t) 185 186 (fontified t) 186 216 (fontified t) 216 219 (fontified t) 219 223 (fontified t) 223 226 (fontified t face font-lock-keyword-face) 226 227 (fontified t) 227 235 (fontified t face font-lock-variable-name-face) 235 241 (fontified t) 241 245 (fontified t) 245 248 (fontified t face font-lock-keyword-face) 248 250 (fontified t) 250 253 (fontified t face font-lock-keyword-face) 253 254 (fontified t) 254 258 (fontified t face font-lock-variable-name-face) 258 265 (fontified t) 265 266 (fontified t) 266 269 (fontified t) 269 283 (fontified t) 283 285 (fontified t) 285 303 (fontified t) 303 307 (fontified t face font-lock-constant-face) 307 308 (fontified t) 308 338 (fontified t) 338 340 (fontified t) 340 341 (fontified t) 341 347 (fontified t) 347 351 (fontified t) 351 353 (fontified t face font-lock-keyword-face) 353 355 (fontified t) 355 376 (fontified t) 376 377 (fontified t) 377 380 (fontified t) 380 386 (fontified t) 386 392 (fontified t face font-lock-keyword-face) 392 397 (fontified t) 397 401 (fontified t) 401 403 (fontified t) 403 407 (fontified t) 407 412 (fontified t face font-lock-keyword-face) 412 413 (fontified t) 413 416 (fontified t face font-lock-variable-name-face) 416 421 (fontified t) 421 457 (fontified t) 457 517 (fontified t) 517 522 (fontified t face font-lock-keyword-face) 522 523 (fontified t) 523 528 (fontified t face font-lock-variable-name-face) 528 531 (fontified t) 531 535 (fontified t face font-lock-constant-face) 535 557 (fontified t) 557 558 (rear-nonsticky t fontified t) 558 562 (fontified t) 562 568 (fontified t face font-lock-keyword-face) 568 572 (fontified t) 572 583 (fontified t) 583 584 (fontified t) 584 594 (fontified t face font-lock-string-face) 594 596 (fontified t) 596 612 (fontified t) 612 623 (fontified t) 623 635 (fontified t) 635 636 (fontified t) 636 646 (fontified t) 646 647 (fontified t) 647 649 (fontified t face font-lock-string-face) 649 650 (fontified t) 650 651 (fontified t) 651 658 (fontified t) 658 659 (rear-nonsticky t fontified t) 659 662 (fontified t) 662 663 (rear-nonsticky t fontified t) 663 664 (fontified t) 664 666 (fontified t) 666 677 (fontified t) 677 678 (rear-nonsticky t fontified t) 678 698 (fontified t) 698 701 (fontified t) 701 705 (fontified t) 705 708 (fontified t face font-lock-keyword-face) 708 709 (fontified t) 709 717 (fontified t face font-lock-variable-name-face) 717 724 (fontified t) 724 728 (fontified t) 728 731 (fontified t face font-lock-keyword-face) 731 733 (fontified t) 733 736 (fontified t face font-lock-keyword-face) 736 737 (fontified t) 737 740 (fontified t face font-lock-variable-name-face) 740 744 (fontified t) 744 748 (fontified t) 748 763 (fontified t) 763 764 (rear-nonsticky t fontified t) 764 765 (fontified t) 765 768 (fontified t) 768 782 (fontified t) 782 784 (fontified t) 784 802 (fontified t) 802 806 (fontified t face font-lock-constant-face) 806 848 (fontified t) 848 853 (fontified t face font-lock-constant-face) 853 854 (fontified t) 854 855 (fontified t) 855 856 (fontified t) 856 858 (fontified t) 858 859 (fontified t) 859 864 (fontified t) 864 865 (fontified t) 865 869 (fontified t) 869 871 (fontified t face font-lock-keyword-face) 871 895 (fontified t) 895 898 (fontified t) 898 904 (fontified t) 904 910 (fontified t face font-lock-keyword-face) 910 914 (fontified t) 914 915 (fontified t) 915 920 (fontified t) 920 921 (fontified t) 921 925 (fontified t) 925 930 (fontified t face font-lock-keyword-face) 930 931 (fontified t) 931 934 (fontified t face font-lock-variable-name-face) 934 939 (fontified t) 939 975 (fontified t) 975 1035 (fontified t) 1035 1040 (fontified t face font-lock-keyword-face) 1040 1041 (fontified t) 1041 1046 (fontified t face font-lock-variable-name-face) 1046 1049 (fontified t) 1049 1053 (fontified t face font-lock-constant-face) 1053 1075 (fontified t) 1075 1076 (rear-nonsticky t fontified t) 1076 1080 (fontified t) 1080 1086 (fontified t face font-lock-keyword-face) 1086 1090 (fontified t) 1090 1101 (fontified t) 1101 1102 (fontified t) 1102 1109 (fontified t face font-lock-string-face) 1109 1111 (fontified t) 1111 1127 (fontified t) 1127 1138 (fontified t) 1138 1150 (fontified t) 1150 1151 (fontified t) 1151 1161 (fontified t) 1161 1162 (fontified t) 1162 1164 (fontified t face font-lock-string-face) 1164 1165 (fontified t) 1165 1166 (fontified t) 1166 1171 (fontified t)) . 5254) (undo-tree-id1780 . -138) (undo-tree-id1781 . -659) (undo-tree-id1782 . -1138) (undo-tree-id1783 . -558) (undo-tree-id1784 . -558) (undo-tree-id1785 . -513) (undo-tree-id1786 . -513) (undo-tree-id1787 . -865) (undo-tree-id1788 . -744) (undo-tree-id1789 . -865) (undo-tree-id1790 . -802) (undo-tree-id1791 . -865) (undo-tree-id1792 . -1076) (undo-tree-id1793 . -768) (undo-tree-id1794 . -921) (undo-tree-id1795 . -403) (undo-tree-id1796 . -45) (undo-tree-id1797 . -173) (undo-tree-id1798 . -506) (undo-tree-id1799 . -506) (undo-tree-id1800 . -457) (undo-tree-id1801 . -457) (undo-tree-id1802 . -421) (undo-tree-id1803 . -421) (undo-tree-id1804 . -403) (undo-tree-id1805 . -403) (undo-tree-id1806 . -397) (undo-tree-id1807 . -397) (undo-tree-id1808 . -380) (undo-tree-id1809 . -380) (undo-tree-id1810 . -87) 5767 (t 23157 35781 605780 300000)) nil (23157 35952 377208 700000) 0 nil]) ((5389 . 5390)) nil (23157 35781 374480 200000) 0 nil]) ((5297 . 5298) (t 23157 35753 694996 200000)) nil (23157 35781 374510 400000) 0 nil]) ((#(" " 0 1 (fontified t)) . -5430) (undo-tree-id1776 . 1)) nil (23157 35753 503470 900000) 0 nil]) ((#("   " 0 3 (fontified t)) . -5431) 5430) nil (23157 35753 503500 300000) 0 nil]) ((#("
" 0 1 (fontified t)) . -5430) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . 1)) nil (23157 35753 503536 900000) 0 nil]) ((#("  " 0 2 (fontified t)) . -5420) 5420) nil (23157 35753 503552 800000) 0 nil]) ((#("  " 0 2 (fontified t)) . -5407) 5407) nil (23157 35753 503575 500000) 0 nil]) ((#("  " 0 2 (fontified t)) . -5396) 5395) nil (23157 35753 503587 500000) 0 nil]) ((#("  " 0 2 (fontified nil face (my-face-u-1))) . -5435) (5437 . 5438)) nil (23157 35753 503600 0) 0 nil]) ((nil rear-nonsticky nil 5430 . 5431) (nil fontified nil 5430 . 5431) (nil fontified nil 5426 . 5430) (nil fontified nil 5418 . 5426) (nil fontified nil 5411 . 5418) (nil fontified nil 5403 . 5411) (nil fontified nil 5398 . 5403) (nil fontified nil 5390 . 5398) (5390 . 5431)) nil (23157 35753 503622 300000) 0 nil]) ((5389 . 5396)) nil (23157 35753 503634 0) 0 nil]) ((5389 . 5394)) nil (23157 35753 503643 0) 0 nil]) ((5388 . 5389)) nil (23157 35753 503652 100000) 0 nil]) ((5381 . 5387) (#("    " 0 4 (fontified t)) . 5381)) nil (23157 35753 503663 400000) 0 nil]) ((5368 . 5376) (#("      " 0 6 (fontified t)) . 5368)) nil (23157 35753 503675 900000) 0 nil]) ((5353 . 5361) (#("      " 0 6 (fontified t)) . 5353)) nil (23157 35753 503687 600000) 0 nil]) ((5340 . 5348) (#("      " 0 6 (fontified t)) . 5340)) nil (23157 35753 503701 600000) 0 nil]) ((5320 . 5328) (#("      " 0 6 (fontified t)) . 5320)) nil (23157 35753 503712 900000) 0 nil]) ((5299 . 5307) (#("      " 0 6 (fontified t)) . 5299)) nil (23157 35753 503724 600000) 0 nil]) ((5287 . 5297)) nil (23157 35753 503735 900000) 0 nil]) ((5280 . 5287)) nil (23157 35753 503745 0) 0 nil]) ((5279 . 5280)) nil (23157 35753 503754 0) 0 nil]) ((5269 . 5278)) nil (23157 35753 503763 900000) 0 nil]) ((5262 . 5270)) nil (23157 35753 503773 700000) 0 nil]) ((5255 . 5262)) nil (23157 35753 503782 0) 0 nil]) ((5254 . 5255) (t 23157 35694 98741 400000)) nil (23157 35753 503792 600000) 0 nil]) ((6299 . 6305)) nil (23157 35693 940555 200000) 0 nil]) ((6292 . 6299) (t 23157 35692 647067 700000)) nil (23157 35693 940567 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 6293) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1)) nil (23157 35692 449212 600000) 0 nil]) ((#("      raw," 0 10 (fontified t)) . 6293) (undo-tree-id1775 . -10) (t 23157 35686 179457 400000)) nil (23157 35692 449246 200000) 0 nil]) ((5784 . 5790)) nil (23157 35685 992229 700000) 0 nil]) ((5777 . 5784)) nil (23157 35685 992252 400000) 0 nil]) ((#("
" 0 1 (fontified t)) . 5778) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1)) nil (23157 35685 992408 700000) 0 nil]) ((#("      raw," 0 10 (fontified t)) . 5778) (undo-tree-id1771 . -10) (t 23157 35674 951839 500000)) nil (23157 35685 992439 300000) 0 nil]) ((5490 . 5492)) nil (23157 35674 750868 0) 0 nil]) ((5484 . 5490) (t 23157 35638 888075 700000)) nil (23157 35674 750891 800000) 0 nil]) ((5323 . 5327)) nil (23157 35638 670329 100000) 0 nil]) ((5316 . 5323)) nil (23157 35638 670358 200000) 0 nil]) ((5310 . 5316)) nil (23157 35638 670371 700000) 0 nil]) ((5303 . 5310)) nil (23157 35638 670381 600000) 0 nil]) ((5299 . 5303)) nil (23157 35638 670391 0) 0 nil]) ((5292 . 5299)) nil (23157 35638 670399 700000) 0 nil]) ((5289 . 5290)) nil (23157 35638 670409 900000) 0 nil]) ((#("o" 0 1 (fontified t)) . 5289)) nil (23157 35638 670419 700000) 0 nil]) ((5281 . 5292)) nil (23157 35638 670440 200000) 0 nil]) ((5274 . 5281)) nil (23157 35638 670450 700000) 0 nil]) ((5273 . 5274)) nil (23157 35638 670460 200000) 0 nil]) ((5269 . 5272)) nil (23157 35638 670469 200000) 0 nil]) ((5262 . 5270)) nil (23157 35638 670478 700000) 0 nil]) ((5255 . 5262)) nil (23157 35638 670488 500000) 0 nil]) ((5255 . 5260)) nil (23157 35638 670496 800000) 0 nil]) ((5182 . 5184)) nil (23157 35638 670506 200000) 0 nil]) ((5181 . 5183)) nil (23157 35638 670516 0) 0 nil]) ((5177 . 5182)) nil (23157 35638 670525 500000) 0 nil]) ((5172 . 5177)) nil (23157 35638 670536 100000) 0 nil]) ((#("o" 0 1 (fontified t)) . -5172)) nil (23157 35638 670544 400000) 0 nil]) ((#("w" 0 1 (fontified t)) . -5173)) nil (23157 35638 670556 100000) 0 nil]) ((5171 . 5174)) nil (23157 35638 670568 200000) 0 nil]) ((#("]" 0 1 (fontified t)) . 5171)) nil (23157 35638 670577 200000) 0 nil]) ((#("[raw" 0 4 (fontified t)) . 5171) (undo-tree-id1764 . 4) (undo-tree-id1765 . -1)) nil (23157 35638 670623 700000) 0 nil]) ((5131 . 5135)) nil (23157 35638 670637 600000) 0 nil]) ((#("title" 0 5 (fontified t)) . 5131)) nil (23157 35638 670645 900000) 0 nil]) ((#("    
" 0 4 (fontified t face (my-face-u-1)) 4 5 (fontified t)) . 5233) (undo-tree-id1766 . -5) (undo-tree-id1767 . -5)) nil (23157 35638 670992 600000) 0 nil]) ((nil rear-nonsticky nil 5232 . 5233) (nil fontified nil 5210 . 5233) (nil fontified nil 5206 . 5210) (nil fontified nil 5203 . 5206) (nil fontified nil 5198 . 5203) (nil fontified nil 5197 . 5198) (nil fontified nil 5192 . 5197) (nil fontified nil 5188 . 5192) (nil fontified nil 5158 . 5188) (nil fontified nil 5154 . 5158) (nil fontified nil 5151 . 5154) (nil fontified nil 5148 . 5151) (nil fontified nil 5147 . 5148) (nil fontified nil 5142 . 5147) (nil fontified nil 5123 . 5142) (nil fontified nil 5120 . 5123) (nil fontified nil 5119 . 5120) (nil fontified nil 5114 . 5119) (nil fontified nil 5110 . 5114) (5110 . 5233)) nil (23157 35638 671053 700000) 0 nil]) ((5109 . 5114)) nil (23157 35638 671073 0) 0 nil] [nil nil ((5123 . 5128)) ((#("
    " 0 5 (fontified t)) . 5123) (undo-tree-id1763 . -5)) (23157 35603 945804 100000) 0 nil]) ((5122 . 5124) (t 23157 35561 828310 700000)) nil (23157 35603 946225 800000) 0 nil]) ((5526 . 5529)) nil (23157 35561 684904 400000) 0 nil]) ((#("
" 0 1 (fontified t)) . 5590) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1)) nil (23157 35561 684968 900000) 0 nil]) ((#("    return [];" 0 4 (fontified t) 4 10 (fontified t face font-lock-keyword-face) 10 13 (fontified t) 13 14 (rear-nonsticky t fontified t)) . 5590) (undo-tree-id1738 . -4) (undo-tree-id1739 . -14)) nil (23157 35561 685000 0) 0 nil]) ((#("    
" 0 4 (fontified t face (my-face-u-1)) 4 5 (fontified t)) . 5590) (undo-tree-id1740 . -5) (undo-tree-id1741 . -5) (undo-tree-id1742 . -5)) nil (23157 35561 685043 400000) 0 nil]) ((nil rear-nonsticky nil 5589 . 5590) (nil fontified nil 5589 . 5590) (nil fontified nil 5582 . 5589) (nil fontified nil 5581 . 5582) (nil fontified nil 5580 . 5581) (nil fontified nil 5578 . 5580) (nil fontified nil 5577 . 5578) (nil fontified nil 5567 . 5577) (nil fontified nil 5566 . 5567) (nil fontified nil 5556 . 5566) (nil fontified nil 5545 . 5556) (nil fontified nil 5529 . 5545) (nil fontified nil 5527 . 5529) (nil fontified nil 5520 . 5527) (nil fontified nil 5519 . 5520) (nil fontified nil 5508 . 5519) (nil fontified nil 5504 . 5508) (nil fontified nil 5498 . 5504) (nil fontified nil 5494 . 5498) (nil fontified nil 5493 . 5494) (nil fontified nil 5471 . 5493) (nil fontified nil 5467 . 5471) (nil fontified nil 5464 . 5467) (nil fontified nil 5459 . 5464) (nil fontified nil 5458 . 5459) (nil fontified nil 5453 . 5458) (nil fontified nil 5393 . 5453) (nil fontified nil 5357 . 5393) (nil fontified nil 5352 . 5357) (nil fontified nil 5349 . 5352) (nil fontified nil 5348 . 5349) (nil fontified nil 5343 . 5348) (nil fontified nil 5339 . 5343) (5339 . 5590)) nil (23157 35561 685099 700000) 0 nil]) ((5338 . 5343)) nil (23157 35561 685122 300000) 0 nil]) ((5332 . 5337)) nil (23157 35561 685131 0) 0 nil]) ((5316 . 5322) (#("    " 0 4 (fontified nil)) . 5316) (5320 . 5330)) nil (23157 35561 685143 800000) 0 nil]) ((5315 . 5320)) nil (23157 35561 685154 400000) 0 nil]) ((5313 . 5316)) nil (23157 35561 685163 900000) 0 nil]) ((5299 . 5312)) nil (23157 35561 685174 100000) 0 nil]) ((#("chil" 0 4 (fontified t)) . -5291) (5295 . 5303) 5295) nil (23157 35561 685185 800000) 0 nil]) ((5291 . 5295)) nil (23157 35561 685196 700000) 0 nil]) ((5287 . 5292)) nil (23157 35561 685206 500000) 0 nil]) ((5282 . 5287)) nil (23157 35561 685215 200000) 0 nil]) ((5275 . 5276)) nil (23157 35561 685224 600000) 0 nil]) ((5244 . 5247)) nil (23157 35561 685234 500000) 0 nil]) ((5266 . 5270)) nil (23157 35561 685244 300000) 0 nil]) ((#("row" 0 3 (fontified t)) . 5266)) nil (23157 35561 685254 100000) 0 nil]) ((#("b" 0 1 (fontified t)) . -5269)) nil (23157 35561 685263 200000) 0 nil]) ((5266 . 5270)) nil (23157 35561 685273 700000) 0 nil]) ((#("." 0 1 (fontified t)) . -5266)) nil (23157 35561 685283 600000) 0 nil]) ((#("." 0 1 (fontified t)) . -5267)) nil (23157 35561 685293 0) 0 nil]) ((#("." 0 1 (fontified t)) . -5268)) nil (23157 35561 685302 800000) 0 nil]) ((5266 . 5269)) nil (23157 35561 685314 100000) 0 nil]) ((5265 . 5267)) nil (23157 35561 685323 600000) 0 nil]) ((nil fontified t 5250 . 5265) (#("convertTableRow" 0 15 (fontified t)) . -5249) (5264 . 5280) 5264) nil (23157 35561 685338 700000) 0 nil]) ((#("conve" 0 5 (fontified t)) . -5249) (5254 . 5269) 5254) nil (23157 35561 685351 900000) 0 nil]) ((5251 . 5254)) nil (23157 35561 685362 100000) 0 nil]) ((5231 . 5251)) nil (23157 35561 685371 900000) 0 nil]) ((#("c" 0 1 (fontified t)) . -5231)) nil (23157 35561 685379 800000) 0 nil]) ((5231 . 5232)) nil (23157 35561 685389 300000) 0 nil]) ((5228 . 5232)) nil (23157 35561 685399 500000) 0 nil]) ((#(" " 0 1 (fontified t face (my-face-u-1))) . -5228)) nil (23157 35561 685409 700000) 0 nil]) ((5227 . 5229)) nil (23157 35561 685420 200000) 0 nil]) ((#(" " 0 1 (fontified t face (my-face-u-1))) . -5227)) nil (23157 35561 685428 900000) 0 nil]) ((5219 . 5228)) nil (23157 35561 685439 500000) 0 nil]) ((5212 . 5219)) nil (23157 35561 685448 900000) 0 nil]) ((5212 . 5217)) nil (23157 35561 685458 400000) 0 nil]) ((5210 . 5213)) nil (23157 35561 685467 400000) 0 nil]) ((5199 . 5209)) nil (23157 35561 685476 900000) 0 nil]) ((#("l" 0 1 (fontified t face font-lock-variable-name-face)) . -5199)) nil (23157 35561 685485 200000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -5200)) nil (23157 35561 685495 800000) 0 nil]) ((5194 . 5201)) nil (23157 35561 685518 400000) 0 nil]) ((5189 . 5195)) nil (23157 35561 685528 900000) 0 nil]) ((5180 . 5181)) nil (23157 35561 685538 0) 0 nil]) ((5183 . 5188)) nil (23157 35561 685547 400000) 0 nil]) ((5167 . 5183)) nil (23157 35561 685557 300000) 0 nil]) ((5162 . 5167)) nil (23157 35561 685565 600000) 0 nil]) ((5144 . 5147)) nil (23157 35561 685575 0) 0 nil]) ((#("C" 0 1 (fontified t)) . -5144)) nil (23157 35561 685583 700000) 0 nil]) ((#("e" 0 1 (fontified t)) . -5145)) nil (23157 35561 685593 100000) 0 nil]) ((#("l" 0 1 (fontified t)) . -5146)) nil (23157 35561 685602 200000) 0 nil]) ((#("l" 0 1 (fontified t)) . -5147)) nil (23157 35561 685611 600000) 0 nil]) ((#("     childrenet = .map(row => ;
" 0 4 (fontified t) 4 5 (fontified t) 5 15 (fontified t) 15 17 (fontified t) 17 18 (fontified t) 18 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t)) . 5385) (undo-tree-id1743 . -32) (undo-tree-id1744 . -32) (undo-tree-id1745 . -32) (undo-tree-id1746 . -18) (undo-tree-id1747 . -32) (undo-tree-id1748 . -18) (undo-tree-id1749 . -30) (undo-tree-id1750 . -32) 5417) nil (23157 35561 685679 200000) 0 nil]) ((5377 . 5378)) nil (23157 35561 685692 100000) 0 nil]) ((#(")" 0 1 (fontified t rear-nonsticky t)) . -5376) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . 1) (undo-tree-id1754 . -1)) nil (23157 35561 685712 100000) 0 nil]) ((nil rear-nonsticky nil 5376 . 5377) (nil fontified nil 5376 . 5377) (nil fontified nil 5375 . 5376) (nil fontified nil 5374 . 5375) (nil fontified nil 5373 . 5374) (nil fontified nil 5368 . 5373) (nil fontified nil 5326 . 5368) (nil fontified nil 5322 . 5326) (5322 . 5377)) nil (23157 35561 685728 700000) 0 nil]) ((#("this.convertTableRow(row, { min, max, update: false }))" 0 4 (fontified t face font-lock-constant-face) 4 46 (fontified t) 46 51 (fontified t face font-lock-constant-face) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t)) . 5360) (undo-tree-id1755 . -55) (undo-tree-id1756 . 1) (undo-tree-id1757 . -55) 5415) nil (23157 35561 685753 200000) 0 nil]) ((5306 . 5322)) nil (23157 35561 685766 800000) 0 nil]) ((5302 . 5307)) nil (23157 35561 685778 500000) 0 nil]) ((#("." 0 1 (fontified t)) . -5302)) nil (23157 35561 685787 600000) 0 nil]) ((5294 . 5303)) nil (23157 35561 685798 200000) 0 nil]) ((5287 . 5294)) nil (23157 35561 685806 500000) 0 nil]) ((5287 . 5292)) nil (23157 35561 685814 800000) 0 nil]) ((5285 . 5288)) nil (23157 35561 685824 200000) 0 nil]) ((nil fontified nil 5283 . 5284) (nil fontified nil 5268 . 5283) (nil fontified nil 5264 . 5268) (5264 . 5284)) nil (23157 35561 685838 600000) 0 nil]) ((5263 . 5264)) nil (23157 35561 685849 500000) 0 nil]) ((#("elem.$rows().$body()" 0 4 (fontified t) 4 19 (fontified t) 19 20 (rear-nonsticky t fontified t)) . 5283) (undo-tree-id1758 . -20) (undo-tree-id1759 . 1) (undo-tree-id1760 . -20) (undo-tree-id1761 . 2) (undo-tree-id1762 . -19) 5303) nil (23157 35561 685888 800000) 0 nil]) ((5257 . 5263)) nil (23157 35561 685902 400000) 0 nil]) ((5253 . 5257)) nil (23157 35561 685911 400000) 0 nil]) ((5242 . 5243)) nil (23157 35561 685920 100000) 0 nil]) ((5247 . 5253)) nil (23157 35561 685928 800000) 0 nil]) ((5242 . 5247)) nil (23157 35561 685938 600000) 0 nil]) ((5238 . 5239)) nil (23157 35561 685948 100000) 0 nil]) ((5225 . 5241)) nil (23157 35561 685957 500000) 0 nil]) ((5220 . 5225)) nil (23157 35561 685967 300000) 0 nil]) ((5234 . 5236)) nil (23157 35561 685977 500000) 0 nil]) ((5225 . 5234) (#(" children" 0 1 (fontified t) 1 9 (fontified t)) . 5225)) nil (23157 35561 685990 0) 0 nil]) ((#("const" 0 5 (fontified t face font-lock-keyword-face)) . 5225)) nil (23157 35561 686000 900000) 0 nil]) ((5149 . 5152)) nil (23157 35561 686023 600000) 0 nil]) ((#("f" 0 1 (fontified t)) . -5149)) nil (23157 35561 686034 500000) 0 nil]) ((#("r" 0 1 (fontified t)) . -5150)) nil (23157 35561 686046 200000) 0 nil]) ((#("o" 0 1 (fontified t)) . -5151)) nil (23157 35561 686056 400000) 0 nil]) ((5149 . 5152)) nil (23157 35561 686065 100000) 0 nil]) ((#("elem" 0 4 (fontified t)) . 5149)) nil (23157 35561 686072 700000) 0 nil]) ((nil rear-nonsticky nil 5178 . 5179) (nil fontified nil 5175 . 5179) (nil fontified nil 5169 . 5175) (5169 . 5179)) nil (23157 35561 686084 800000) 0 nil]) ((5164 . 5169)) nil (23157 35561 686092 300000) 0 nil]) ((nil rear-nonsticky nil 5123 . 5124) (nil fontified nil 5120 . 5124) (nil fontified nil 5114 . 5120) (5114 . 5124)) nil (23157 35561 686102 900000) 0 nil]) ((#("return [];" 0 6 (fontified t face font-lock-keyword-face) 6 10 (fontified t)) . 5114)) nil (23157 35561 686110 400000) 0 nil]) ((5114 . 5124)) nil (23157 35561 686118 0) 0 nil]) ((5109 . 5114) (t 23157 35431 873234 200000)) nil (23157 35561 686126 300000) 0 nil]) ((5283 . 5297)) nil (23157 35431 683731 600000) 0 nil]) ((#(":" 0 1 (fontified t)) . -5283)) nil (23157 35431 683757 700000) 0 nil]) ((5272 . 5284)) nil (23157 35431 683773 500000) 0 nil]) ((5271 . 5273)) nil (23157 35431 683784 500000) 0 nil]) ((5177 . 5187)) nil (23157 35431 683794 700000) 0 nil]) ((5176 . 5178)) nil (23157 35431 683803 800000) 0 nil]) ((#("lineno" 0 6 (fontified t)) . 5176) (undo-tree-id1713 . -6)) nil (23157 35431 683837 0) 0 nil]) ((#("    for (let row of elem.$rows().$body()) {
      children.push({
      })
    }
" 0 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 9 (fontified t) 9 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t) 13 16 (fontified t face font-lock-variable-name-face) 16 19 (fontified t) 19 20 (fontified t) 20 24 (fontified t) 24 41 (fontified t) 41 44 (fontified t) 44 74 (fontified t) 74 75 (fontified t) 75 81 (fontified t)) . 5269) (undo-tree-id1714 . -66) (undo-tree-id1715 . -66) (undo-tree-id1716 . -75) (undo-tree-id1717 . -75) (undo-tree-id1718 . -81) (undo-tree-id1719 . -81) (undo-tree-id1720 . -44) (undo-tree-id1721 . -44) (undo-tree-id1722 . -20) (undo-tree-id1723 . -81) (undo-tree-id1724 . -81) 5350) nil (23157 35431 683913 300000) 0 nil]) ((5267 . 5268)) nil (23157 35431 683931 0) 0 nil]) ((5263 . 5265)) nil (23157 35431 683941 600000) 0 nil]) ((#("(" 0 1 (fontified t)) . 5263) (undo-tree-id1725 . 1) (undo-tree-id1726 . -1)) nil (23157 35431 683958 900000) 0 nil]) ((#(")" 0 1 (fontified t)) . 5263)) nil (23157 35431 683967 300000) 0 nil]) ((5260 . 5263)) nil (23157 35431 683975 200000) 0 nil]) ((5244 . 5261)) nil (23157 35431 683982 700000) 0 nil]) ((#("convertElementList" 0 18 (fontified t)) . 5244) (undo-tree-id1727 . -18) (undo-tree-id1728 . -18) (undo-tree-id1729 . -18) (undo-tree-id1730 . -18)) nil (23157 35431 684025 0) 0 nil]) ((5262 . 5264)) nil (23157 35431 684035 600000) 0 nil]) ((nil fontified t 5246 . 5262) (#("convertTableCell" 0 16 (fontified t)) . -5244) (5260 . 5278) 5260) nil (23157 35431 684048 100000) 0 nil]) ((nil fontified t 5248 . 5260) (#("convertTable" 0 12 (fontified t)) . -5244) (5256 . 5272) 5256) nil (23157 35431 684065 800000) 0 nil]) ((#("conve" 0 5 (fontified t)) . -5244) (5249 . 5261) 5249) nil (23157 35431 684081 300000) 0 nil]) ((5232 . 5249)) nil (23157 35431 684137 200000) 0 nil]) ((5227 . 5233)) nil (23157 35431 684194 100000) 0 nil]) ((nil rear-nonsticky nil 5226 . 5227) (nil fontified nil 5211 . 5227) (nil fontified nil 5207 . 5211) (5207 . 5227)) nil (23157 35431 684210 800000) 0 nil]) ((#("[" 0 1 (fontified t)) . -5207)) nil (23157 35431 684222 800000) 0 nil]) ((#("]" 0 1 (fontified t)) . -5208) (undo-tree-id1731 . 1) (undo-tree-id1732 . -1)) nil (23157 35431 684261 700000) 0 nil]) ((#(";" 0 1 (fontified t)) . -5209)) nil (23157 35431 684274 600000) 0 nil]) ((#("  
" 0 2 (fontified t face (my-face-u-1)) 2 3 (fontified t)) . 5154)) nil (23157 35431 684282 900000) 0 nil]) ((nil rear-nonsticky nil 5153 . 5154) (nil fontified nil 5153 . 5154) (nil fontified nil 5147 . 5153) (nil fontified nil 5115 . 5147) (5115 . 5154)) nil (23157 35431 684296 500000) 0 nil]) ((5115 . 5117) (#("  " 0 2 (fontified nil)) . 5114) (5114 . 5116) (5114 . 5115) (#("  " 0 2 (fontified t face (my-face-u-1))) . 5114) 5116) nil (23157 35431 684311 200000) 0 nil]) ((5113 . 5116)) nil (23157 35431 684322 100000) 0 nil]) ((5109 . 5112)) nil (23157 35431 684329 700000) 0 nil]) ((#("]" 0 1 (fontified t)) . -5109) (undo-tree-id1733 . 1) (undo-tree-id1734 . -1)) nil (23157 35431 684345 200000) 0 nil]) ((5109 . 5110)) nil (23157 35431 684354 200000) 0 nil]) ((5107 . 5110)) nil (23157 35431 684362 900000) 0 nil]) ((5094 . 5106)) nil (23157 35431 684370 900000) 0 nil]) ((5077 . 5095)) nil (23157 35431 684378 800000) 0 nil]) ((5075 . 5077) (#("  " 0 2 (fontified nil)) . 5074) (5074 . 5076) (5074 . 5075) (#("  " 0 2 (fontified t face (my-face-u-1))) . 5074) 5076) nil (23157 35431 684393 100000) 0 nil]) ((5073 . 5076)) nil (23157 35431 684404 800000) 0 nil]) ((5196 . 5203)) nil (23157 35431 684412 400000) 0 nil]) ((5195 . 5197)) nil (23157 35431 684421 100000) 0 nil]) ((5181 . 5196)) nil (23157 35431 684429 400000) 0 nil]) ((5175 . 5181)) nil (23157 35431 684436 900000) 0 nil]) ((#("      for (let)" 0 6 (fontified t) 6 9 (fontified t face font-lock-keyword-face) 9 11 (fontified t) 11 14 (fontified t face font-lock-keyword-face) 14 15 (fontified t)) . 5175)) nil (23157 35431 684444 900000) 0 nil]) ((5186 . 5189)) nil (23157 35431 684453 200000) 0 nil]) ((5181 . 5187)) nil (23157 35431 684461 500000) 0 nil]) ((5175 . 5181)) nil (23157 35431 684469 0) 0 nil]) ((#("      row" 0 9 (fontified t)) . 5175)) nil (23157 35431 684476 600000) 0 nil]) ((5181 . 5184)) nil (23157 35431 684485 300000) 0 nil]) ((5174 . 5181) (t 23157 35327 367234 400000)) nil (23157 35431 684495 100000) 0 nil]) ((5220 . 5230)) nil (23157 35327 181579 0) 0 nil]) ((5213 . 5220)) nil (23157 35327 181600 900000) 0 nil]) ((5213 . 5218)) nil (23157 35327 181611 100000) 0 nil]) ((5211 . 5214)) nil (23157 35327 181618 700000) 0 nil]) ((5209 . 5210)) nil (23157 35327 181625 100000) 0 nil]) ((5189 . 5209)) nil (23157 35327 181633 400000) 0 nil]) ((5185 . 5190)) nil (23157 35327 181641 300000) 0 nil]) ((5180 . 5185) (t 23157 35312 223903 700000)) nil (23157 35327 181650 400000) 0 nil]) ((5404 . 5408)) nil (23157 35312 78205 100000) 0 nil]) ((5397 . 5404)) nil (23157 35312 78229 200000) 0 nil]) ((5393 . 5397)) nil (23157 35312 78247 700000) 0 nil]) ((5386 . 5393)) nil (23157 35312 78255 700000) 0 nil]) ((#("    
" 0 4 (fontified t face (my-face-u-1)) 4 5 (fontified t)) . 5336) (undo-tree-id1709 . -5) (undo-tree-id1710 . -5) (undo-tree-id1711 . -5) (undo-tree-id1712 . -5)) nil (23157 35312 78293 0) 0 nil]) ((nil rear-nonsticky nil 5335 . 5336) (nil fontified nil 5313 . 5336) (nil fontified nil 5309 . 5313) (nil fontified nil 5306 . 5309) (nil fontified nil 5301 . 5306) (nil fontified nil 5300 . 5301) (nil fontified nil 5295 . 5300) (nil fontified nil 5235 . 5295) (nil fontified nil 5199 . 5235) (nil fontified nil 5194 . 5199) (nil fontified nil 5191 . 5194) (nil fontified nil 5190 . 5191) (nil fontified nil 5185 . 5190) (nil fontified nil 5181 . 5185) (5181 . 5336)) nil (23157 35312 78312 700000) 0 nil]) ((5180 . 5185)) nil (23157 35312 78322 100000) 0 nil]) ((5222 . 5231)) nil (23157 35312 78329 700000) 0 nil]) ((5216 . 5222)) nil (23157 35312 78336 500000) 0 nil]) ((#("      childnre," 0 15 (fontified t)) . 5216)) nil (23157 35312 78342 900000) 0 nil]) ((5222 . 5231)) nil (23157 35312 78350 0) 0 nil]) ((5215 . 5222)) nil (23157 35312 78356 800000) 0 nil]) ((5110 . 5130)) nil (23157 35312 78364 800000) 0 nil]) ((5202 . 5210)) nil (23157 35312 78374 600000) 0 nil]) ((5195 . 5202)) nil (23157 35312 78384 0) 0 nil]) ((5194 . 5195)) nil (23157 35312 78392 700000) 0 nil]) ((5188 . 5193)) nil (23157 35312 78402 900000) 0 nil]) ((5181 . 5189)) nil (23157 35312 78412 0) 0 nil]) ((5174 . 5181)) nil (23157 35312 78419 900000) 0 nil]) ((5174 . 5179)) nil (23157 35312 78428 200000) 0 nil]) ((5173 . 5175)) nil (23157 35312 78436 900000) 0 nil]) ((5105 . 5110)) nil (23157 35312 78444 800000) 0 nil]) ((5149 . 5154)) nil (23157 35312 78452 800000) 0 nil]) ((5148 . 5150)) nil (23157 35312 78461 100000) 0 nil]) ((5122 . 5125)) nil (23157 35312 78469 400000) 0 nil]) ((#(":" 0 1 (fontified t)) . 5122)) nil (23157 35312 78477 300000) 0 nil]) ((5144 . 5146)) nil (23157 35312 78486 700000) 0 nil]) ((5122 . 5124)) nil (23157 35312 78495 400000) 0 nil]) ((#(" " 0 1 (fontified t)) . -5122)) nil (23157 35312 78503 700000) 0 nil]) ((#(":" 0 1 (fontified t)) . -5123)) nil (23157 35312 78512 800000) 0 nil]) ((#(" " 0 1 (fontified t)) . -5124)) nil (23157 35312 78522 600000) 0 nil]) ((5118 . 5125)) nil (23157 35312 78532 0) 0 nil]) ((#(":" 0 1 (fontified t)) . -5118)) nil (23157 35312 78539 600000) 0 nil]) ((#(" " 0 1 (fontified t)) . -5119)) nil (23157 35312 78549 400000) 0 nil]) ((5110 . 5120)) nil (23157 35312 78558 500000) 0 nil]) ((5110 . 5130)) nil (23157 35312 78567 200000) 0 nil]) ((5105 . 5110) (t 23157 34944 560596 300000)) nil (23157 35312 78575 800000) 0 nil]) ((5117 . 5120)) nil (23157 34944 404177 900000) 0 nil]) ((#("]" 0 1 (fontified t)) . -5117) (undo-tree-id1700 . 1) (undo-tree-id1701 . -1)) nil (23157 34944 404228 500000) 0 nil]) ((#(";" 0 1 (fontified t)) . -5118)) nil (23157 34944 404258 0) 0 nil]) ((5110 . 5119)) nil (23157 34944 404267 800000) 0 nil]) ((5105 . 5110)) nil (23157 34944 404274 600000) 0 nil]) ((5105 . 5108)) nil (23157 34944 404281 400000) 0 nil]) ((5103 . 5106)) nil (23157 34944 404288 600000) 0 nil]) ((5090 . 5102)) nil (23157 34944 404296 100000) 0 nil]) ((#("r" 0 1 (fontified t)) . -5090)) nil (23157 34944 404302 900000) 0 nil]) ((#("a" 0 1 (fontified t)) . -5091)) nil (23157 34944 404310 500000) 0 nil]) ((5090 . 5092)) nil (23157 34944 404318 0) 0 nil]) ((5089 . 5091)) nil (23157 34944 404327 800000) 0 nil]) ((nil rear-nonsticky nil 5088 . 5089) (nil fontified nil 5077 . 5089) (5077 . 5089)) nil (23157 34944 404341 0) 0 nil]) ((5075 . 5077) (#("  " 0 2 (fontified nil)) . 5074) (5074 . 5076) (5074 . 5075) (#("  " 0 2 (fontified t face (my-face-u-1))) . 5074) 5076) nil (23157 34944 404359 500000) 0 nil]) ((5073 . 5076)) nil (23157 34944 404373 100000) 0 nil]) ((1434 . 1439)) nil (23157 34944 404382 200000) 0 nil]) ((#("S" 0 1 (fontified t)) . -1434) (undo-tree-id1702 . -1)) nil (23157 34944 404400 700000) 0 nil]) ((#("e" 0 1 (fontified t)) . -1435) (undo-tree-id1703 . -1)) nil (23157 34944 404417 700000) 0 nil]) ((#("c" 0 1 (fontified t)) . -1436) (undo-tree-id1704 . -1)) nil (23157 34944 404434 300000) 0 nil]) ((#("t" 0 1 (fontified t)) . -1437) (undo-tree-id1705 . -1)) nil (23157 34944 404451 300000) 0 nil]) ((#("i" 0 1 (fontified t)) . -1438) (undo-tree-id1706 . -1)) nil (23157 34944 404467 500000) 0 nil]) ((#("o" 0 1 (fontified t)) . -1439) (undo-tree-id1707 . -1)) nil (23157 34944 404483 800000) 0 nil]) ((#("n" 0 1 (fontified t)) . -1440) (undo-tree-id1708 . -1)) nil (23157 34944 404499 600000) 0 nil]) ((1442 . 1446)) nil (23157 34944 404511 0) 0 nil]) ((#("eme" 0 3 (fontified t)) . 1442)) nil (23157 34944 404520 0) 0 nil]) ((1442 . 1453)) nil (23157 34944 404531 300000) 0 nil]) ((1441 . 1444)) nil (23157 34944 404540 400000) 0 nil]) ((#("conver" 0 6 (fontified t)) . -1427) (1433 . 1447) 1433) nil (23157 34944 404552 900000) 0 nil]) ((1415 . 1433)) nil (23157 34944 404565 700000) 0 nil]) ((1409 . 1415)) nil (23157 34944 404576 700000) 0 nil]) ((#("      console.log(elem);" 0 24 (fontified t)) . 1409) (t 23157 34913 63805 400000)) nil (23157 34944 404587 200000) 0 nil]) ((1427 . 1431)) nil (23157 34912 916982 300000) 0 nil]) ((1415 . 1429)) nil (23157 34912 917012 900000) 0 nil]) ((1408 . 1415)) nil (23157 34912 917027 300000) 0 nil]) ((1408 . 1413)) nil (23157 34912 917037 500000) 0 nil]) ((1406 . 1409)) nil (23157 34912 917048 800000) 0 nil]) ((1399 . 1404)) nil (23157 34912 917057 900000) 0 nil]) ((1398 . 1400)) nil (23157 34912 917066 200000) 0 nil]) ((1303 . 1304)) nil (23157 34912 917076 700000) 0 nil]) ((1380 . 1397)) nil (23157 34912 917085 800000) 0 nil]) ((1370 . 1381) (t 23157 34890 319592 400000)) nil (23157 34912 917099 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 1371) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1)) nil (23157 34890 131798 500000) 0 nil]) ((#("    console.log(elem.context);" 0 30 (fontified t)) . 1371) (undo-tree-id1699 . -30) (t 23157 34885 218924 400000)) nil (23157 34890 131875 900000) 0 nil]) ((1387 . 1399)) nil (23157 34884 974219 100000) 0 nil]) ((1375 . 1389)) nil (23157 34884 974247 800000) 0 nil]) ((1370 . 1375) (t 23157 34867 138069 100000)) nil (23157 34884 974262 200000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1701) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1)) nil (23157 34866 916821 500000) 0 nil]) ((#("    console.log(children);" 0 16 (fontified t) 16 26 (fontified t)) . 1701) (undo-tree-id1694 . -24) (undo-tree-id1695 . -26) (t 23157 34862 852972 800000)) nil (23157 34866 916916 700000) 0 nil]) ((1382 . 1384)) nil (23157 34862 636097 300000) 0 nil]) ((#("null" 0 4 (fontified t face font-lock-constant-face)) . 1382) (undo-tree-id1690 . -4) (t 23157 34852 828473 0)) nil (23157 34862 636252 100000) 0 nil]) ((1727 . 1729)) nil (23157 34852 719366 900000) 0 nil]) ((#("chil" 0 4 (fontified t)) . -1719) (1723 . 1731) 1723) nil (23157 34852 719375 200000) 0 nil]) ((1707 . 1723)) nil (23157 34852 719380 100000) 0 nil]) ((1702 . 1707) (t 23157 23180 675850 500000)) nil (23157 34852 719383 500000) 0 nil]) ((1304 . 4979) (#("'section') {
      return this.convertSection(elem, lineno);
    }
    return null;
  }

  convertDocument(elem, lineno) {
    const raw = elem.$source();
    let children = this.convertElementList(elem.$blocks(), lineno);
    if (!elem.$header()['$nil?']()) {
      children = [this.convertHeader(elem.$header(), lineno), ...children];
    }
    if (children.length === 0) {
      return [];
    }
    const loc = {
      start: children[0].loc.start,
      end: children[children.length - 1].loc.end
    };
    const range = this.locationToRange(loc);
    return [{ type: \"Document\", children, loc, range, raw }];
  }

  convertHeader(elem, lineno) {
    const raw = elem.title;
    const loc = this.findLocation([raw], lineno);
    const range = this.locationToRange(loc);
    return {
      type: 'Header',
      depth: elem.$level() + 1,
      children: [{ type: 'Str', value: elem.title, loc, range, raw }],
      loc,
      range,
      raw
    };
  }

  convertSection(elem, lineno) {
    const raw = elem.title;
    const loc = this.findLocation([raw], lineno);
    const range = this.locationToRange(loc);
    const header = {
      type: 'Header',
      depth: elem.$level() + 1,
      children: [{ type: 'Str', value: elem.title, loc, range, raw }],
      loc,
      range,
      raw
    };
    const children = this.convertElementList(elem.$blocks(), lineno);
    return [header, ...children];
  }

  convertParagraph(elem, { min, max }) {
    const raw = elem.$source();
    const loc = this.findLocation(elem.$lines(), { min, max });
    if (!loc) {
      return [];
    }
    const range = this.locationToRange(loc);
    return [{
      type: \"Paragraph\",
      children: [{ type: \"Str\", value: raw, loc, range, raw }],
      loc,
      range,
      raw
    }];
  }

  convertQuote(elem, { min, max }) {
    const raw = \"\"; // TODO: fix asciidoc/asciidoc
    const children = this.convertElementList(elem.$blocks(), { min, max, update: false });
    if (children.length === 0) {
      return [];
    }
    return [{ type: \"BlockQuote\", children, raw, ...this.locAndRangeFrom(children) }];
  }

  convertListing(elem, { min, max }) {
    const raw = elem.$source();
    const loc = this.findLocation(elem.$lines(), { min, max });
    if (!loc) {
      return [];
    }
    const range = this.locationToRange(loc);
    return [{ type: \"CodeBlock\", value: raw, loc, range, raw }];
  }

  convertList(elem, { min, max }) {
    const raw = \"\"; // TODO: fix asciidoc/asciidoc
    const children = this.convertElementList(elem.$blocks(), {
      min,
      max,
      update: false
    });
    if (children.length === 0) {
      return [];
    }
    return [{ type: \"List\", children, raw, ...this.locAndRangeFrom(children) }];
  }

  convertDefinitionList(elem, { min, max }) {
    const raw = \"\"; // TODO: fix asciidoc/asciidoc
    const concat = Array.prototype.concat;
    const blocks = concat.apply(
      [],
      elem.$blocks().map(([terms, item]) => [...terms, item])
    );
    const children = this.convertElementList(blocks, {
      min,
      max,
      update: false
    });
    if (children.length === 0) {
      return [];
    }
    return [{ type: \"List\", children, raw, ...this.locAndRangeFrom(children) }];
  }

  convertListItem(elem, lineno) {
    const raw = \"\"; // TODO: fix asciidoc/asciidoc
    const p = this.createParagraph(elem.text, lineno);
    const blocks = this.convertElementList(elem.$blocks(), lineno);
    const children = [p, ...blocks];
    return [{
      type: \"ListItem\",
      children,
      raw,
      ...this.locAndRangeFrom(children)
    }" 0 9 (fontified t face font-lock-string-face) 9 10 (fontified t) 10 13 (fontified t) 13 19 (fontified t) 19 25 (fontified t face font-lock-keyword-face) 25 26 (fontified t) 26 30 (fontified t face font-lock-constant-face) 30 31 (fontified t) 31 60 (fontified t) 60 61 (fontified t) 61 66 (fontified t) 66 67 (fontified t) 67 71 (fontified t) 71 77 (fontified t face font-lock-keyword-face) 77 78 (fontified t) 78 82 (fontified t face font-lock-constant-face) 82 83 (fontified t) 83 84 (fontified t) 84 88 (fontified t) 88 127 (fontified t) 127 132 (fontified t face font-lock-keyword-face) 132 133 (fontified t) 133 136 (fontified t face font-lock-variable-name-face) 136 155 (fontified t) 155 159 (fontified t) 159 162 (fontified t face font-lock-keyword-face) 162 163 (fontified t) 163 171 (fontified t face font-lock-variable-name-face) 171 174 (fontified t) 174 178 (fontified t face font-lock-constant-face) 178 223 (fontified t) 223 227 (fontified t) 227 229 (fontified t face font-lock-keyword-face) 229 247 (fontified t) 247 249 (fontified t face font-lock-string-face) 249 253 (fontified t face font-lock-string-face) 253 254 (fontified t face font-lock-string-face) 254 257 (fontified t) 257 258 (fontified t) 258 261 (fontified t) 261 267 (fontified t) 267 275 (fontified t) 275 277 (fontified t) 277 279 (fontified t) 279 283 (fontified t face font-lock-constant-face) 283 284 (fontified t) 284 334 (fontified t) 334 336 (fontified t) 336 337 (fontified t) 337 342 (fontified t) 342 343 (fontified t) 343 347 (fontified t) 347 349 (fontified t face font-lock-keyword-face) 349 376 (fontified t) 376 382 (fontified t) 382 388 (fontified t face font-lock-keyword-face) 388 391 (fontified t) 391 393 (fontified t) 393 399 (fontified t) 399 403 (fontified t) 403 408 (fontified t face font-lock-keyword-face) 408 409 (fontified t) 409 412 (fontified t face font-lock-variable-name-face) 412 453 (fontified t) 453 502 (fontified t) 502 513 (fontified t) 513 518 (fontified t face font-lock-keyword-face) 518 519 (fontified t) 519 524 (fontified t face font-lock-variable-name-face) 524 527 (fontified t) 527 531 (fontified t face font-lock-constant-face) 531 554 (fontified t) 554 558 (fontified t) 558 564 (fontified t face font-lock-keyword-face) 564 574 (fontified t) 574 584 (fontified t face font-lock-string-face) 584 616 (fontified t) 616 620 (fontified t) 620 621 (fontified t) 621 650 (fontified t) 650 653 (fontified t) 653 657 (fontified t) 657 662 (fontified t face font-lock-keyword-face) 662 663 (fontified t) 663 666 (fontified t face font-lock-variable-name-face) 666 668 (fontified t) 668 681 (fontified t) 681 685 (fontified t) 685 690 (fontified t face font-lock-keyword-face) 690 691 (fontified t) 691 694 (fontified t face font-lock-variable-name-face) 694 697 (fontified t) 697 701 (fontified t face font-lock-constant-face) 701 722 (fontified t) 722 728 (fontified t) 728 731 (fontified t) 731 735 (fontified t) 735 740 (fontified t face font-lock-keyword-face) 740 741 (fontified t) 741 746 (fontified t face font-lock-variable-name-face) 746 748 (fontified t) 748 749 (fontified t) 749 753 (fontified t face font-lock-constant-face) 753 754 (fontified t) 754 775 (fontified t) 775 776 (rear-nonsticky t fontified t) 776 780 (fontified t) 780 786 (fontified t face font-lock-keyword-face) 786 789 (fontified t) 789 800 (fontified t) 800 801 (fontified t) 801 809 (fontified t face font-lock-string-face) 809 811 (fontified t) 811 842 (fontified t) 842 843 (rear-nonsticky t fontified t) 843 858 (fontified t) 858 861 (fontified t) 861 867 (fontified t) 867 868 (fontified t) 868 873 (fontified t face font-lock-string-face) 873 874 (fontified t) 874 881 (fontified t) 881 894 (fontified t) 894 898 (fontified t) 898 905 (fontified t) 905 909 (fontified t) 909 914 (fontified t) 914 925 (fontified t) 925 938 (fontified t) 938 947 (fontified t) 947 948 (rear-nonsticky t fontified t) 948 954 (fontified t) 954 955 (fontified t) 955 958 (fontified t) 958 959 (fontified t) 959 960 (fontified t) 960 990 (fontified t) 990 993 (fontified t) 993 997 (fontified t) 997 1002 (fontified t face font-lock-keyword-face) 1002 1003 (fontified t) 1003 1006 (fontified t face font-lock-variable-name-face) 1006 1008 (fontified t) 1008 1021 (fontified t) 1021 1025 (fontified t) 1025 1030 (fontified t face font-lock-keyword-face) 1030 1031 (fontified t) 1031 1034 (fontified t face font-lock-variable-name-face) 1034 1037 (fontified t) 1037 1041 (fontified t face font-lock-constant-face) 1041 1062 (fontified t) 1062 1068 (fontified t) 1068 1071 (fontified t) 1071 1075 (fontified t) 1075 1080 (fontified t face font-lock-keyword-face) 1080 1081 (fontified t) 1081 1086 (fontified t face font-lock-variable-name-face) 1086 1088 (fontified t) 1088 1089 (fontified t) 1089 1093 (fontified t face font-lock-constant-face) 1093 1094 (fontified t) 1094 1116 (fontified t) 1116 1120 (fontified t) 1120 1125 (fontified t face font-lock-keyword-face) 1125 1126 (fontified t) 1126 1132 (fontified t face font-lock-variable-name-face) 1132 1133 (fontified t) 1133 1134 (fontified t) 1134 1137 (fontified t) 1137 1148 (fontified t) 1148 1149 (fontified t) 1149 1150 (fontified t face font-lock-string-face) 1150 1156 (fontified t face font-lock-string-face) 1156 1157 (fontified t face font-lock-string-face) 1157 1159 (fontified t) 1159 1190 (fontified t) 1190 1191 (fontified t) 1191 1206 (fontified t) 1206 1209 (fontified t) 1209 1215 (fontified t) 1215 1216 (fontified t) 1216 1217 (fontified t face font-lock-string-face) 1217 1220 (fontified t face font-lock-string-face) 1220 1221 (fontified t face font-lock-string-face) 1221 1222 (fontified t) 1222 1229 (fontified t) 1229 1242 (fontified t) 1242 1246 (fontified t) 1246 1253 (fontified t) 1253 1257 (fontified t) 1257 1262 (fontified t) 1262 1273 (fontified t) 1273 1286 (fontified t) 1286 1295 (fontified t) 1295 1296 (rear-nonsticky t fontified t) 1296 1303 (fontified t) 1303 1307 (fontified t) 1307 1312 (fontified t face font-lock-keyword-face) 1312 1313 (fontified t) 1313 1321 (fontified t face font-lock-variable-name-face) 1321 1324 (fontified t) 1324 1328 (fontified t face font-lock-constant-face) 1328 1363 (fontified t) 1363 1370 (fontified t) 1370 1372 (fontified t) 1372 1373 (rear-nonsticky t fontified t) 1377 1383 (face font-lock-keyword-face) 1406 1407 (rear-nonsticky t) 1457 1462 (face font-lock-keyword-face) 1463 1466 (face font-lock-variable-name-face) 1489 1494 (face font-lock-keyword-face) 1495 1498 (face font-lock-variable-name-face) 1501 1505 (face font-lock-constant-face) 1553 1555 (face font-lock-keyword-face) 1571 1577 (face font-lock-keyword-face) 1592 1597 (face font-lock-keyword-face) 1598 1603 (face font-lock-variable-name-face) 1606 1610 (face font-lock-constant-face) 1637 1643 (face font-lock-keyword-face) 1659 1670 (face font-lock-string-face) 1697 1702 (face font-lock-string-face) 1824 1829 (face font-lock-keyword-face) 1830 1833 (face font-lock-variable-name-face) 1836 1838 (face font-lock-string-face) 1840 1843 (face font-lock-comment-delimiter-face) 1843 1871 (face font-lock-comment-face) 1875 1880 (face font-lock-keyword-face) 1881 1889 (face font-lock-variable-name-face) 1892 1896 (face font-lock-constant-face) 1952 1957 (face font-lock-constant-face) 1966 1968 (face font-lock-keyword-face) 2001 2007 (face font-lock-keyword-face) 2022 2028 (face font-lock-keyword-face) 2038 2050 (face font-lock-string-face) 2070 2074 (face font-lock-constant-face) 2099 2100 (rear-nonsticky t) 2104 2105 (rear-nonsticky t) 2153 2158 (face font-lock-keyword-face) 2159 2162 (face font-lock-variable-name-face) 2185 2190 (face font-lock-keyword-face) 2191 2194 (face font-lock-variable-name-face) 2197 2201 (face font-lock-constant-face) 2249 2251 (face font-lock-keyword-face) 2267 2273 (face font-lock-keyword-face) 2288 2293 (face font-lock-keyword-face) 2294 2299 (face font-lock-variable-name-face) 2302 2306 (face font-lock-constant-face) 2333 2339 (face font-lock-keyword-face) 2349 2350 (face font-lock-string-face) 2350 2359 (face font-lock-string-face) 2359 2360 (face font-lock-string-face) 2371 2372 (rear-nonsticky t) 2393 2394 (rear-nonsticky t) 2397 2398 (rear-nonsticky t) 2439 2444 (face font-lock-keyword-face) 2445 2448 (face font-lock-variable-name-face) 2451 2453 (face font-lock-string-face) 2455 2458 (face font-lock-comment-delimiter-face) 2458 2486 (face font-lock-comment-face) 2490 2495 (face font-lock-keyword-face) 2496 2504 (face font-lock-variable-name-face) 2507 2511 (face font-lock-constant-face) 2585 2590 (face font-lock-constant-face) 2603 2605 (face font-lock-keyword-face) 2638 2644 (face font-lock-keyword-face) 2659 2665 (face font-lock-keyword-face) 2675 2676 (face font-lock-string-face) 2676 2680 (face font-lock-string-face) 2680 2681 (face font-lock-string-face) 2701 2705 (face font-lock-constant-face) 2730 2731 (rear-nonsticky t) 2791 2796 (face font-lock-keyword-face) 2797 2800 (face font-lock-variable-name-face) 2803 2805 (face font-lock-string-face) 2807 2810 (face font-lock-comment-delimiter-face) 2810 2838 (face font-lock-comment-face) 2842 2847 (face font-lock-keyword-face) 2848 2854 (face font-lock-variable-name-face) 2863 2872 (face font-lock-constant-face) 2878 2879 (rear-nonsticky t) 2885 2890 (face font-lock-keyword-face) 2891 2897 (face font-lock-variable-name-face) 2997 3002 (face font-lock-keyword-face) 3003 3011 (face font-lock-variable-name-face) 3014 3018 (face font-lock-constant-face) 3084 3089 (face font-lock-constant-face) 3102 3104 (face font-lock-keyword-face) 3137 3143 (face font-lock-keyword-face) 3158 3164 (face font-lock-keyword-face) 3174 3180 (face font-lock-string-face) 3200 3204 (face font-lock-constant-face) 3229 3230 (rear-nonsticky t) 3238 3239 (rear-nonsticky t) 3278 3283 (face font-lock-keyword-face) 3284 3287 (face font-lock-variable-name-face) 3290 3292 (face font-lock-string-face) 3294 3297 (face font-lock-comment-delimiter-face) 3297 3324 (face font-lock-comment-face) 3324 3325 (rear-nonsticky t face font-lock-comment-face) 3329 3334 (face font-lock-keyword-face) 3335 3336 (face font-lock-variable-name-face) 3339 3343 (face font-lock-constant-face) 3358 3359 (rear-nonsticky t) 3384 3389 (face font-lock-keyword-face) 3390 3396 (face font-lock-variable-name-face) 3399 3403 (face font-lock-constant-face) 3445 3446 (rear-nonsticky t) 3452 3457 (face font-lock-keyword-face) 3458 3466 (face font-lock-variable-name-face) 3489 3495 (face font-lock-keyword-face) 3511 3521 (face font-lock-string-face) 3559 3563 (face font-lock-constant-face)) . 1304) (undo-tree-id1626 . -811) (undo-tree-id1627 . -84) (undo-tree-id1628 . -223) (undo-tree-id1629 . -223) (undo-tree-id1630 . -681) (undo-tree-id1631 . -1549) (undo-tree-id1632 . -681) (undo-tree-id1633 . -731) (undo-tree-id1634 . -893) (undo-tree-id1635 . -914) (undo-tree-id1636 . -955) (undo-tree-id1637 . -955) (undo-tree-id1638 . -993) (undo-tree-id1639 . -1871) (undo-tree-id1640 . -1307) (undo-tree-id1641 . -1364) (undo-tree-id1642 . -1159) (undo-tree-id1643 . -1159) (undo-tree-id1644 . -811) (undo-tree-id1645 . -811) (undo-tree-id1646 . -776) (undo-tree-id1647 . -776) (undo-tree-id1648 . -789) (undo-tree-id1649 . -789) (undo-tree-id1650 . -811) (undo-tree-id1651 . -811) (undo-tree-id1652 . -843) (undo-tree-id1653 . -843) (undo-tree-id1654 . -914) (undo-tree-id1655 . -914) (undo-tree-id1656 . -925) (undo-tree-id1657 . -925) (undo-tree-id1658 . -938) (undo-tree-id1659 . -938) (undo-tree-id1660 . -948) (undo-tree-id1661 . -948) (undo-tree-id1662 . -955) (undo-tree-id1663 . -955) (undo-tree-id1664 . -959) (undo-tree-id1665 . -959) (undo-tree-id1666 . -960) (undo-tree-id1667 . -960) (undo-tree-id1668 . -993) (undo-tree-id1669 . -993) (undo-tree-id1670 . -1021) (undo-tree-id1671 . -1021) (undo-tree-id1672 . -1071) (undo-tree-id1673 . -1071) (undo-tree-id1674 . -1116) (undo-tree-id1675 . -1116) (undo-tree-id1676 . -1137) (undo-tree-id1677 . -1137) (undo-tree-id1678 . -1159) (undo-tree-id1679 . -1159) (undo-tree-id1680 . -1191) (undo-tree-id1681 . -1191) (undo-tree-id1682 . -1262) (undo-tree-id1683 . -1262) (undo-tree-id1684 . -1273) (undo-tree-id1685 . -1273) (undo-tree-id1686 . -1286) (undo-tree-id1687 . -1286) (undo-tree-id1688 . -1296) (undo-tree-id1689 . -1296) (t 23157 23162 789560 500000)) nil (23157 34852 719473 800000) 0 nil]) ((1548 . 1550)) nil (23157 23162 602566 500000) 0 nil]) ((1541 . 1542)) nil (23157 23162 602590 300000) 0 nil]) ((1549 . 1550)) nil (23157 23162 602628 400000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1527) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1)) nil (23157 23162 602835 0) 0 nil]) ((#("    console.log(elem.header['nil?']);" 0 28 (fontified t) 28 34 (fontified t face font-lock-string-face) 34 37 (fontified t)) . 1527) (undo-tree-id1625 . -37)) nil (23157 23162 602859 900000) 0 nil]) ((1556 . 1560)) nil (23157 23162 602870 100000) 0 nil]) ((1555 . 1557)) nil (23157 23162 602944 100000) 0 nil]) ((1554 . 1556) (t 23157 23153 100023 500000)) nil (23157 23162 603018 500000) 0 nil]) ((1555 . 1556)) nil (23157 23152 866636 500000) 0 nil]) ((1543 . 1554)) nil (23157 23152 866679 100000) 0 nil]) ((1531 . 1544)) nil (23157 23152 866689 300000) 0 nil]) ((1526 . 1531) (t 23157 23143 231589 300000)) nil (23157 23152 866699 100000) 0 nil]) ((#(")" 0 1 (fontified t)) . 1547)) nil (23157 23143 14673 400000) 0 nil]) ((#("(" 0 1 (fontified t)) . 1547) (undo-tree-id1619 . 1) (undo-tree-id1620 . -1)) nil (23157 23143 15114 800000) 0 nil]) ((#("$" 0 1 (fontified t)) . -1541) (t 23157 23137 238722 700000)) nil (23157 23143 15182 0) 0 nil]) ((1535 . 1536)) nil (23157 23137 66242 200000) 0 nil]) ((1557 . 1559)) nil (23157 23137 66270 900000) 0 nil]) ((1551 . 1555)) nil (23157 23137 66285 600000) 0 nil]) ((1550 . 1552)) nil (23157 23137 66296 600000) 0 nil]) ((1549 . 1551) (t 23157 23129 441036 100000)) nil (23157 23137 66341 500000) 0 nil]) ((1602 . 1604)) nil (23157 23129 266399 100000) 0 nil]) ((1595 . 1596) (t 23157 23123 269353 0)) nil (23157 23129 266429 0) 0 nil]) ((1547 . 1549)) nil (23157 23123 19326 800000) 0 nil]) ((1540 . 1541) (t 23157 23085 707344 700000)) nil (23157 23123 19356 300000) 0 nil]) ((2123 . 2127)) nil (23157 23085 518300 200000) 0 nil]) ((2467 . 2471) (t 23157 23033 321510 100000)) nil (23157 23085 518333 0) 0 nil]) ((#("
" 0 1 (rear-nonsticky t fontified t)) . 2398) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1)) nil (23157 23033 135001 100000) 0 nil]) ((#("    console.log(elem);" 0 22 (fontified t)) . 2398) (undo-tree-id1618 . -22) (t 23157 23025 721266 0)) nil (23157 23033 135034 700000) 0 nil] [nil ([nil nil ((2125 . 2131) (2126 . 2127)) ((#("
" 0 1 (fontified nil)) . 2126) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . 1) (#("      " 0 6 (fontified t)) . 2125)) (23157 23030 728862 0) 0 nil]) ((2125 . 2126) (t 23157 23025 721266 0)) ((#("1" 0 1 (fontified t)) . 2125) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1)) (23157 23030 729573 700000) 0 nil]) ((#("      
" 0 6 (fontified t face (my-face-u-1)) 6 7 (fontified t)) . 2125) (undo-tree-id1607 . -7) (undo-tree-id1608 . -7) (undo-tree-id1609 . -7)) nil (23157 23030 866630 400000) 0 nil]) ((nil rear-nonsticky nil 2124 . 2125) (nil fontified nil 2124 . 2125) (nil fontified nil 2097 . 2124) (2097 . 2125)) nil (23157 23025 563607 0) 0 nil]) ((2096 . 2103)) nil (23157 23025 563619 400000) 0 nil]) ((2462 . 2463)) nil (23157 23025 563628 900000) 0 nil]) ((#(" " 0 1 (fontified t face (my-face-u-1))) . -2462)) nil (23157 23025 563637 900000) 0 nil]) ((#("+" 0 1 (fontified t)) . -2463)) nil (23157 23025 563647 0) 0 nil]) ((#(" " 0 1 (fontified t face (my-face-u-1))) . -2464)) nil (23157 23025 563656 800000) 0 nil]) ((#("1" 0 1 (fontified t)) . -2465)) nil (23157 23025 563665 100000) 0 nil]) ((2442 . 2449)) nil (23157 23025 563673 800000) 0 nil]) ((2453 . 2459)) nil (23157 23025 563682 500000) 0 nil]) ((2447 . 2448)) nil (23157 23025 563690 800000) 0 nil]) ((2442 . 2452)) nil (23157 23025 563700 200000) 0 nil]) ((2436 . 2442)) nil (23157 23025 563709 700000) 0 nil]) ((#("      ee" 0 8 (fontified t)) . 2436)) nil (23157 23025 563720 200000) 0 nil]) ((#("m" 0 1 (fontified t)) . -2444)) nil (23157 23025 563731 200000) 0 nil]) ((2442 . 2445)) nil (23157 23025 563744 800000) 0 nil]) ((2435 . 2442) (t 23157 22919 917961 700000)) nil (23157 23025 563759 100000) 0 nil]) ((2386 . 2390)) nil (23157 22919 730055 600000) 0 nil]) ((2387 . 2388)) nil (23157 22919 730078 600000) 0 nil]) ((#("'" 0 1 (fontified t face font-lock-string-face)) . -2387)) nil (23157 22919 730089 200000) 0 nil]) ((2385 . 2388)) nil (23157 22919 730098 600000) 0 nil]) ((#(")" 0 1 (fontified t)) . -2385) (undo-tree-id1605 . 1) (undo-tree-id1606 . -1)) nil (23157 22919 730274 200000) 0 nil]) ((#("(" 0 1 (fontified t)) . -2386)) nil (23157 22919 730290 400000) 0 nil]) ((#("'" 0 1 (fontified t face font-lock-string-face)) . -2387)) nil (23157 22919 730300 200000) 0 nil]) ((2374 . 2388)) nil (23157 22919 730310 400000) 0 nil]) ((2369 . 2374) (t 23157 22873 598852 300000)) nil (23157 22919 730322 500000) 0 nil]) ((2586 . 2592)) nil (23157 22873 411025 800000) 0 nil]) ((#("blocks" 0 6 (fontified t)) . 2586) (undo-tree-id1588 . -6)) nil (23157 22873 411134 900000) 0 nil]) ((2586 . 2592)) nil (23157 22873 411157 500000) 0 nil]) ((#("{ min, max, update: false }" 0 20 (fontified t) 20 25 (fontified t face font-lock-constant-face) 25 26 (fontified t) 26 27 (fontified t)) . 2586) (undo-tree-id1589 . -27) (undo-tree-id1590 . -27) (undo-tree-id1591 . 27) (undo-tree-id1592 . -1) (undo-tree-id1593 . 1) (undo-tree-id1594 . -27) (undo-tree-id1595 . -27)) nil (23157 22873 411208 900000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2616) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1)) nil (23157 22873 411240 200000) 0 nil]) ((#("    " 0 4 (fontified t)) . -2529) 2525) nil (23157 22873 411253 500000) 0 nil]) ((nil rear-nonsticky nil 2619 . 2620) (nil fontified nil 2616 . 2620) (nil fontified nil 2615 . 2616) (nil fontified nil 2610 . 2615) (nil fontified nil 2589 . 2610) (nil fontified nil 2554 . 2589) (nil fontified nil 2550 . 2554) (nil fontified nil 2547 . 2550) (nil fontified nil 2539 . 2547) (nil fontified nil 2538 . 2539) (nil fontified nil 2533 . 2538) (nil fontified nil 2529 . 2533) (2529 . 2620)) nil (23157 22873 411279 100000) 0 nil]) ((2524 . 2529)) nil (23157 22873 411292 700000) 0 nil]) ((2557 . 2558)) nil (23157 22873 411302 200000) 0 nil]) ((2543 . 2557)) nil (23157 22873 411312 400000) 0 nil]) ((2536 . 2537)) nil (23157 22873 411321 0) 0 nil]) ((2529 . 2542)) nil (23157 22873 411330 900000) 0 nil]) ((2524 . 2529)) nil (23157 22873 411340 700000) 0 nil]) ((#("]" 0 1 (fontified t)) . -2523) (undo-tree-id1599 . 1) (undo-tree-id1600 . -1)) nil (23157 22873 411361 100000) 0 nil]) ((#("[" 0 1 (fontified t)) . 2389) (undo-tree-id1601 . 1) (undo-tree-id1602 . -1)) nil (23157 22873 411383 0) 0 nil]) ((2386 . 2387)) nil (23157 22873 411396 200000) 0 nil]) ((2374 . 2387)) nil (23157 22873 411406 800000) 0 nil]) ((#("return" 0 6 (fontified t face font-lock-keyword-face)) . 2374)) nil (23157 22873 411416 200000) 0 nil]) ((2516 . 2517)) nil (23157 22873 411427 500000) 0 nil]) ((2381 . 2382)) nil (23157 22873 411437 300000) 0 nil]) ((#("    
" 0 4 (fontified t face (my-face-u-1)) 4 5 (fontified t)) . 2517) (undo-tree-id1603 . -5) (undo-tree-id1604 . -5)) nil (23157 22873 411484 900000) 0 nil]) ((nil rear-nonsticky nil 2516 . 2517) (nil fontified nil 2516 . 2517) (nil fontified nil 2510 . 2516) (nil fontified nil 2509 . 2510) (nil fontified nil 2500 . 2509) (nil fontified nil 2487 . 2500) (nil fontified nil 2476 . 2487) (nil fontified nil 2471 . 2476) (nil fontified nil 2467 . 2471) (nil fontified nil 2460 . 2467) (nil fontified nil 2456 . 2460) (nil fontified nil 2443 . 2456) (nil fontified nil 2436 . 2443) (nil fontified nil 2435 . 2436) (nil fontified nil 2430 . 2435) (nil fontified nil 2429 . 2430) (nil fontified nil 2423 . 2429) (nil fontified nil 2420 . 2423) (nil fontified nil 2405 . 2420) (nil fontified nil 2403 . 2405) (nil fontified nil 2395 . 2403) (nil fontified nil 2394 . 2395) (nil fontified nil 2383 . 2394) (nil fontified nil 2380 . 2383) (nil fontified nil 2374 . 2380) (nil fontified nil 2370 . 2374) (nil fontified nil 2369 . 2370) (nil fontified nil 2348 . 2369) (nil fontified nil 2347 . 2348) (nil fontified nil 2343 . 2347) (nil fontified nil 2342 . 2343) (nil fontified nil 2340 . 2342) (nil fontified nil 2335 . 2340) (nil fontified nil 2334 . 2335) (nil fontified nil 2329 . 2334) (nil fontified nil 2325 . 2329) (nil fontified nil 2322 . 2325) (nil fontified nil 2316 . 2322) (nil fontified nil 2295 . 2316) (nil fontified nil 2291 . 2295) (nil fontified nil 2288 . 2291) (nil fontified nil 2285 . 2288) (nil fontified nil 2284 . 2285) (nil fontified nil 2279 . 2284) (nil fontified nil 2275 . 2279) (nil fontified nil 2262 . 2275) (nil fontified nil 2260 . 2262) (nil fontified nil 2257 . 2260) (nil fontified nil 2256 . 2257) (nil fontified nil 2251 . 2256) (nil fontified nil 2247 . 2251) (2247 . 2517)) nil (23157 22873 411555 900000) 0 nil]) ((2247 . 2251)) nil (23157 22873 411584 600000) 0 nil]) ((#("    return [];" 0 4 (fontified t) 4 10 (fontified t face font-lock-keyword-face) 10 14 (fontified t)) . 2247) (t 23157 22725 918513 700000)) nil (23157 22873 411596 300000) 0 nil]) ((#("     " 0 5 (fontified t)) . -2164) 2163) nil (23157 22725 718891 400000) 0 nil]) ((#("
" 0 1 (fontified t)) . -2163) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1)) nil (23157 22725 719006 600000) 0 nil]) ((#("       " 0 7 (fontified t)) . -2160) 2159) nil (23157 22725 719030 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -2159) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1)) nil (23157 22725 719056 800000) 0 nil]) ((#("       " 0 7 (fontified t)) . -2153) 2152) nil (23157 22725 719070 800000) 0 nil]) ((#("
" 0 1 (fontified t)) . -2152) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1)) nil (23157 22725 719093 400000) 0 nil]) ((#("        " 0 8 (fontified t)) . -2148)) nil (23157 22725 719105 500000) 0 nil]) ((2147 . 2148)) nil (23157 22725 719116 100000) 0 nil]) ((#("
" 0 1 (fontified t)) . -2147) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1)) nil (23157 22725 719141 0) 0 nil]) ((#("       " 0 7 (fontified t)) . -2129) 2128) nil (23157 22725 719154 600000) 0 nil]) ((#("
" 0 1 (fontified t)) . -2128) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1)) nil (23157 22725 719176 500000) 0 nil]) ((#("       " 0 7 (fontified t)) . -2116) 2115) nil (23157 22725 719190 100000) 0 nil]) ((#("
" 0 1 (fontified t)) . -2115) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (t 23157 22696 880356 800000)) nil (23157 22725 719211 600000) 0 nil]) ((2005 . 2006)) nil (23157 22696 708755 800000) 0 nil]) ((2001 . 2002) (t 23157 22692 301362 0)) nil (23157 22696 708785 200000) 0 nil]) ((1598 . 1606)) nil (23157 22692 87111 900000) 0 nil]) ((#("," 0 1 (fontified t)) . -1591)) nil (23157 22692 87158 700000) 0 nil]) ((1591 . 1592)) nil (23157 22692 87190 100000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1959) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1)) nil (23157 22692 87374 700000) 0 nil]) ((#("    console.log(lineno);" 0 24 (fontified t)) . 1959) (undo-tree-id1574 . -24) (t 23157 22685 19519 0)) nil (23157 22692 87400 700000) 0 nil]) ((1963 . 1983)) nil (23157 22684 790380 600000) 0 nil]) ((1958 . 1963)) nil (23157 22684 790438 0) 0 nil] [nil ([nil nil ((1997 . 1998)) ((#("]" 0 1 (fontified t)) . 1997) (t 23157 22677 582336 800000)) (23157 22677 387114 200000) 0 nil]) ((1993 . 1994) (t 23157 22666 215071 600000)) ((#("[" 0 1 (fontified t)) . 1993)) (23157 22681 111372 300000) 0 nil]) ((1993 . 1996)) nil (23157 22681 379020 200000) 0 nil]) ((#(".title" 0 6 (fontified t)) . 1993) (undo-tree-id1550 . -6)) nil (23157 22666 52458 700000) 0 nil]) ((#("elem" 0 4 (fontified t)) . 1993) (undo-tree-id1551 . -4)) nil (23157 22666 52484 400000) 0 nil]) ((1955 . 1958)) nil (23157 22666 52498 0) 0 nil]) ((1935 . 1955)) nil (23157 22666 52507 800000) 0 nil]) ((1930 . 1935)) nil (23157 22666 52517 600000) 0 nil]) ((#("  " 0 2 (fontified t)) . -2213) 2213) nil (23157 22666 52529 300000) 0 nil]) ((#("  " 0 2 (fontified t)) . -2200) 2200) nil (23157 22666 52541 800000) 0 nil]) ((#("  " 0 2 (fontified t)) . -2189) 2183) nil (23157 22666 52552 700000) 0 nil]) ((#("      
" 0 6 (fontified t face (my-face-u-1)) 6 7 (fontified t)) . 2223) (undo-tree-id1552 . -7) (undo-tree-id1553 . -7) (undo-tree-id1554 . -7)) nil (23157 22666 52592 300000) 0 nil]) ((nil rear-nonsticky nil 2222 . 2223) (nil fontified nil 2222 . 2223) (nil fontified nil 2211 . 2222) (nil fontified nil 2196 . 2211) (nil fontified nil 2183 . 2196) (2183 . 2223)) nil (23157 22666 52611 900000) 0 nil]) ((2182 . 2189)) nil (23157 22666 52623 300000) 0 nil]) ((2181 . 2182)) nil (23157 22666 52633 500000) 0 nil]) ((#("," 0 1 (fontified t)) . -2172)) nil (23157 22666 52642 500000) 0 nil]) ((2169 . 2173)) nil (23157 22666 52652 0) 0 nil]) ((2160 . 2169)) nil (23157 22666 52662 200000) 0 nil]) ((2154 . 2160)) nil (23157 22666 52672 700000) 0 nil]) ((2145 . 2154)) nil (23157 22666 52682 200000) 0 nil]) ((2141 . 2145)) nil (23157 22666 52690 900000) 0 nil]) ((2132 . 2141)) nil (23157 22666 52699 200000) 0 nil]) ((2029 . 2030)) nil (23157 22666 52707 500000) 0 nil]) ((2025 . 2028)) nil (23157 22666 52716 900000) 0 nil]) ((2024 . 2026)) nil (23157 22666 52726 700000) 0 nil]) ((#("loca" 0 4 (fontified t)) . -2009) (2013 . 2028) 2013) nil (23157 22666 52738 400000) 0 nil]) ((2009 . 2013)) nil (23157 22666 52749 0) 0 nil]) ((#("f" 0 1 (fontified t)) . -2009)) nil (23157 22666 52757 300000) 0 nil]) ((2004 . 2010)) nil (23157 22666 52766 800000) 0 nil]) ((#("    if (!loc) {
      return [];
    }
" 0 4 (fontified t) 4 6 (fontified t face font-lock-keyword-face) 6 13 (fontified t) 13 16 (fontified t) 16 22 (fontified t) 22 28 (fontified t face font-lock-keyword-face) 28 32 (fontified t) 32 33 (fontified t) 33 38 (fontified t) 38 39 (fontified t)) . 1986) (undo-tree-id1555 . -16) (undo-tree-id1556 . -16) (undo-tree-id1557 . -33) (undo-tree-id1558 . -33) (undo-tree-id1559 . -39) (undo-tree-id1560 . -39) (undo-tree-id1561 . -39) 2025) nil (23157 22666 52814 700000) 0 nil]) ((2008 . 2018)) nil (23157 22666 52829 400000) 0 nil]) ((2001 . 2008)) nil (23157 22666 52838 500000) 0 nil]) ((2001 . 2006)) nil (23157 22666 52847 200000) 0 nil]) ((1999 . 2002)) nil (23157 22666 52856 200000) 0 nil]) ((1994 . 1998)) nil (23157 22666 52865 700000) 0 nil]) ((1990 . 1995)) nil (23157 22666 52874 400000) 0 nil]) ((1985 . 1990)) nil (23157 22666 52883 100000) 0 nil]) ((1990 . 2004)) nil (23157 22666 52892 500000) 0 nil]) ((1985 . 1990)) nil (23157 22666 52902 700000) 0 nil]) ((#(")" 0 1 (fontified t)) . 1975)) nil (23157 22666 52911 400000) 0 nil]) ((#("(" 0 1 (fontified t)) . 1975) (undo-tree-id1562 . 1) (undo-tree-id1563 . -1)) nil (23157 22666 52935 500000) 0 nil]) ((#("$" 0 1 (fontified t)) . -1970)) nil (23157 22666 52946 100000) 0 nil]) ((1976 . 1978)) nil (23157 22666 52956 700000) 0 nil]) ((1970 . 1971)) nil (23157 22666 52966 100000) 0 nil]) ((1977 . 1983)) nil (23157 22666 52975 200000) 0 nil]) ((#("{" 0 1 (fontified t)) . -1977)) nil (23157 22666 52984 200000) 0 nil]) ((#(" " 0 1 (fontified t)) . -1978)) nil (23157 22666 52994 100000) 0 nil]) ((#("m" 0 1 (fontified t)) . -1979)) nil (23157 22666 53003 500000) 0 nil]) ((#("i" 0 1 (fontified t)) . -1980)) nil (23157 22666 53013 300000) 0 nil]) ((#("n" 0 1 (fontified t)) . -1981)) nil (23157 22666 53022 800000) 0 nil]) ((#("," 0 1 (fontified t)) . -1982)) nil (23157 22666 53031 800000) 0 nil]) ((#(" " 0 1 (fontified t)) . -1983)) nil (23157 22666 53041 300000) 0 nil]) ((#("m" 0 1 (fontified t)) . -1984)) nil (23157 22666 53051 100000) 0 nil]) ((#("a" 0 1 (fontified t)) . -1985)) nil (23157 22666 53060 500000) 0 nil]) ((#("x" 0 1 (fontified t)) . -1986)) nil (23157 22666 53070 0) 0 nil]) ((#(" " 0 1 (fontified t)) . -1987) (undo-tree-id1564 . -1)) nil (23157 22666 53088 800000) 0 nil]) ((#("}" 0 1 (fontified t)) . -1988) (undo-tree-id1565 . 1) (undo-tree-id1566 . -1)) nil (23157 22666 53110 400000) 0 nil]) ((1969 . 1975)) nil (23157 22666 53121 700000) 0 nil]) ((#(")" 0 1 (fontified t)) . 1969)) nil (23157 22666 53142 900000) 0 nil]) ((#("(" 0 1 (fontified t)) . 1969) (undo-tree-id1567 . 1) (undo-tree-id1568 . -1)) nil (23157 22666 53165 500000) 0 nil]) ((#(".$lines" 0 7 (fontified t)) . 1969)) nil (23157 22666 53176 900000) 0 nil]) ((nil rear-nonsticky nil 1994 . 1995) (nil fontified nil 1951 . 1995) (nil fontified nil 1947 . 1951) (nil fontified nil 1944 . 1947) (nil fontified nil 1941 . 1944) (nil fontified nil 1940 . 1941) (nil fontified nil 1935 . 1940) (nil fontified nil 1931 . 1935) (1931 . 1995) (t 23157 22573 132516 500000)) nil (23157 22666 53198 800000) 0 nil]) ((2014 . 2032)) nil (23157 22572 935719 300000) 0 nil]) ((2005 . 2014)) nil (23157 22572 935756 300000) 0 nil]) ((#("    console.log(elem);
" 0 22 (fontified t) 22 23 (fontified t)) . 1931) (undo-tree-id1545 . -23) (undo-tree-id1546 . -23) (undo-tree-id1547 . -23) (undo-tree-id1548 . -23) (undo-tree-id1549 . -23) (t 23157 22520 34955 200000)) nil (23157 22572 935869 900000) 0 nil]) ((1613 . 1614)) nil (23157 22519 879188 600000) 0 nil]) ((1599 . 1612)) nil (23157 22519 879218 400000) 0 nil]) ((1587 . 1598)) nil (23157 22519 879232 400000) 0 nil]) ((#("t" 0 1 (fontified t)) . -1587)) nil (23157 22519 879242 600000) 0 nil]) ((#("l" 0 1 (fontified t)) . -1588)) nil (23157 22519 879253 900000) 0 nil]) ((1587 . 1589)) nil (23157 22519 879264 100000) 0 nil]) ((1580 . 1588)) nil (23157 22519 879274 700000) 0 nil]) ((#("P" 0 1 (fontified t)) . -1580) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1)) nil (23157 22519 879360 0) 0 nil]) ((#("a" 0 1 (fontified t)) . -1581) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1)) nil (23157 22519 879436 300000) 0 nil]) ((#("r" 0 1 (fontified t)) . -1582) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1)) nil (23157 22519 879498 200000) 0 nil]) ((#("a" 0 1 (fontified t)) . -1583) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1)) nil (23157 22519 879565 800000) 0 nil]) ((#("g" 0 1 (fontified t)) . -1584) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1)) nil (23157 22519 879604 700000) 0 nil]) ((#("r" 0 1 (fontified t)) . -1585) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1)) nil (23157 22519 879657 900000) 0 nil]) ((#("a" 0 1 (fontified t)) . -1586) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1)) nil (23157 22519 879707 400000) 0 nil]) ((#("p" 0 1 (fontified t)) . -1587) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1)) nil (23157 22519 879758 700000) 0 nil]) ((#("h" 0 1 (fontified t)) . -1588) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1)) nil (23157 22519 879818 800000) 0 nil]) ((nil fontified t 1578 . 1589) (#("convertList" 0 11 (fontified t)) . -1573) (1584 . 1600) 1584) nil (23157 22519 879837 700000) 0 nil]) ((nil fontified t 1573 . 1584) (#("convertListItem" 0 15 (fontified t)) . -1573) (1588 . 1599) 1588) nil (23157 22519 879852 400000) 0 nil]) ((nil fontified t 1573 . 1588) (#("convertDefinitionList" 0 21 (fontified t)) . -1573) (1594 . 1609) 1594) nil (23157 22519 879866 0) 0 nil]) ((nil fontified t 1582 . 1594) (#("convertQuote" 0 12 (fontified t)) . -1573) (1585 . 1606) 1585) nil (23157 22519 879880 300000) 0 nil]) ((nil fontified t 1573 . 1585) (#("convertListing" 0 14 (fontified t)) . -1573) (1587 . 1599) 1587) nil (23157 22519 879895 100000) 0 nil]) ((nil fontified t 1573 . 1587) (#("convertSection" 0 14 (fontified t)) . -1573) (1587 . 1601) 1587) nil (23157 22519 879919 700000) 0 nil]) ((nil fontified t 1573 . 1587) (#("convertDocument" 0 15 (fontified t)) . -1573) (1588 . 1602) 1588) nil (23157 22519 879935 100000) 0 nil]) ((nil fontified t 1573 . 1588) (#("convertElementList" 0 18 (fontified t)) . -1573) (1591 . 1606) 1591) nil (23157 22519 879950 600000) 0 nil]) ((#("conve" 0 5 (fontified t)) . -1573) (1578 . 1596) 1578) nil (23157 22519 879964 200000) 0 nil]) ((1568 . 1578)) nil (23157 22519 879975 200000) 0 nil]) ((1567 . 1569)) nil (23157 22519 879985 400000) 0 nil]) ((#("[" 0 1 (fontified t)) . -1567)) nil (23157 22519 879994 0) 0 nil]) ((#("]" 0 1 (fontified t)) . -1568) (undo-tree-id1537 . 1) (undo-tree-id1538 . -1)) nil (23157 22519 880018 600000) 0 nil]) ((1564 . 1569)) nil (23157 22519 880030 700000) 0 nil]) ((#("child" 0 5 (fontified t)) . -1556) (1561 . 1569) 1561) nil (23157 22519 880044 600000) 0 nil]) ((1556 . 1561)) nil (23157 22519 880055 600000) 0 nil]) ((1550 . 1556)) nil (23157 22519 880065 400000) 0 nil]) ((#("      children." 0 15 (fontified t)) . 1550) (undo-tree-id1539 . -15)) nil (23157 22519 880080 900000) 0 nil]) ((1463 . 1466)) nil (23157 22519 880092 600000) 0 nil]) ((#("const" 0 5 (fontified t face font-lock-keyword-face)) . 1463) (undo-tree-id1540 . -5)) nil (23157 22519 880109 200000) 0 nil]) ((1558 . 1567)) nil (23157 22519 880120 900000) 0 nil]) ((1551 . 1558)) nil (23157 22519 880130 0) 0 nil]) ((1551 . 1556)) nil (23157 22519 880139 0) 0 nil]) ((1549 . 1552)) nil (23157 22519 880148 500000) 0 nil]) ((1864 . 1882)) nil (23157 22519 880159 100000) 0 nil]) ((1859 . 1864)) nil (23157 22519 880165 500000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1935) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1)) nil (23157 22519 880179 800000) 0 nil]) ((#("        value" 0 13 (fontified t)) . 1935)) nil (23157 22519 880188 500000) 0 nil]) ((1943 . 1948)) nil (23157 22519 880196 400000) 0 nil]) ((1934 . 1943)) nil (23157 22519 880202 900000) 0 nil]) ((1933 . 1934)) nil (23157 22519 880209 700000) 0 nil]) ((1929 . 1932)) nil (23157 22519 880216 800000) 0 nil]) ((1922 . 1930)) nil (23157 22519 880224 0) 0 nil]) ((1913 . 1922)) nil (23157 22519 880232 300000) 0 nil]) ((1913 . 1920)) nil (23157 22519 880239 900000) 0 nil]) ((1912 . 1914)) nil (23157 22519 880247 800000) 0 nil]) ((#("Str" 0 3 (fontified t)) . 1912)) nil (23157 22519 880254 200000) 0 nil]) ((1912 . 1915)) nil (23157 22519 880262 500000) 0 nil]) ((1901 . 1913)) nil (23157 22519 880269 300000) 0 nil]) ((1895 . 1901)) nil (23157 22519 880275 700000) 0 nil]) ((#("      cji" 0 9 (fontified t)) . 1895)) nil (23157 22519 880282 500000) 0 nil]) ((1901 . 1904)) nil (23157 22519 880289 700000) 0 nil]) ((1894 . 1901)) nil (23157 22519 880296 900000) 0 nil]) ((1893 . 1894)) nil (23157 22519 880303 300000) 0 nil]) ((1886 . 1892)) nil (23157 22519 880310 500000) 0 nil]) ((1881 . 1887)) nil (23157 22519 880318 0) 0 nil]) ((#("o" 0 1 (fontified t)) . -1881)) nil (23157 22519 880324 100000) 0 nil]) ((#("e" 0 1 (fontified t)) . -1882)) nil (23157 22519 880331 600000) 0 nil]) ((#(":" 0 1 (fontified t)) . -1883)) nil (23157 22519 880339 200000) 0 nil]) ((#(" " 0 1 (fontified t face (my-face-u-1))) . -1884)) nil (23157 22519 880346 700000) 0 nil]) ((1879 . 1885)) nil (23157 22519 880353 500000) 0 nil]) ((1872 . 1879)) nil (23157 22519 880359 600000) 0 nil]) ((1878 . 1879)) nil (23157 22519 880366 300000) 0 nil]) ((1872 . 1877)) nil (23157 22519 880372 400000) 0 nil]) ((1871 . 1873)) nil (23157 22519 880379 600000) 0 nil]) ((1864 . 1871)) nil (23157 22519 880386 400000) 0 nil]) ((1859 . 1864)) nil (23157 22519 880396 200000) 0 nil]) ((1537 . 1548)) nil (23157 22519 880405 600000) 0 nil]) ((#("'" 0 1 (fontified t face font-lock-string-face)) . -1537)) nil (23157 22519 880415 100000) 0 nil]) ((1533 . 1539)) nil (23157 22519 880435 400000) 0 nil]) ((1528 . 1533)) nil (23157 22519 880443 700000) 0 nil]) ((1838 . 1841)) nil (23157 22519 880450 500000) 0 nil]) ((1836 . 1839)) nil (23157 22519 880457 0) 0 nil]) ((1823 . 1835)) nil (23157 22519 880464 500000) 0 nil]) ((1809 . 1824)) nil (23157 22519 880472 100000) 0 nil]) ((1807 . 1809) (#("  " 0 2 (fontified nil)) . 1806) (1806 . 1808) (1806 . 1807) (#("  " 0 2 (fontified t face (my-face-u-1))) . 1806) 1808) nil (23157 22519 880483 0) 0 nil]) ((1805 . 1808)) nil (23157 22519 880493 200000) 0 nil]) ((#("    
" 0 4 (fontified t face (my-face-u-1)) 4 5 (fontified t)) . 1840) (undo-tree-id1543 . -5) (undo-tree-id1544 . -5)) nil (23157 22519 880509 100000) 0 nil]) ((1840 . 1844)) nil (23157 22519 880517 800000) 0 nil]) ((#("    console.log(elem.context);" 0 30 (fontified t)) . 1840) (t 23157 22408 378775 500000)) nil (23157 22519 880525 700000) 0 nil]) ((1864 . 1870)) nil (23157 22408 157521 100000) 0 nil]) ((1844 . 1864)) nil (23157 22408 157552 800000) 0 nil]) ((1839 . 1844) (t 23157 22392 200994 400000)) nil (23157 22408 157571 0) 0 nil]) ((1844 . 1854)) nil (23157 22391 987528 600000) 0 nil]) ((1839 . 1844)) nil (23157 22391 987556 900000) 0 nil]) ((1839 . 1842)) nil (23157 22391 987596 500000) 0 nil]) ((1837 . 1840)) nil (23157 22391 987608 300000) 0 nil]) ((1824 . 1836)) nil (23157 22391 987619 200000) 0 nil]) ((1809 . 1825)) nil (23157 22391 987629 400000) 0 nil]) ((1807 . 1809) (#("  " 0 2 (fontified nil)) . 1806) (1806 . 1808) (1806 . 1807) (#("  " 0 2 (fontified t face (my-face-u-1))) . 1806) 1808) nil (23157 22391 987647 100000) 0 nil]) ((1805 . 1808) (t 23157 22381 154617 800000)) nil (23157 22391 987664 900000) 0 nil]) ((1363 . 1364)) nil (23157 22380 996192 300000) 0 nil]) ((1350 . 1362)) nil (23157 22380 996220 600000) 0 nil]) ((1342 . 1351)) nil (23157 22380 996233 800000) 0 nil]) ((#("L" 0 1 (fontified t)) . -1342) (undo-tree-id1449 . -1)) nil (23157 22380 996336 200000) 0 nil]) ((#("i" 0 1 (fontified t)) . -1343) (undo-tree-id1450 . -1)) nil (23157 22380 996363 700000) 0 nil]) ((#("s" 0 1 (fontified t)) . -1344) (undo-tree-id1451 . -1)) nil (23157 22380 996380 700000) 0 nil]) ((#("t" 0 1 (fontified t)) . -1345) (undo-tree-id1452 . -1)) nil (23157 22380 996397 700000) 0 nil]) ((#("i" 0 1 (fontified t)) . -1346) (undo-tree-id1453 . -1)) nil (23157 22380 996413 900000) 0 nil]) ((#("n" 0 1 (fontified t)) . -1347) (undo-tree-id1454 . -1)) nil (23157 22380 996430 900000) 0 nil]) ((#("g" 0 1 (fontified t)) . -1348) (undo-tree-id1455 . -1)) nil (23157 22380 996447 900000) 0 nil]) ((#("conve" 0 5 (fontified t)) . -1335) (1340 . 1354) 1340) nil (23157 22380 996492 900000) 0 nil]) ((1323 . 1340)) nil (23157 22380 996506 500000) 0 nil]) ((1316 . 1323)) nil (23157 22380 996516 400000) 0 nil]) ((1316 . 1321)) nil (23157 22380 996525 400000) 0 nil]) ((1314 . 1317)) nil (23157 22380 996535 200000) 0 nil]) ((1305 . 1312)) nil (23157 22380 996545 400000) 0 nil]) ((1288 . 1306)) nil (23157 22380 996555 200000) 0 nil]) ((1278 . 1289) (t 23157 22115 74151 500000)) nil (23157 22380 996566 600000) 0 nil]) ((#("]" 0 1 (fontified t)) . -4185) (undo-tree-id1443 . 1) (undo-tree-id1444 . -1)) nil (23157 22114 887689 200000) 0 nil]) ((#("[" 0 1 (fontified t)) . -4055)) nil (23157 22114 887757 200000) 0 nil]) ((#("
" 0 1 (fontified t)) . 3751) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1)) nil (23157 22114 887804 0) 0 nil]) ((#("    console.log([p, ...blocks]);" 0 32 (fontified t)) . 3751) (undo-tree-id1448 . -32) (t 23157 22103 821274 100000)) nil (23157 22114 887867 500000) 0 nil]) ((3768 . 3780)) nil (23157 22103 637770 600000) 0 nil]) ((3767 . 3769)) nil (23157 22103 637801 200000) 0 nil]) ((#("blocks" 0 6 (fontified t)) . 3767) (undo-tree-id1442 . -6) (t 23157 22095 422691 0)) nil (23157 22103 637949 200000) 0 nil]) ((3767 . 3773)) nil (23157 22095 236086 0) 0 nil]) ((#("p" 0 1 (fontified t)) . 3767) (undo-tree-id1441 . -1) (t 23157 22086 604082 600000)) nil (23157 22095 236168 700000) 0 nil] [nil nil ((#("    console.log(p);
" 0 19 (fontified t) 19 20 (fontified t)) . 3751) (undo-tree-id1437 . -20) (undo-tree-id1438 . -20) (undo-tree-id1439 . -20) (undo-tree-id1440 . -20) 3771 (t 23157 22086 604082 600000)) ((3751 . 3771)) (23157 22092 918118 800000) 0 nil]) ((3769 . 3770)) nil (23157 22092 926588 500000) 0 nil]) ((3767 . 3768)) nil (23157 22086 446389 600000) 0 nil]) ((3755 . 3768)) nil (23157 22086 446403 900000) 0 nil]) ((3750 . 3755) (t 23157 21974 355166 100000)) nil (23157 22086 446417 100000) 0 nil]) ((554 . 555)) nil (23157 21974 172827 400000) 0 nil]) ((#("9" 0 1 (fontified t)) . 554) (undo-tree-id1433 . -1)) nil (23157 21974 172935 400000) 0 nil]) ((556 . 557)) nil (23157 21974 172956 600000) 0 nil]) ((554 . 555)) nil (23157 21974 172967 500000) 0 nil]) ((553 . 555)) nil (23157 21974 172977 700000) 0 nil]) ((#("ele" 0 3 (fontified t)) . -545) (548 . 556) 548) nil (23157 21974 172991 300000) 0 nil]) ((545 . 548)) nil (23157 21974 173002 600000) 0 nil]) ((#("l" 0 1 (fontified t)) . -545)) nil (23157 21974 173023 800000) 0 nil]) ((#("e" 0 1 (fontified t)) . -546)) nil (23157 21974 173033 600000) 0 nil]) ((538 . 547)) nil (23157 21974 173043 400000) 0 nil]) ((533 . 538)) nil (23157 21974 173052 500000) 0 nil]) ((515 . 527)) nil (23157 21974 173061 500000) 0 nil]) ((508 . 515)) nil (23157 21974 173070 600000) 0 nil]) ((#("r" 0 1 (fontified t)) . -513)) nil (23157 21974 173080 400000) 0 nil]) ((#("e" 0 1 (fontified t)) . -514)) nil (23157 21974 173157 100000) 0 nil]) ((513 . 515)) nil (23157 21974 173168 0) 0 nil]) ((508 . 513)) nil (23157 21974 173176 700000) 0 nil]) ((506 . 509)) nil (23157 21974 173186 100000) 0 nil]) ((492 . 505)) nil (23157 21974 173194 800000) 0 nil]) ((#("d" 0 1 (fontified t)) . -492)) nil (23157 21974 173203 500000) 0 nil]) ((484 . 493)) nil (23157 21974 173213 300000) 0 nil]) ((480 . 485)) nil (23157 21974 173421 400000) 0 nil]) ((475 . 480)) nil (23157 21974 173428 900000) 0 nil]) ((#("[" 0 1 (fontified t)) . -474)) nil (23157 21974 173436 100000) 0 nil]) ((#("0" 0 1 (fontified t)) . -475)) nil (23157 21974 173443 700000) 0 nil]) ((#("]" 0 1 (fontified t)) . -476) (undo-tree-id1434 . 1) (undo-tree-id1435 . -1)) nil (23157 21974 173475 700000) 0 nil]) ((361 . 377)) nil (23157 21974 173485 200000) 0 nil]) ((#("return" 0 6 (fontified t face font-lock-keyword-face)) . 361) (undo-tree-id1436 . -6) (t 23157 21950 811353 700000)) nil (23157 21974 173496 900000) 0 nil]) ((465 . 466)) nil (23157 21950 623264 500000) 0 nil]) ((464 . 466)) nil (23157 21950 623287 500000) 0 nil]) ((#("[" 0 1 (fontified t)) . -5732)) nil (23157 21950 623296 600000) 0 nil]) ((#("0" 0 1 (fontified t)) . -5733)) nil (23157 21950 623305 600000) 0 nil]) ((#("]" 0 1 (fontified t)) . -5734) (undo-tree-id1431 . 1) (undo-tree-id1432 . -1) (t 23157 21943 690730 400000)) nil (23157 21950 623502 0) 0 nil]) ((5733 . 5734)) nil (23157 21943 502989 600000) 0 nil]) ((5732 . 5734) (t 23157 21924 458574 700000)) nil (23157 21943 503014 600000) 0 nil]) ((4918 . 4919)) nil (23157 21924 259792 500000) 0 nil]) ((#("      const child = ;
" 0 6 (fontified t) 6 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t) 12 17 (fontified t face font-lock-variable-name-face) 17 20 (fontified t) 20 22 (fontified t)) . 4846) (undo-tree-id1409 . -22) (undo-tree-id1410 . -22) (undo-tree-id1411 . -22) (undo-tree-id1412 . 1) (undo-tree-id1413 . -20) (undo-tree-id1414 . -22) (undo-tree-id1415 . -22)) nil (23157 21924 259932 300000) 0 nil]) ((nil rear-nonsticky nil 4938 . 4939) (nil fontified nil 4905 . 4939) (nil fontified nil 4901 . 4905) (4901 . 4939)) nil (23157 21924 259952 300000) 0 nil]) ((#("this.convertElement(elements[i], next)" 0 4 (fontified t face font-lock-constant-face) 4 38 (fontified t)) . 4866) (undo-tree-id1416 . -38) (undo-tree-id1417 . 1) (undo-tree-id1418 . -38) (undo-tree-id1419 . 19) (undo-tree-id1420 . -20) (undo-tree-id1421 . -38) 4904) nil (23157 21924 259987 0) 0 nil]) ((4932 . 4940)) nil (23157 21924 260002 900000) 0 nil]) ((4912 . 4932)) nil (23157 21924 260014 600000) 0 nil]) ((#("l" 0 1 (fontified t)) . -4912)) nil (23157 21924 260024 400000) 0 nil]) ((4912 . 4913)) nil (23157 21924 260036 100000) 0 nil]) ((4905 . 4912)) nil (23157 21924 260050 800000) 0 nil]) ((4573 . 4576)) nil (23157 21924 260062 100000) 0 nil]) ((#("const" 0 5 (fontified t face font-lock-keyword-face)) . 4573) (undo-tree-id1422 . -5)) nil (23157 21924 260078 400000) 0 nil]) ((#("      if (child) {
        children.push(child);
      }
" 0 6 (fontified t) 6 8 (fontified t face font-lock-keyword-face) 8 19 (fontified t) 19 57 (fontified t)) . 4908) (undo-tree-id1423 . -57) (undo-tree-id1424 . -57) (undo-tree-id1425 . -49) (undo-tree-id1426 . -49) (undo-tree-id1427 . -19) (undo-tree-id1428 . -19) (undo-tree-id1429 . -57) (undo-tree-id1430 . -57) 4965) nil (23157 21924 260128 600000) 0 nil]) ((4094 . 4095)) nil (23157 21924 260145 600000) 0 nil]) ((3963 . 3964)) nil (23157 21924 260156 500000) 0 nil]) ((3806 . 3807)) nil (23157 21924 260166 700000) 0 nil]) ((3707 . 3708)) nil (23157 21924 260189 0) 0 nil]) ((3443 . 3444)) nil (23157 21924 260200 700000) 0 nil]) ((3376 . 3377)) nil (23157 21924 260209 400000) 0 nil]) ((3355 . 3357)) nil (23157 21924 260218 500000) 0 nil]) ((#("null" 0 4 (fontified t face font-lock-constant-face)) . 3355)) nil (23157 21924 260227 200000) 0 nil]) ((2944 . 2945)) nil (23157 21924 260236 600000) 0 nil]) ((2877 . 2878)) nil (23157 21924 260244 500000) 0 nil]) ((2856 . 2858)) nil (23157 21924 260253 600000) 0 nil]) ((#("null" 0 4 (fontified t face font-lock-constant-face)) . 2856)) nil (23157 21924 260261 500000) 0 nil]) ((2602 . 2603)) nil (23157 21924 260277 0) 0 nil]) ((2551 . 2552)) nil (23157 21924 260286 400000) 0 nil]) ((2485 . 2487)) nil (23157 21924 260295 900000) 0 nil]) ((#("null" 0 4 (fontified t face font-lock-constant-face)) . 2485)) nil (23157 21924 260306 800000) 0 nil]) ((2313 . 2314)) nil (23157 21924 260317 0) 0 nil]) ((2240 . 2241)) nil (23157 21924 260327 600000) 0 nil]) ((2219 . 2221)) nil (23157 21924 260337 400000) 0 nil]) ((#("null" 0 4 (fontified t face font-lock-constant-face)) . 2219)) nil (23157 21924 260347 200000) 0 nil]) ((1986 . 1987)) nil (23157 21924 260357 400000) 0 nil]) ((1855 . 1856)) nil (23157 21924 260375 900000) 0 nil]) ((1789 . 1791)) nil (23157 21924 260383 100000) 0 nil]) ((#("null" 0 4 (fontified t face font-lock-constant-face)) . 1789) (t 23157 21828 361896 200000)) nil (23157 21924 260391 0) 0 nil]) ((1391 . 1393)) nil (23157 21828 137248 900000) 0 nil]) ((#("null" 0 4 (fontified t face font-lock-constant-face)) . 1391) (undo-tree-id1408 . -4)) nil (23157 21828 137347 0) 0 nil]) ((1617 . 1618)) nil (23157 21828 137364 400000) 0 nil]) ((1569 . 1570) (t 23157 21475 448889 600000)) nil (23157 21828 137375 700000) 0 nil]) ((3501 . 3503)) nil (23157 21475 282446 300000) 0 nil]) ((#("null" 0 4 (fontified t face font-lock-constant-face)) . 3501) (undo-tree-id1404 . -4)) nil (23157 21475 282519 900000) 0 nil]) ((3014 . 3016)) nil (23157 21475 282541 800000) 0 nil]) ((#("null" 0 4 (fontified t face font-lock-constant-face)) . 3014) (undo-tree-id1405 . -4)) nil (23157 21475 282643 800000) 0 nil]) ((2662 . 2664)) nil (23157 21475 282660 0) 0 nil]) ((#("null" 0 4 (fontified t face font-lock-constant-face)) . 2662) (undo-tree-id1406 . -4)) nil (23157 21475 282680 400000) 0 nil]) ((2047 . 2049)) nil (23157 21475 282694 0) 0 nil]) ((#("null" 0 4 (fontified t face font-lock-constant-face)) . 2047) (undo-tree-id1407 . -4) (t 23156 11858 129443 0)) nil (23157 21475 282714 400000) 0 nil]) ((2586 . 2587) (t 23156 11854 313012 100000)) nil (23156 11857 910788 300000) 0 nil]) ((#("   " 0 3 (fontified t)) . -2603) 2602) nil (23156 11854 125387 600000) 0 nil]) ((#("
" 0 1 (fontified t)) . -2602) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1)) nil (23156 11854 125480 500000) 0 nil]) ((#("     " 0 5 (fontified t)) . -2599) 2598) nil (23156 11854 125495 600000) 0 nil]) ((#("
" 0 1 (fontified t)) . -2598) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1)) nil (23156 11854 125520 200000) 0 nil]) ((#("     " 0 5 (fontified t)) . -2592) 2591) nil (23156 11854 125530 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -2591) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1)) nil (23156 11854 125544 700000) 0 nil]) ((#("     " 0 5 (fontified t)) . -2587) 2586) nil (23156 11854 125554 500000) 0 nil]) ((#("
" 0 1 (fontified t)) . -2586) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1)) nil (23156 11854 125573 400000) 0 nil]) ((#("     " 0 5 (fontified t)) . -2576) (undo-tree-id1391 . -5) 2575) nil (23156 11854 125585 900000) 0 nil]) ((#("
" 0 1 (fontified t)) . -2575) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . 1)) nil (23156 11854 125607 400000) 0 nil]) ((#("     " 0 5 (fontified t)) . -2557) 2556) nil (23156 11854 125616 400000) 0 nil]) ((#("
" 0 1 (fontified t)) . -2556) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1)) nil (23156 11854 125645 500000) 0 nil]) ((#("      children: [{ type: \"Str\", , loc, range, raw }],
" 0 25 (fontified t) 25 30 (fontified t face font-lock-string-face) 30 54 (fontified t)) . 2599) (undo-tree-id1397 . -54) (undo-tree-id1398 . -54) (undo-tree-id1399 . -32) (undo-tree-id1400 . -54) (undo-tree-id1401 . -54) 2653) nil (23156 11854 125683 300000) 0 nil]) ((nil rear-nonsticky nil 2597 . 2598) (nil fontified nil 2588 . 2598) (2588 . 2598)) nil (23156 11854 125699 500000) 0 nil]) ((2581 . 2588)) nil (23156 11854 125706 700000) 0 nil]) ((#("value: raw" 0 10 (fontified t)) . 2614) (undo-tree-id1402 . -10) (undo-tree-id1403 . -10) 2624 (t 23156 11771 618072 200000)) nil (23156 11854 125722 500000) 0 nil]) ((2347 . 2357)) nil (23156 11771 412389 900000) 0 nil]) ((2346 . 2348)) nil (23156 11771 412418 600000) 0 nil]) ((#("lineno" 0 6 (fontified t)) . 2346) (undo-tree-id1380 . -6) (t 23156 11765 404703 400000)) nil (23156 11771 412608 600000) 0 nil]) ((#("Code" 0 4 (fontified t face font-lock-string-face)) . -2564) (2568 . 2577) 2568) nil (23156 11765 266042 0) 0 nil]) ((2564 . 2568)) nil (23156 11765 266066 200000) 0 nil]) ((#("Paragraph" 0 9 (fontified t face font-lock-string-face)) . 2564) (undo-tree-id1366 . -9)) nil (23156 11765 266093 400000) 0 nil]) ((#("    const raw = null; // TODO: fix asciidoc/asciidoc
    const p = this.createParagraph(elem.lines.join('\\n'), lineno);
    return { type: \"CodeBlock\", children: [p], raw, ...this.locAndRangeFrom([p]) };
" 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 13 (fontified t face font-lock-variable-name-face) 13 16 (fontified t) 16 20 (fontified t face font-lock-constant-face) 20 22 (fontified t) 22 25 (fontified t face font-lock-comment-delimiter-face) 25 53 (fontified t face font-lock-comment-face) 53 57 (fontified t) 57 62 (fontified t face font-lock-keyword-face) 62 63 (fontified t) 63 64 (fontified t face font-lock-variable-name-face) 64 67 (fontified t) 67 71 (fontified t face font-lock-constant-face) 71 72 (fontified t) 72 86 (fontified t) 86 87 (rear-nonsticky t fontified t) 87 104 (fontified t) 104 108 (fontified t face font-lock-string-face) 108 119 (fontified t) 119 120 (fontified t rear-nonsticky t) 120 124 (fontified t) 124 130 (fontified t face font-lock-keyword-face) 130 139 (fontified t) 139 150 (fontified t face font-lock-string-face) 150 172 (fontified t) 172 175 (fontified t) 175 179 (fontified t face font-lock-constant-face) 179 181 (fontified t) 181 195 (fontified t) 195 199 (fontified t) 199 200 (rear-nonsticky t fontified t) 200 203 (fontified t) 203 204 (rear-nonsticky t fontified t)) . 2681) (undo-tree-id1367 . -53) (undo-tree-id1368 . -53) (undo-tree-id1369 . -120) (undo-tree-id1370 . -120) (undo-tree-id1371 . -204) (undo-tree-id1372 . -204) (undo-tree-id1373 . -204) (undo-tree-id1374 . -120) (undo-tree-id1375 . -53) (undo-tree-id1376 . -53) (undo-tree-id1377 . -120) (undo-tree-id1378 . -204) (undo-tree-id1379 . -204) 2885) nil (23156 11765 266148 500000) 0 nil]) ((nil rear-nonsticky nil 2680 . 2681) (nil fontified nil 2606 . 2681) (nil fontified nil 2601 . 2606) (nil fontified nil 2574 . 2601) (nil fontified nil 2563 . 2574) (nil fontified nil 2548 . 2563) (nil fontified nil 2542 . 2548) (nil fontified nil 2515 . 2542) (nil fontified nil 2511 . 2515) (nil fontified nil 2508 . 2511) (nil fontified nil 2503 . 2508) (nil fontified nil 2502 . 2503) (nil fontified nil 2497 . 2502) (nil fontified nil 2485 . 2497) (nil fontified nil 2481 . 2485) (nil fontified nil 2480 . 2481) (nil fontified nil 2474 . 2480) (nil fontified nil 2458 . 2474) (nil fontified nil 2456 . 2458) (nil fontified nil 2452 . 2456) (nil fontified nil 2408 . 2452) (nil fontified nil 2404 . 2408) (nil fontified nil 2401 . 2404) (nil fontified nil 2398 . 2401) (nil fontified nil 2397 . 2398) (nil fontified nil 2392 . 2397) (nil fontified nil 2388 . 2392) (nil fontified nil 2369 . 2388) (nil fontified nil 2366 . 2369) (nil fontified nil 2365 . 2366) (nil fontified nil 2360 . 2365) (nil fontified nil 2356 . 2360) (2356 . 2681)) nil (23156 11765 266192 700000) 0 nil]) ((2519 . 2520)) nil (23156 11765 266207 800000) 0 nil]) ((2516 . 2520) (t 23156 11737 846725 900000)) nil (23156 11765 266217 200000) 0 nil]) ((2461 . 2463)) nil (23156 11737 686826 600000) 0 nil]) ((2460 . 2462)) nil (23156 11737 686857 200000) 0 nil]) ((2454 . 2461)) nil (23156 11737 686868 500000) 0 nil]) ((#("j" 0 1 (fontified t)) . -2454)) nil (23156 11737 686877 200000) 0 nil]) ((#("o" 0 1 (fontified t)) . -2455)) nil (23156 11737 686887 0) 0 nil]) ((#("i" 0 1 (fontified t)) . -2456)) nil (23156 11737 686896 0) 0 nil]) ((#("n" 0 1 (fontified t)) . -2457)) nil (23156 11737 686981 800000) 0 nil]) ((2454 . 2458)) nil (23156 11737 686989 300000) 0 nil]) ((#("." 0 1 (fontified t)) . -2454)) nil (23156 11737 686995 400000) 0 nil]) ((#("j" 0 1 (fontified t)) . -2455)) nil (23156 11737 687002 100000) 0 nil]) ((#("o" 0 1 (fontified t)) . -2456)) nil (23156 11737 687008 200000) 0 nil]) ((#("i" 0 1 (fontified t)) . -2457)) nil (23156 11737 687030 800000) 0 nil]) ((2454 . 2458)) nil (23156 11737 687039 200000) 0 nil]) ((#("." 0 1 (fontified t)) . -2454)) nil (23156 11737 687047 100000) 0 nil]) ((2449 . 2455)) nil (23156 11737 687056 100000) 0 nil]) ((#("text" 0 4 (fontified t)) . 2449) (undo-tree-id1365 . -4) (t 23156 11722 544010 500000)) nil (23156 11737 687129 400000) 0 nil]) ((2346 . 2352)) nil (23156 11722 423858 800000) 0 nil]) ((#("{" 0 1 (fontified t)) . -2346)) nil (23156 11722 423875 100000) 0 nil]) ((#(" " 0 1 (fontified t)) . -2347)) nil (23156 11722 423884 500000) 0 nil]) ((#("m" 0 1 (fontified t)) . -2348)) nil (23156 11722 423890 500000) 0 nil]) ((#("i" 0 1 (fontified t)) . -2349)) nil (23156 11722 423896 600000) 0 nil]) ((#("n" 0 1 (fontified t)) . -2350)) nil (23156 11722 423902 600000) 0 nil]) ((#("," 0 1 (fontified t)) . -2351)) nil (23156 11722 423907 900000) 0 nil]) ((#(" " 0 1 (fontified t)) . -2352)) nil (23156 11722 423913 600000) 0 nil]) ((#("m" 0 1 (fontified t)) . -2353)) nil (23156 11722 423920 400000) 0 nil]) ((#("a" 0 1 (fontified t)) . -2354)) nil (23156 11722 423928 300000) 0 nil]) ((#("x" 0 1 (fontified t)) . -2355)) nil (23156 11722 423936 200000) 0 nil]) ((#(" " 0 1 (fontified t)) . -2356)) nil (23156 11722 423944 500000) 0 nil]) ((#("}" 0 1 (fontified t)) . -2357) (undo-tree-id1363 . 1) (undo-tree-id1364 . -1) (t 23156 11713 977093 900000)) nil (23156 11722 424049 500000) 0 nil]) ((2542 . 2543)) nil (23156 11713 818005 300000) 0 nil]) ((2541 . 2543)) nil (23156 11713 818028 300000) 0 nil]) ((#("children" 0 8 (fontified t)) . 2541) (undo-tree-id1343 . -8)) nil (23156 11713 818059 300000) 0 nil]) ((#("    if (children.length === 0) {
      return null;
    }
" 0 4 (fontified t) 4 6 (fontified t face font-lock-keyword-face) 6 33 (fontified t) 33 39 (fontified t) 39 45 (fontified t face font-lock-keyword-face) 45 46 (fontified t) 46 50 (fontified t face font-lock-constant-face) 50 52 (fontified t) 52 58 (fontified t)) . 2470) (undo-tree-id1344 . -52) (undo-tree-id1345 . -52) (undo-tree-id1346 . -33) (undo-tree-id1347 . -33) (undo-tree-id1348 . -58) (undo-tree-id1349 . -58) (undo-tree-id1350 . -58) (undo-tree-id1351 . -58) 2528) nil (23156 11713 818105 800000) 0 nil]) ((#("    const children = this.convertElementList(elem.$blocks(), { min, max, update: false });
" 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 18 (fontified t face font-lock-variable-name-face) 18 21 (fontified t) 21 25 (fontified t face font-lock-constant-face) 25 60 (fontified t) 60 81 (fontified t) 81 86 (fontified t face font-lock-constant-face) 86 87 (fontified t) 87 91 (fontified t)) . 2415) (undo-tree-id1352 . -91) (undo-tree-id1353 . -91) (undo-tree-id1354 . -91) (undo-tree-id1355 . -91) (undo-tree-id1356 . -91) 2506) nil (23156 11713 818132 200000) 0 nil]) ((nil rear-nonsticky nil 2560 . 2561) (nil fontified nil 2540 . 2561) (nil fontified nil 2539 . 2540) (nil fontified nil 2525 . 2539) (nil fontified nil 2524 . 2525) (nil fontified nil 2520 . 2524) (nil fontified nil 2517 . 2520) (nil fontified nil 2516 . 2517) (nil fontified nil 2515 . 2516) (nil fontified nil 2510 . 2515) (nil fontified nil 2506 . 2510) (2506 . 2561)) nil (23156 11713 818149 900000) 0 nil]) ((2584 . 2593)) nil (23156 11713 818160 500000) 0 nil]) ((#("BlockQuote" 0 10 (fontified t face font-lock-string-face)) . 2584) (undo-tree-id1357 . -10)) nil (23156 11713 818170 700000) 0 nil]) ((2332 . 2339)) nil (23156 11713 818178 600000) 0 nil]) ((#("Q" 0 1 (fontified t)) . -2332)) nil (23156 11713 818185 0) 0 nil]) ((#("u" 0 1 (fontified t)) . -2333)) nil (23156 11713 818193 0) 0 nil]) ((#("o" 0 1 (fontified t)) . -2334)) nil (23156 11713 818210 0) 0 nil]) ((#("t" 0 1 (fontified t)) . -2335)) nil (23156 11713 818218 300000) 0 nil]) ((#("e" 0 1 (fontified t)) . -2336)) nil (23156 11713 818226 600000) 0 nil]) ((#("  
" 0 2 (fontified t face (my-face-u-1)) 2 3 (rear-nonsticky t fontified t)) . 2651) (undo-tree-id1358 . -3) (undo-tree-id1359 . -3)) nil (23156 11713 818240 600000) 0 nil]) ((nil fontified nil 2650 . 2651) (nil fontified nil 2647 . 2650) (nil fontified nil 2646 . 2647) (nil fontified nil 2643 . 2646) (nil fontified nil 2642 . 2643) (nil fontified nil 2633 . 2642) (nil fontified nil 2619 . 2633) (nil fontified nil 2617 . 2619) (nil fontified nil 2613 . 2617) (nil fontified nil 2610 . 2613) (nil fontified nil 2593 . 2610) (nil fontified nil 2581 . 2593) (nil fontified nil 2572 . 2581) (nil fontified nil 2566 . 2572) (nil fontified nil 2562 . 2566) (nil fontified nil 2556 . 2562) (nil fontified nil 2554 . 2556) (nil fontified nil 2550 . 2554) (nil fontified nil 2549 . 2550) (nil fontified nil 2543 . 2549) (nil fontified nil 2537 . 2543) (nil fontified nil 2510 . 2537) (nil fontified nil 2508 . 2510) (nil fontified nil 2504 . 2508) (nil fontified nil 2500 . 2504) (nil fontified nil 2499 . 2500) (nil fontified nil 2494 . 2499) (nil fontified nil 2473 . 2494) (nil fontified nil 2438 . 2473) (nil fontified nil 2434 . 2438) (nil fontified nil 2431 . 2434) (nil fontified nil 2423 . 2431) (nil fontified nil 2422 . 2423) (nil fontified nil 2417 . 2422) (nil fontified nil 2413 . 2417) (nil fontified nil 2385 . 2413) (nil fontified nil 2382 . 2385) (nil fontified nil 2380 . 2382) (nil fontified nil 2376 . 2380) (nil fontified nil 2373 . 2376) (nil fontified nil 2370 . 2373) (nil fontified nil 2369 . 2370) (nil fontified nil 2364 . 2369) (nil fontified nil 2360 . 2364) (nil fontified nil 2323 . 2360) (2323 . 2651)) nil (23156 11713 818296 500000) 0 nil]) ((2323 . 2325) (#("  " 0 2 (fontified nil)) . 2322) (2322 . 2324) (2322 . 2323) (#("  " 0 2 (fontified t face (my-face-u-1))) . 2322) 2324) nil (23156 11713 818329 0) 0 nil]) ((2321 . 2324)) nil (23156 11713 818341 800000) 0 nil]) ((1158 . 1165)) nil (23156 11713 818350 900000) 0 nil]) ((#("Q" 0 1 (fontified t)) . -1158)) nil (23156 11713 818359 500000) 0 nil]) ((#("u" 0 1 (fontified t)) . -1159)) nil (23156 11713 818369 0) 0 nil]) ((#("o" 0 1 (fontified t)) . -1160)) nil (23156 11713 818378 400000) 0 nil]) ((#("t" 0 1 (fontified t)) . -1161)) nil (23156 11713 818387 900000) 0 nil]) ((#("e" 0 1 (fontified t)) . -1162)) nil (23156 11713 818397 700000) 0 nil]) ((1121 . 1128)) nil (23156 11713 818407 900000) 0 nil]) ((#("quote" 0 5 (fontified t face font-lock-string-face)) . 1121)) nil (23156 11713 818415 800000) 0 nil]) ((nil fontified nil 1176 . 1177) (nil fontified nil 1148 . 1176) (nil fontified nil 1144 . 1148) (nil fontified nil 1143 . 1144) (nil fontified nil 1137 . 1143) (nil fontified nil 1131 . 1137) (nil fontified nil 1127 . 1131) (nil fontified nil 1120 . 1127) (nil fontified nil 1101 . 1120) (nil fontified nil 1099 . 1101) (nil fontified nil 1098 . 1099) (nil fontified nil 1094 . 1098) (nil fontified nil 1088 . 1094) (1088 . 1177)) nil (23156 11713 818440 700000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1094) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1)) nil (23156 11713 818478 900000) 0 nil]) ((#("    console.log(elem.context);" 0 30 (fontified t)) . 1094) (t 23156 11607 971550 200000)) nil (23156 11713 818494 0) 0 nil]) ((1118 . 1124)) nil (23156 11607 781694 100000) 0 nil]) ((1098 . 1118)) nil (23156 11607 781717 200000) 0 nil]) ((1093 . 1098) (t 23156 11463 543488 0)) nil (23156 11607 781728 900000) 0 nil]) ((#("    console.log(elem.$blocks()[0]);
" 0 4 (fontified t) 4 33 (fontified t) 33 34 (fontified t) 34 35 (rear-nonsticky t fontified t) 35 36 (fontified t)) . 2082) (undo-tree-id1335 . -35) (undo-tree-id1336 . -36) (undo-tree-id1337 . -36) (undo-tree-id1338 . -36) (undo-tree-id1339 . -35) (undo-tree-id1340 . -4) (undo-tree-id1341 . -36) (undo-tree-id1342 . -36) 2118 (t 23156 11459 778626 600000)) nil (23156 11463 327889 100000) 0 nil]) ((2073 . 2078)) nil (23156 11459 594048 900000) 0 nil]) ((2053 . 2073)) nil (23156 11459 594080 600000) 0 nil]) ((2052 . 2054)) nil (23156 11459 594093 100000) 0 nil]) ((#("lineno" 0 6 (fontified t)) . 2052) (undo-tree-id1333 . -6)) nil (23156 11459 594235 100000) 0 nil]) ((1923 . 1933)) nil (23156 11459 594252 0) 0 nil]) ((1922 . 1924)) nil (23156 11459 594603 900000) 0 nil]) ((#("lineno" 0 6 (fontified t)) . 1922) (undo-tree-id1334 . -6) (t 23156 11412 734568 900000)) nil (23156 11459 594693 800000) 0 nil]) ((2086 . 2087)) nil (23156 11412 516700 700000) 0 nil]) ((2085 . 2087)) nil (23156 11412 516728 200000) 0 nil]) ((#("]" 0 1 (fontified t)) . -2086)) nil (23156 11412 516741 500000) 0 nil]) ((#("[" 0 1 (fontified t)) . -2086)) nil (23156 11412 516752 400000) 0 nil]) ((2086 . 2088) (t 23156 11407 22897 700000)) nil (23156 11412 516765 600000) 0 nil]) ((2077 . 2083)) nil (23156 11406 836106 100000) 0 nil]) ((#("bkocks" 0 6 (fontified t)) . 2077) (undo-tree-id1329 . -6)) nil (23156 11406 836179 400000) 0 nil]) ((#("b" 0 1 (fontified t)) . -2085)) nil (23156 11406 836193 300000) 0 nil]) ((2071 . 2086)) nil (23156 11406 836220 200000) 0 nil]) ((#("children" 0 8 (fontified t)) . 2071) (undo-tree-id1330 . -8)) nil (23156 11406 836235 300000) 0 nil]) ((#("    " 0 4 (fontified t)) . -2059) 2055) nil (23156 11406 836244 300000) 0 nil]) ((nil rear-nonsticky nil 2084 . 2085) (nil fontified nil 2075 . 2085) (nil fontified nil 2059 . 2075) (2059 . 2085)) nil (23156 11406 836257 900000) 0 nil]) ((2055 . 2059)) nil (23156 11406 836270 0) 0 nil]) ((#("    console.log(children);" 0 16 (fontified t) 16 26 (fontified t)) . 2055) (undo-tree-id1331 . -24) (undo-tree-id1332 . -26) (t 23156 11397 963217 100000)) nil (23156 11406 836323 600000) 0 nil]) ((2079 . 2081)) nil (23156 11397 779122 0) 0 nil]) ((#("chi" 0 3 (fontified t)) . -2071) (2074 . 2082) 2074) nil (23156 11397 779147 700000) 0 nil]) ((2059 . 2074)) nil (23156 11397 779180 600000) 0 nil]) ((2054 . 2059) (t 23156 11384 855639 900000)) nil (23156 11397 779189 200000) 0 nil]) ((2138 . 2143)) nil (23156 11384 622911 0) 0 nil]) ((#("u" 0 1 (fontified t face font-lock-string-face)) . -2138)) nil (23156 11384 622940 900000) 0 nil]) ((2133 . 2139)) nil (23156 11384 622985 100000) 0 nil]) ((#("List" 0 4 (fontified t face font-lock-string-face)) . 2133) (undo-tree-id1328 . -4) (t 23156 11368 497167 300000)) nil (23156 11384 623143 300000) 0 nil]) ((1922 . 1928)) nil (23156 11368 236905 700000) 0 nil]) ((#("{ min, max }" 0 12 (fontified t)) . 1922) (undo-tree-id1322 . 1) (undo-tree-id1323 . -12) (undo-tree-id1324 . 12) (undo-tree-id1325 . -1) (undo-tree-id1326 . -12) (undo-tree-id1327 . -12) 1934 (t 23156 11360 352551 300000)) nil (23156 11368 237073 0) 0 nil]) ((#("      min,
      max,
      update: false
    });
" 0 36 (fontified t) 36 41 (fontified t face font-lock-constant-face) 41 50 (fontified t)) . 2061) (undo-tree-id1267 . -11) (undo-tree-id1268 . -11) (undo-tree-id1269 . -22) (undo-tree-id1270 . -22) (undo-tree-id1271 . -42) (undo-tree-id1272 . -42) (undo-tree-id1273 . -50) (undo-tree-id1274 . -50) (undo-tree-id1275 . -50) (undo-tree-id1276 . -50) 2111) nil (23156 11360 144179 100000) 0 nil]) ((2052 . 2060)) nil (23156 11360 144230 400000) 0 nil]) ((#("{" 0 1 (fontified t)) . -2052)) nil (23156 11360 144264 800000) 0 nil]) ((#("    
" 0 4 (fontified t face (my-face-u-1)) 4 5 (fontified t)) . 2241) (undo-tree-id1277 . -5) (undo-tree-id1278 . -5) (undo-tree-id1279 . -5) (undo-tree-id1280 . -5) (undo-tree-id1281 . -5) (undo-tree-id1282 . -5) (undo-tree-id1283 . -5) (undo-tree-id1284 . -5) (undo-tree-id1285 . -5) (undo-tree-id1286 . -5)) nil (23156 11360 144373 500000) 0 nil]) ((nil rear-nonsticky nil 2240 . 2241) (nil fontified nil 2237 . 2241) (nil fontified nil 2236 . 2237) (nil fontified nil 2227 . 2236) (nil fontified nil 2213 . 2227) (nil fontified nil 2211 . 2213) (nil fontified nil 2207 . 2211) (nil fontified nil 2204 . 2207) (nil fontified nil 2187 . 2204) (nil fontified nil 2181 . 2187) (nil fontified nil 2172 . 2181) (nil fontified nil 2166 . 2172) (nil fontified nil 2162 . 2166) (nil fontified nil 2154 . 2162) (nil fontified nil 2150 . 2154) (nil fontified nil 2149 . 2150) (nil fontified nil 2143 . 2149) (nil fontified nil 2137 . 2143) (nil fontified nil 2110 . 2137) (nil fontified nil 2108 . 2110) (nil fontified nil 2104 . 2108) (nil fontified nil 2095 . 2104) (nil fontified nil 2090 . 2095) (nil fontified nil 2054 . 2090) (nil fontified nil 2016 . 2054) (nil fontified nil 2012 . 2016) (nil fontified nil 2009 . 2012) (nil fontified nil 2001 . 2009) (nil fontified nil 2000 . 2001) (nil fontified nil 1995 . 2000) (nil fontified nil 1991 . 1995) (nil fontified nil 1963 . 1991) (nil fontified nil 1960 . 1963) (nil fontified nil 1958 . 1960) (nil fontified nil 1954 . 1958) (nil fontified nil 1951 . 1954) (nil fontified nil 1948 . 1951) (nil fontified nil 1947 . 1948) (nil fontified nil 1942 . 1947) (nil fontified nil 1938 . 1942) (1938 . 2241)) nil (23156 11360 144475 100000) 0 nil]) ((1937 . 1942)) nil (23156 11360 144511 700000) 0 nil]) ((#("    const raw = elem.$source();
    console.log(elem.$lines());
    const loc = this.findLocation(elem.$lines(), { min, max });
    if (!loc) {
      return null;
    }
    const range = this.locationToRange(loc);
    return {
      type: \"BlockQuote\",
      children: [{ type: \"Str\", value: raw, loc, range, raw }],
      loc,
      range,
      raw
    };
" 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 13 (fontified t face font-lock-variable-name-face) 13 32 (fontified t) 32 61 (fontified t) 61 62 (fontified t rear-nonsticky t) 62 64 (fontified t) 64 68 (fontified t) 68 73 (fontified t face font-lock-keyword-face) 73 74 (fontified t) 74 77 (fontified t face font-lock-variable-name-face) 77 80 (fontified t) 80 84 (fontified t face font-lock-constant-face) 84 128 (fontified t) 128 132 (fontified t) 132 134 (fontified t face font-lock-keyword-face) 134 144 (fontified t) 144 150 (fontified t) 150 156 (fontified t face font-lock-keyword-face) 156 157 (fontified t) 157 161 (fontified t face font-lock-constant-face) 161 173 (fontified t) 173 178 (fontified t face font-lock-keyword-face) 178 179 (fontified t) 179 184 (fontified t face font-lock-variable-name-face) 184 187 (fontified t) 187 191 (fontified t face font-lock-constant-face) 191 218 (fontified t) 218 224 (fontified t face font-lock-keyword-face) 224 227 (fontified t) 227 239 (fontified t) 239 251 (fontified t face font-lock-string-face) 251 253 (fontified t) 253 278 (fontified t) 278 283 (fontified t face font-lock-string-face) 283 317 (fontified t) 317 358 (fontified t)) . 1938) (undo-tree-id1287 . -351) (undo-tree-id1288 . -351) (undo-tree-id1289 . -341) (undo-tree-id1290 . -341) (undo-tree-id1291 . -328) (undo-tree-id1292 . -328) (undo-tree-id1293 . -317) (undo-tree-id1294 . -317) (undo-tree-id1295 . -253) (undo-tree-id1296 . -253) (undo-tree-id1297 . -227) (undo-tree-id1298 . -227) (undo-tree-id1299 . -358) (undo-tree-id1300 . -358) (undo-tree-id1301 . -32) (undo-tree-id1302 . -32) (undo-tree-id1303 . -32) (undo-tree-id1304 . -64) (undo-tree-id1305 . -64) (undo-tree-id1306 . -144) (undo-tree-id1307 . -144) (undo-tree-id1308 . -163) (undo-tree-id1309 . -163) (undo-tree-id1310 . -169) (undo-tree-id1311 . -169) (undo-tree-id1312 . -214) (undo-tree-id1313 . -214) (undo-tree-id1314 . -128) (undo-tree-id1315 . -128) (undo-tree-id1316 . -128) (undo-tree-id1317 . -62) (undo-tree-id1318 . -32) (undo-tree-id1319 . -64) (undo-tree-id1320 . -32) (undo-tree-id1321 . -358) 2296 (t 23156 11259 226527 300000)) nil (23156 11360 144947 500000) 0 nil]) ((1986 . 1999)) nil (23156 11259 42814 0) 0 nil]) ((#("raw" 0 3 (fontified t)) . 1986) (undo-tree-id1257 . -3)) nil (23156 11259 42929 100000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1992) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1)) nil (23156 11259 43035 200000) 0 nil]) ((#("    console.log(\"\\n\")" 0 16 (fontified t) 16 20 (fontified t face font-lock-string-face) 20 21 (fontified t)) . 1992) (undo-tree-id1262 . 1) (undo-tree-id1263 . -21) (undo-tree-id1264 . 6) (undo-tree-id1265 . -16) (undo-tree-id1266 . -21) (t 23156 11248 520587 600000)) nil (23156 11259 43081 200000) 0 nil]) ((2009 . 2011)) nil (23156 11248 334189 500000) 0 nil]) ((2008 . 2010)) nil (23156 11248 334219 800000) 0 nil]) ((1996 . 2009)) nil (23156 11248 334233 700000) 0 nil]) ((1991 . 1996) (t 23156 11215 528152 900000)) nil (23156 11248 334245 400000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1970) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . 1) (undo-tree-id1256 . -1)) nil (23156 11215 315463 800000) 0 nil]) ((#("    " 0 4 (fontified nil)) . 1970) (1970 . 1974) (1970 . 1971) (t 23156 11203 62503 600000)) nil (23156 11215 315499 200000) 0 nil]) ((1991 . 1996) (#("    " 0 4 (fontified t)) . 1991) 1995 (t 23156 11196 684483 200000)) nil (23156 11202 877247 0) 0 nil]) ((1990 . 1991)) nil (23156 11196 470919 500000) 0 nil]) ((1986 . 1989)) nil (23156 11196 471003 400000) 0 nil]) ((#("." 0 1 (fontified t)) . 1986)) nil (23156 11196 471029 0) 0 nil]) ((#("elem" 0 4 (fontified t)) . 1986) (undo-tree-id1247 . -4)) nil (23156 11196 471115 500000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1938) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1)) nil (23156 11196 471172 500000) 0 nil]) ((nil rear-nonsticky nil 1992 . 1993) (nil fontified nil 1971 . 1993) (1971 . 1993)) nil (23156 11196 471187 300000) 0 nil] [nil nil ((nil rear-nonsticky nil 1960 . 1961) (nil fontified nil 1939 . 1961) (1939 . 1961)) ((#("    console.log(elem.)" 0 21 (fontified nil) 21 22 (fontified nil rear-nonsticky nil)) . 1939) (undo-tree-id1241 . -22) (undo-tree-id1242 . -22) (undo-tree-id1243 . 1) (undo-tree-id1244 . -22) (undo-tree-id1245 . 7) (undo-tree-id1246 . -16) (nil rear-nonsticky t 1960 . 1961)) (23156 11191 466669 100000) 0 nil]) ((#("    console.log(elem.)" 0 22 (fontified t)) . 1938) (undo-tree-id1240 . -22)) nil (23156 11191 467334 400000) 0 nil]) ((1954 . 1959)) nil (23156 11191 466803 100000) 0 nil]) ((1942 . 1955)) nil (23156 11191 466811 800000) 0 nil]) ((1937 . 1942) (t 23156 11180 271742 0)) nil (23156 11191 466819 700000) 0 nil]) ((2146 . 2156)) nil (23156 11180 83688 200000) 0 nil]) ((#("B" 0 1 (fontified t face font-lock-string-face)) . -2146)) nil (23156 11180 83715 800000) 0 nil]) ((#("l" 0 1 (fontified t face font-lock-string-face)) . -2147)) nil (23156 11180 83730 500000) 0 nil]) ((2146 . 2148)) nil (23156 11180 83741 800000) 0 nil]) ((#("Paragraph" 0 9 (fontified t face font-lock-string-face)) . 2146) (undo-tree-id1235 . -9)) nil (23156 11180 83773 900000) 0 nil]) ((#("
" 0 1 (fontified t)) . 3569) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1)) nil (23156 11180 83810 200000) 0 nil]) ((#("    if ()" 0 4 (fontified t) 4 6 (fontified t face font-lock-keyword-face) 6 9 (fontified t)) . 3569)) nil (23156 11180 83823 0) 0 nil]) ((3573 . 3578)) nil (23156 11180 83833 200000) 0 nil]) ((3568 . 3573)) nil (23156 11180 83841 500000) 0 nil]) ((1911 . 1915)) nil (23156 11180 83850 600000) 0 nil]) ((#("A" 0 1 (fontified t)) . -1911)) nil (23156 11180 83860 800000) 0 nil]) ((#("u" 0 1 (fontified t)) . -1912)) nil (23156 11180 83870 200000) 0 nil]) ((1910 . 1913)) nil (23156 11180 83879 700000) 0 nil]) ((#("P" 0 1 (fontified t)) . -1910)) nil (23156 11180 83888 700000) 0 nil]) ((#("a" 0 1 (fontified t)) . -1911)) nil (23156 11180 83897 800000) 0 nil]) ((#("r" 0 1 (fontified t)) . -1912)) nil (23156 11180 83907 200000) 0 nil]) ((#("a" 0 1 (fontified t)) . -1913)) nil (23156 11180 83915 900000) 0 nil]) ((#("g" 0 1 (fontified t)) . -1914)) nil (23156 11180 83926 100000) 0 nil]) ((#("r" 0 1 (fontified t)) . -1915)) nil (23156 11180 83935 900000) 0 nil]) ((#("a" 0 1 (fontified t)) . -1916)) nil (23156 11180 83945 400000) 0 nil]) ((#("p" 0 1 (fontified t)) . -1917)) nil (23156 11180 83955 600000) 0 nil]) ((#("h" 0 1 (fontified t)) . -1918)) nil (23156 11180 83965 0) 0 nil]) ((#("  
" 0 2 (fontified t face (my-face-u-1)) 2 3 (fontified t)) . 2271) (undo-tree-id1238 . -3) (undo-tree-id1239 . -3)) nil (23156 11180 83989 200000) 0 nil]) ((nil rear-nonsticky nil 2270 . 2271) (nil fontified nil 2192 . 2271) (nil fontified nil 2187 . 2192) (nil fontified nil 2160 . 2187) (nil fontified nil 2149 . 2160) (nil fontified nil 2134 . 2149) (nil fontified nil 2128 . 2134) (nil fontified nil 2101 . 2128) (nil fontified nil 2097 . 2101) (nil fontified nil 2094 . 2097) (nil fontified nil 2089 . 2094) (nil fontified nil 2088 . 2089) (nil fontified nil 2083 . 2088) (nil fontified nil 2071 . 2083) (nil fontified nil 2067 . 2071) (nil fontified nil 2066 . 2067) (nil fontified nil 2060 . 2066) (nil fontified nil 2044 . 2060) (nil fontified nil 2042 . 2044) (nil fontified nil 2038 . 2042) (nil fontified nil 1994 . 2038) (nil fontified nil 1990 . 1994) (nil fontified nil 1987 . 1990) (nil fontified nil 1984 . 1987) (nil fontified nil 1983 . 1984) (nil fontified nil 1978 . 1983) (nil fontified nil 1974 . 1978) (nil fontified nil 1955 . 1974) (nil fontified nil 1952 . 1955) (nil fontified nil 1951 . 1952) (nil fontified nil 1946 . 1951) (nil fontified nil 1901 . 1946) (1901 . 2271)) nil (23156 11180 84035 200000) 0 nil]) ((1901 . 1903) (#("  " 0 2 (fontified nil)) . 1900) (1900 . 1902) (1900 . 1901) (#("  " 0 2 (fontified t face (my-face-u-1))) . 1900) 1902) nil (23156 11180 84065 100000) 0 nil]) ((1899 . 1902) (t 23156 11131 541947 0)) nil (23156 11180 84078 700000) 0 nil]) ((1067 . 1072)) nil (23156 11131 353042 100000) 0 nil]) ((#("D" 0 1 (fontified t)) . -1067)) nil (23156 11131 353064 800000) 0 nil]) ((#("e" 0 1 (fontified t)) . -1068)) nil (23156 11131 353076 100000) 0 nil]) ((#("f" 0 1 (fontified t)) . -1069)) nil (23156 11131 353083 600000) 0 nil]) ((#("i" 0 1 (fontified t)) . -1070)) nil (23156 11131 353091 200000) 0 nil]) ((#("n" 0 1 (fontified t)) . -1071)) nil (23156 11131 353098 400000) 0 nil]) ((#("i" 0 1 (fontified t)) . -1072)) nil (23156 11131 353124 400000) 0 nil]) ((#("t" 0 1 (fontified nil)) . -1073)) nil (23156 11131 353134 200000) 0 nil]) ((#("i" 0 1 (fontified t)) . -1074)) nil (23156 11131 353168 200000) 0 nil]) ((#("o" 0 1 (fontified t)) . -1075)) nil (23156 11131 353179 200000) 0 nil]) ((#("n" 0 1 (fontified t)) . -1076)) nil (23156 11131 353189 0) 0 nil]) ((#("L" 0 1 (fontified t)) . -1077)) nil (23156 11131 353197 300000) 0 nil]) ((#("i" 0 1 (fontified nil)) . -1078)) nil (23156 11131 353205 600000) 0 nil]) ((#("s" 0 1 (fontified t)) . -1079)) nil (23156 11131 353214 300000) 0 nil]) ((#("t" 0 1 (fontified t)) . -1080)) nil (23156 11131 353223 300000) 0 nil]) ((1032 . 1037)) nil (23156 11131 353233 500000) 0 nil]) ((#("dlist" 0 5 (fontified t face font-lock-string-face)) . 1032) (undo-tree-id1230 . -5)) nil (23156 11131 353334 0) 0 nil]) ((nil fontified nil 1096 . 1097) (nil fontified nil 1059 . 1096) (nil fontified nil 1055 . 1059) (nil fontified nil 1054 . 1055) (nil fontified nil 1048 . 1054) (nil fontified nil 1042 . 1048) (nil fontified nil 1038 . 1042) (nil fontified nil 1031 . 1038) (nil fontified nil 1012 . 1031) (nil fontified nil 1010 . 1012) (nil fontified nil 1009 . 1010) (nil fontified nil 1005 . 1009) (nil fontified nil 999 . 1005) (999 . 1097)) nil (23156 11131 353405 700000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1005) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1)) nil (23156 11131 353508 800000) 0 nil]) ((#("    console.log(elem.context);" 0 30 (fontified t)) . 1005) (undo-tree-id1234 . -30) (t 23156 11121 214086 900000)) nil (23156 11131 353532 600000) 0 nil]) ((1029 . 1035)) nil (23156 11120 997052 100000) 0 nil]) ((1009 . 1029)) nil (23156 11120 997082 700000) 0 nil]) ((1004 . 1009)) nil (23156 11120 997095 500000) 0 nil]) ((#("
" 0 1 (fontified t)) . 944) (undo-tree-id1225 . 1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1)) nil (23156 11120 997233 300000) 0 nil]) ((#("      conso" 0 11 (fontified t)) . 944) (undo-tree-id1229 . -11)) nil (23156 11120 997255 600000) 0 nil]) ((950 . 955)) nil (23156 11120 997302 800000) 0 nil]) ((943 . 950) (t 23156 11015 803937 100000)) nil (23156 11120 997335 300000) 0 nil]) ((1009 . 1021)) nil (23156 11015 638780 700000) 0 nil]) ((1004 . 1009) (t 23156 10930 138742 200000)) nil (23156 11015 638811 700000) 0 nil]) ((2313 . 2390) (#("[], elem.$blocks().map(([terms, item]) => [...terms, item])" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 59 (fontified t)) . 2313) (t 23156 10836 975376 200000)) nil (23156 11015 638828 700000) 0 nil]) ((#("
" 0 1 (fontified t rear-nonsticky t)) . 2480) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1)) nil (23156 10836 787332 700000) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((2300 . 2301)) ((#("[" 0 1 (fontified t)) . 2300)) (23156 10829 434259 100000) 0 nil]) ((#("c" 0 1 (fontified t)) . -2300)) ((2300 . 2301)) (23156 10829 434895 800000) 0 nil]) ((#("o" 0 1 (fontified t)) . -2301)) ((2301 . 2302)) (23156 10829 711855 400000) 0 nil]) ((#("n" 0 1 (fontified t)) . -2302)) ((2302 . 2303)) (23156 10830 75878 600000) 0 nil]) ((#("c" 0 1 (fontified t)) . -2303)) ((2303 . 2304)) (23156 10830 350067 200000) 0 nil]) ((#("a" 0 1 (fontified t)) . -2304)) ((2304 . 2305)) (23156 10830 568983 500000) 0 nil]) ((#("t" 0 1 (fontified t)) . -2305)) ((2305 . 2306)) (23156 10830 745979 900000) 0 nil]) ((#("." 0 1 (fontified t)) . -2306)) ((2306 . 2307)) (23156 10830 929116 0) 0 nil]) ((#("a" 0 1 (fontified t)) . -2307)) ((2307 . 2308)) (23156 10831 174626 300000) 0 nil]) ((#("p" 0 1 (fontified nil)) . -2308)) ((2308 . 2309)) (23156 10831 506349 500000) 0 nil]) ((#("p" 0 1 (fontified t)) . -2309)) ((2309 . 2310)) (23156 10831 812524 200000) 0 nil]) ((#("l" 0 1 (fontified t)) . -2310)) ((2310 . 2311)) (23156 10832 32506 900000) 0 nil]) ((#("y" 0 1 (fontified t)) . -2311)) ((2311 . 2312)) (23156 10832 238092 100000) 0 nil]) ((#("(" 0 1 (fontified nil)) . -2312)) ((2312 . 2313)) (23156 10832 464875 200000) 0 nil]) ((#("[" 0 1 (fontified t)) . -2313)) ((2313 . 2314)) (23156 10832 604787 500000) 0 nil]) ((#("]" 0 1 (fontified t)) . -2314)) ((2314 . 2315)) (23156 10832 789114 500000) 0 nil]) ((#("," 0 1 (fontified t)) . -2315)) ((2315 . 2316)) (23156 10833 94568 500000) 0 nil]) ((#(" " 0 1 (fontified t)) . -2316) (t 23156 10797 573570 400000)) ((2316 . 2317)) (23156 10833 395779 500000) 0 nil]) ((#("
" 0 1 (fontified t rear-nonsticky t)) . 2480) (undo-tree-id1211 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1)) ((2480 . 2481) (t 23156 10797 573570 400000)) (23156 10833 583755 800000) 0 nil]) ((#("    console.log(children[0]);" 0 4 (fontified t) 4 29 (fontified t)) . 2480) (undo-tree-id1217 . -4) (undo-tree-id1218 . -4) (undo-tree-id1219 . -29) (t 23156 10794 666019 200000)) nil (23156 10834 127002 500000) 0 nil]) ((2505 . 2506)) nil (23156 10794 447882 900000) 0 nil]) ((#("1" 0 1 (fontified t)) . 2505) (undo-tree-id1210 . -1) (t 23156 10787 264926 200000)) nil (23156 10794 448058 900000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2510) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1)) nil (23156 10787 69445 600000) 0 nil]) ((2496 . 2504)) nil (23156 10787 69476 200000) 0 nil]) ((#("blocks" 0 6 (fontified t)) . 2496) (undo-tree-id1209 . -6)) nil (23156 10787 69501 500000) 0 nil]) ((#("    " 0 4 (fontified t)) . -2484) 2480) nil (23156 10787 69514 700000) 0 nil]) ((nil rear-nonsticky nil 2511 . 2512) (nil fontified nil 2511 . 2512) (nil fontified nil 2484 . 2511) (2484 . 2512)) nil (23156 10787 69557 0) 0 nil]) ((2479 . 2484) (t 23156 10779 595444 500000)) nil (23156 10787 69567 600000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2375) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1)) nil (23156 10779 409401 300000) 0 nil]) ((#("    console.log(blocks[1]);" 0 27 (fontified t)) . 2375) (undo-tree-id1204 . -27) (t 23156 10775 772073 200000)) nil (23156 10779 409444 400000) 0 nil]) ((2398 . 2399)) nil (23156 10775 553509 900000) 0 nil]) ((#("0" 0 1 (fontified t)) . 2398) (t 23156 10773 172395 600000)) nil (23156 10775 553559 700000) 0 nil]) ((2398 . 2399)) nil (23156 10772 986448 300000) 0 nil]) ((2397 . 2399)) nil (23156 10772 986475 100000) 0 nil]) ((#(".length" 0 7 (fontified t)) . 2397) (undo-tree-id1192 . -7) (t 23156 10769 747519 400000)) nil (23156 10772 986598 600000) 0 nil]) ((2397 . 2404)) nil (23156 10769 532213 900000) 0 nil]) ((#("." 0 1 (fontified t)) . -2398)) nil (23156 10769 532237 300000) 0 nil]) ((2398 . 2399) (t 23156 10764 646971 700000)) nil (23156 10769 532249 0) 0 nil]) ((2379 . 2399)) nil (23156 10764 426815 400000) 0 nil]) ((2374 . 2379) (t 23156 10758 412454 500000)) nil (23156 10764 426867 100000) 0 nil]) ((#("s" 0 1 (fontified t)) . -2370) (t 23156 10753 868272 900000)) nil (23156 10758 227547 200000) 0 nil]) ((2421 . 2427)) nil (23156 10753 713922 700000) 0 nil]) ((#("concat.apply([], elem.$blocks())" 0 22 (fontified t) 22 32 (fontified t)) . 2421) (undo-tree-id1177 . -32) (undo-tree-id1178 . 1) (undo-tree-id1179 . -32) (undo-tree-id1180 . 20) (undo-tree-id1181 . -13) (undo-tree-id1182 . -32) 2453) nil (23156 10753 714030 700000) 0 nil]) ((2285 . 2300)) nil (23156 10753 714048 0) 0 nil]) ((2358 . 2360)) nil (23156 10753 714056 0) 0 nil]) ((2285 . 2302)) nil (23156 10753 714063 500000) 0 nil]) ((2329 . 2339)) nil (23156 10753 714071 100000) 0 nil]) ((#("m" 0 1 (fontified t)) . -2329)) nil (23156 10753 714077 100000) 0 nil]) ((2324 . 2330)) nil (23156 10753 714085 0) 0 nil]) ((2323 . 2325)) nil (23156 10753 714092 200000) 0 nil]) ((#("{" 0 1 (fontified t)) . -2323)) nil (23156 10753 714099 400000) 0 nil]) ((#("}" 0 1 (fontified t)) . -2324)) nil (23156 10753 714106 900000) 0 nil]) ((2318 . 2325)) nil (23156 10753 714114 900000) 0 nil]) ((2304 . 2305)) nil (23156 10753 714121 700000) 0 nil]) ((2312 . 2316)) nil (23156 10753 714128 500000) 0 nil]) ((#("d" 0 1 (fontified t)) . -2312)) nil (23156 10753 714134 900000) 0 nil]) ((#("e" 0 1 (fontified t)) . -2313)) nil (23156 10753 714142 400000) 0 nil]) ((#("f" 0 1 (fontified t)) . -2314)) nil (23156 10753 714149 600000) 0 nil]) ((#("i" 0 1 (fontified t)) . -2315)) nil (23156 10753 714157 900000) 0 nil]) ((2312 . 2316)) nil (23156 10753 714168 100000) 0 nil]) ((#("d" 0 1 (fontified t)) . -2312)) nil (23156 10753 714177 600000) 0 nil]) ((#("e" 0 1 (fontified t)) . -2313)) nil (23156 10753 714200 600000) 0 nil]) ((2312 . 2314)) nil (23156 10753 714210 800000) 0 nil]) ((#("item" 0 4 (fontified t)) . 2312)) nil (23156 10753 714219 900000) 0 nil]) ((2312 . 2316)) nil (23156 10753 714231 200000) 0 nil]) ((2305 . 2310)) nil (23156 10753 714241 400000) 0 nil]) ((#("items" 0 5 (fontified t)) . 2305)) nil (23156 10753 714248 200000) 0 nil]) ((2305 . 2312)) nil (23156 10753 714255 400000) 0 nil]) ((2304 . 2306)) nil (23156 10753 714262 200000) 0 nil]) ((2299 . 2305)) nil (23156 10753 714269 300000) 0 nil]) ((#("." 0 1 (fontified t)) . -2299)) nil (23156 10753 714275 700000) 0 nil]) ((2285 . 2300)) nil (23156 10753 714284 100000) 0 nil]) ((2280 . 2285)) nil (23156 10753 714293 500000) 0 nil]) ((#("
" 0 1 (fontified t rear-nonsticky t)) . 2281) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1)) nil (23156 10753 714330 900000) 0 nil]) ((#("    console.log(concat.apply([], elem.$blocks())[0])" 0 16 (fontified t) 16 38 (fontified t) 38 47 (fontified t) 47 48 (fontified t rear-nonsticky t) 48 51 (fontified t) 51 52 (fontified t)) . 2281) (undo-tree-id1188 . -48) (undo-tree-id1189 . -48) (undo-tree-id1190 . -48) (undo-tree-id1191 . -16) (t 23156 10689 653768 700000)) nil (23156 10753 714366 0) 0 nil]) ((2330 . 2331)) nil (23156 10689 522890 900000) 0 nil]) ((2329 . 2331)) nil (23156 10689 522898 500000) 0 nil]) ((#("." 0 1 (fontified t)) . -2329)) nil (23156 10689 522901 100000) 0 nil]) ((#("c" 0 1 (fontified t)) . -2330)) nil (23156 10689 522904 500000) 0 nil]) ((#("o" 0 1 (fontified t)) . -2331)) nil (23156 10689 522907 100000) 0 nil]) ((2329 . 2332)) nil (23156 10689 522910 500000) 0 nil]) ((#(".length" 0 7 (fontified t)) . 2329) (undo-tree-id1163 . -7) (undo-tree-id1164 . -7) 2336) nil (23156 10689 522930 900000) 0 nil]) ((#("children" 0 8 (fontified t)) . 2329) (undo-tree-id1165 . -8)) nil (23156 10689 522935 100000) 0 nil]) ((nil rear-nonsticky nil 2328 . 2329) (nil fontified nil 2319 . 2329) (nil fontified nil 2297 . 2319) (2297 . 2329)) nil (23156 10689 522939 200000) 0 nil]) ((#("    
" 0 4 (fontified t face (my-face-u-1)) 4 5 (fontified t)) . 2314) (undo-tree-id1166 . -5) (undo-tree-id1167 . -5) (undo-tree-id1168 . -5) (undo-tree-id1169 . -5) (undo-tree-id1170 . -5) (undo-tree-id1171 . -5) (undo-tree-id1172 . -5)) nil (23156 10689 522957 400000) 0 nil]) ((nil rear-nonsticky nil 2313 . 2314) (nil fontified nil 2313 . 2314) (nil fontified nil 2281 . 2313) (2281 . 2314)) nil (23156 10689 522962 700000) 0 nil]) ((2280 . 2285)) nil (23156 10689 522965 700000) 0 nil]) ((#("    console.log(children.length)
" 0 32 (fontified t) 32 33 (fontified t)) . 2412) (undo-tree-id1173 . -33) (undo-tree-id1174 . -33) (undo-tree-id1175 . -33) (undo-tree-id1176 . -33) 2445 (t 23156 10659 449794 300000)) nil (23156 10689 522974 700000) 0 nil]) ((2436 . 2443)) nil (23156 10659 298322 400000) 0 nil]) ((#("l" 0 1 (fontified t)) . -2436)) nil (23156 10659 298349 500000) 0 nil]) ((#("." 0 1 (fontified t)) . -2437)) nil (23156 10659 298364 300000) 0 nil]) ((2436 . 2438)) nil (23156 10659 298376 0) 0 nil]) ((#("." 0 1 (fontified t)) . -2436)) nil (23156 10659 298385 0) 0 nil]) ((2428 . 2437)) nil (23156 10659 298395 600000) 0 nil]) ((2416 . 2429)) nil (23156 10659 298405 0) 0 nil]) ((2411 . 2416)) nil (23156 10659 298414 500000) 0 nil]) ((#("    console.log(concat.apply([], elem.$blocks()).length)
" 0 16 (fontified t) 16 38 (fontified t) 38 47 (fontified t) 47 48 (fontified t rear-nonsticky t) 48 56 (fontified t) 56 57 (fontified t)) . 2281) (undo-tree-id1155 . -48) (undo-tree-id1156 . -57) (undo-tree-id1157 . -57) (undo-tree-id1158 . -48) (undo-tree-id1159 . -16) (undo-tree-id1160 . -48) (undo-tree-id1161 . -57) (undo-tree-id1162 . -57) 2338 (t 23156 10645 159998 900000)) nil (23156 10659 298610 100000) 0 nil]) ((#("elem.$blocks()" 0 14 (fontified t)) . 2329) (undo-tree-id1153 . -14) (undo-tree-id1154 . -14) 2343) nil (23156 10644 971911 200000) 0 nil]) ((nil rear-nonsticky nil 2328 . 2329) (nil fontified nil 2319 . 2329) (nil fontified nil 2297 . 2319) (2297 . 2329) (t 23156 10632 453592 800000)) nil (23156 10644 971947 0) 0 nil]) ((2317 . 2318)) nil (23156 10632 290806 900000) 0 nil]) ((2297 . 2317)) nil (23156 10632 290828 400000) 0 nil]) ((2285 . 2298)) nil (23156 10632 290839 0) 0 nil]) ((2280 . 2285) (t 23156 10593 187120 300000)) nil (23156 10632 290848 800000) 0 nil]) ((2343 . 2348) (t 23156 10586 890011 400000)) nil (23156 10592 971230 800000) 0 nil]) ((#("." 0 1 (fontified t)) . 2326)) nil (23156 10586 735483 300000) 0 nil]) ((#(".prototype" 0 1 (fontified t) 1 10 (fontified t face font-lock-constant-face)) . 2326) (undo-tree-id1150 . -1) (undo-tree-id1151 . -10)) nil (23156 10586 735645 0) 0 nil]) ((#("Array" 0 5 (fontified t)) . 2326) (undo-tree-id1152 . -5)) nil (23156 10586 735706 100000) 0 nil]) ((2279 . 2280)) nil (23156 10586 735720 100000) 0 nil]) ((nil rear-nonsticky nil 2278 . 2279) (nil fontified nil 2272 . 2279) (nil fontified nil 2263 . 2272) (nil fontified nil 2257 . 2263) (2257 . 2279)) nil (23156 10586 735735 200000) 0 nil]) ((2242 . 2257)) nil (23156 10586 735747 300000) 0 nil]) ((2237 . 2242) (t 23156 10577 489986 300000)) nil (23156 10586 735757 500000) 0 nil]) ((2325 . 2326)) nil (23156 10577 304141 100000) 0 nil]) ((2312 . 2316)) nil (23156 10577 304168 300000) 0 nil]) ((#("." 0 1 (fontified t)) . 2312)) nil (23156 10577 304182 200000) 0 nil]) ((2309 . 2312)) nil (23156 10577 304195 800000) 0 nil]) ((2289 . 2309)) nil (23156 10577 304207 500000) 0 nil]) ((#("processeselem" 0 9 (fontified t) 9 13 (fontified t)) . 2289) (undo-tree-id1149 . -9)) nil (23156 10577 304241 900000) 0 nil]) ((#("." 0 1 (fontified t)) . -2298)) nil (23156 10577 304254 300000) 0 nil]) ((2298 . 2299)) nil (23156 10577 304264 900000) 0 nil]) ((#("pro" 0 3 (fontified t)) . -2289) (2292 . 2301) 2292) nil (23156 10577 304278 100000) 0 nil]) ((2286 . 2292)) nil (23156 10577 304290 200000) 0 nil]) ((#("y" 0 1 (fontified t)) . -2286)) nil (23156 10577 304300 400000) 0 nil]) ((#("a" 0 1 (fontified t)) . -2287)) nil (23156 10577 304310 600000) 0 nil]) ((#("." 0 1 (fontified t)) . -2288)) nil (23156 10577 304321 200000) 0 nil]) ((2283 . 2289)) nil (23156 10577 304332 500000) 0 nil]) ((#("c" 0 1 (fontified t)) . -2283)) nil (23156 10577 304353 200000) 0 nil]) ((2283 . 2284)) nil (23156 10577 304364 200000) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((2725 . 2726)) ((#(")" 0 1 (fontified t)) . 2725) (t 23156 10548 952612 600000)) (23156 10548 797139 700000) 0 nil]) ((2709 . 2711)) ((#(", " 0 2 (fontified t)) . 2709)) (23156 10557 243666 900000) 0 nil]) ((2694 . 2707)) ((#("concat.apply(" 0 13 (fontified t)) . 2694)) (23156 10557 576923 400000) 0 nil]) ((2684 . 2693)) ((#("prototype" 0 9 (fontified t face font-lock-constant-face)) . 2684)) (23156 10557 914308 200000) 0 nil]) ((#("processes" 0 9 (fontified t)) . 2684) (undo-tree-id1138 . -9)) ((2684 . 2693)) (23156 10558 218553 100000) 0 nil]) ((2693 . 2694)) ((#("." 0 1 (fontified t)) . 2693)) (23156 10558 705854 0) 0 nil]) ((#("pro" 0 3 (fontified t)) . -2684) (2687 . 2696) 2687) ((#("processes" 0 9 (fontified nil)) . 2687) (undo-tree-id1143 . -9) (2684 . 2687)) (23156 10559 196983 0) 0 nil]) ((2678 . 2687)) ((#("Array.pro" 0 6 (fontified t) 6 9 (fontified t)) . 2678) (undo-tree-id1144 . -9)) (23156 10559 594970 700000) 0 nil]) ((2678 . 2680)) ((#("[]" 0 2 (fontified t)) . 2678) (undo-tree-id1145 . 2) (undo-tree-id1146 . -1) (undo-tree-id1147 . 1) (undo-tree-id1148 . -2)) (23156 10559 898810 0) 0 nil]) ((2148 . 2158)) nil (23156 10560 236473 400000) 0 nil]) ((#("  
" 0 2 (fontified t face (my-face-u-1)) 2 3 (fontified t)) . 2482) (undo-tree-id1140 . -3) (undo-tree-id1141 . -3) (undo-tree-id1142 . -3)) nil (23156 10548 797314 900000) 0 nil]) ((nil rear-nonsticky nil 2481 . 2482) (nil fontified nil 2478 . 2482) (nil fontified nil 2474 . 2478) (nil fontified nil 2473 . 2474) (nil fontified nil 2464 . 2473) (nil fontified nil 2450 . 2464) (nil fontified nil 2448 . 2450) (nil fontified nil 2444 . 2448) (nil fontified nil 2441 . 2444) (nil fontified nil 2424 . 2441) (nil fontified nil 2418 . 2424) (nil fontified nil 2409 . 2418) (nil fontified nil 2403 . 2409) (nil fontified nil 2399 . 2403) (nil fontified nil 2391 . 2399) (nil fontified nil 2387 . 2391) (nil fontified nil 2386 . 2387) (nil fontified nil 2380 . 2386) (nil fontified nil 2347 . 2380) (nil fontified nil 2345 . 2347) (nil fontified nil 2332 . 2345) (nil fontified nil 2327 . 2332) (nil fontified nil 2291 . 2327) (nil fontified nil 2253 . 2291) (nil fontified nil 2249 . 2253) (nil fontified nil 2246 . 2249) (nil fontified nil 2238 . 2246) (nil fontified nil 2237 . 2238) (nil fontified nil 2232 . 2237) (nil fontified nil 2228 . 2232) (nil fontified nil 2200 . 2228) (nil fontified nil 2197 . 2200) (nil fontified nil 2195 . 2197) (nil fontified nil 2191 . 2195) (nil fontified nil 2188 . 2191) (nil fontified nil 2185 . 2188) (nil fontified nil 2184 . 2185) (nil fontified nil 2179 . 2184) (nil fontified nil 2175 . 2179) (nil fontified nil 2139 . 2175) (2139 . 2482)) nil (23156 10548 797360 300000) 0 nil]) ((2139 . 2141) (#("  " 0 2 (fontified nil)) . 2138) (2138 . 2140) (2138 . 2139) (#("  " 0 2 (fontified t face (my-face-u-1))) . 2138) 2140) nil (23156 10548 797388 600000) 0 nil]) ((2137 . 2140)) nil (23156 10548 797401 800000) 0 nil]) ((969 . 983)) nil (23156 10548 797411 200000) 0 nil]) ((#("L" 0 1 (fontified t)) . -969)) nil (23156 10548 797420 300000) 0 nil]) ((#("i" 0 1 (fontified t)) . -970)) nil (23156 10548 797430 500000) 0 nil]) ((#("s" 0 1 (fontified t)) . -971)) nil (23156 10548 797441 100000) 0 nil]) ((#("t" 0 1 (fontified t)) . -972)) nil (23156 10548 797465 200000) 0 nil]) ((#("I" 0 1 (fontified t)) . -973)) nil (23156 10548 797475 800000) 0 nil]) ((#("t" 0 1 (fontified t)) . -974)) nil (23156 10548 797486 400000) 0 nil]) ((#("e" 0 1 (fontified t)) . -975)) nil (23156 10548 797497 300000) 0 nil]) ((#("m" 0 1 (fontified t)) . -976)) nil (23156 10548 797507 500000) 0 nil]) ((934 . 939)) nil (23156 10548 797516 900000) 0 nil]) ((#("_item" 0 5 (fontified t face font-lock-string-face)) . 934)) nil (23156 10548 797525 600000) 0 nil]) ((#("list" 0 4 (fontified t face font-lock-string-face)) . 934)) nil (23156 10548 797536 200000) 0 nil]) ((nil rear-nonsticky nil 996 . 997) (nil fontified nil 965 . 997) (nil fontified nil 961 . 965) (nil fontified nil 960 . 961) (nil fontified nil 954 . 960) (nil fontified nil 944 . 954) (nil fontified nil 933 . 944) (nil fontified nil 914 . 933) (nil fontified nil 912 . 914) (nil fontified nil 911 . 912) (nil fontified nil 907 . 911) (nil fontified nil 901 . 907) (901 . 997) (t 23156 10094 17411 300000)) nil (23156 10548 797570 200000) 0 nil]) ((#(" else if
    console.log(elem.context);" 0 1 (fontified t) 1 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 39 (fontified t)) . 906) (undo-tree-id1134 . -9) (undo-tree-id1135 . -9) (undo-tree-id1136 . -39) (undo-tree-id1137 . -39) 945) nil (23156 10093 827589 600000) 0 nil] [nil nil ((#(" else if
    console.log(elem.context);" 0 1 (fontified t) 1 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 39 (fontified t)) . 906) (undo-tree-id1130 . -9) (undo-tree-id1131 . -9) (undo-tree-id1132 . -39) (undo-tree-id1133 . -39) 945) ((906 . 945)) (23156 10090 776940 300000) 0 nil]) ((906 . 914) (t 23156 10079 136708 100000)) nil (23156 10090 777462 500000) 0 nil]) ((927 . 935) (t 23156 10075 666221 500000)) nil (23156 10078 922293 400000) 0 nil]) ((911 . 929)) nil (23156 10075 476900 600000) 0 nil]) ((906 . 911) (t 23156 9539 791329 500000)) nil (23156 10075 476962 600000) 0 nil]) ((2300 . 2395) (#(" type: \"ListItem\", children, raw, ...this.locAndRangeFrom(children)" 0 7 (fontified t) 7 17 (fontified t face font-lock-string-face) 17 37 (fontified t) 37 41 (fontified t face font-lock-constant-face) 41 43 (fontified t) 43 57 (fontified t) 57 67 (fontified t)) . 2300) (undo-tree-id1127 . -40) (undo-tree-id1128 . -42) (undo-tree-id1129 . -34) 1957 (t 23156 9536 287223 900000)) nil (23156 10075 477100 400000) 0 nil]) ((apply activate-cursor-for-undo 28) (#("n" 0 1 (rear-nonsticky t fontified t)) . 2357) (apply deactivate-cursor-after-undo 28) (apply activate-cursor-for-undo 29) (#("n" 0 1 (fontified t)) . 2680) (apply deactivate-cursor-after-undo 29) (#("n" 0 1 (rear-nonsticky t fontified t)) . 2022)) nil (23156 9536 104916 0) 0 nil]) ((apply activate-cursor-for-undo 28) (#("e" 0 1 (fontified t)) . 2358) (apply deactivate-cursor-after-undo 28) (apply activate-cursor-for-undo 29) (#("e" 0 1 (fontified t)) . 2682) (apply deactivate-cursor-after-undo 29) (#("e" 0 1 (fontified t)) . 2022)) nil (23156 9536 104948 400000) 0 nil]) ((apply activate-cursor-for-undo 28) (#("r" 0 1 (fontified t)) . 2359) (apply deactivate-cursor-after-undo 28) (apply activate-cursor-for-undo 29) (#("r" 0 1 (fontified t)) . 2684) (apply deactivate-cursor-after-undo 29) (#("r" 0 1 (fontified t)) . 2022)) nil (23156 9536 104966 600000) 0 nil]) ((apply activate-cursor-for-undo 28) (#("d" 0 1 (fontified t)) . 2360) (apply deactivate-cursor-after-undo 28) (apply activate-cursor-for-undo 29) (#("d" 0 1 (fontified t)) . 2686) (apply deactivate-cursor-after-undo 29) (#("d" 0 1 (fontified t)) . 2022)) nil (23156 9536 104982 0) 0 nil]) ((apply activate-cursor-for-undo 28) (#("l" 0 1 (fontified t)) . 2361) (apply deactivate-cursor-after-undo 28) (apply activate-cursor-for-undo 29) (#("l" 0 1 (fontified t)) . 2688) (apply deactivate-cursor-after-undo 29) (#("l" 0 1 (fontified t)) . 2022)) nil (23156 9536 104997 100000) 0 nil]) ((apply activate-cursor-for-undo 28) (#("i" 0 1 (fontified t)) . 2362) (apply deactivate-cursor-after-undo 28) (apply activate-cursor-for-undo 29) (#("i" 0 1 (fontified t)) . 2690) (apply deactivate-cursor-after-undo 29) (#("i" 0 1 (fontified t)) . 2022)) nil (23156 9536 105011 100000) 0 nil]) ((apply activate-cursor-for-undo 28) (#("h" 0 1 (fontified t)) . 2363) (apply deactivate-cursor-after-undo 28) (apply activate-cursor-for-undo 29) (#("h" 0 1 (fontified t)) . 2692) (apply deactivate-cursor-after-undo 29) (#("h" 0 1 (fontified t)) . 2022)) nil (23156 9536 105025 800000) 0 nil]) ((apply activate-cursor-for-undo 28) (#("C" 0 1 (fontified t)) . 2364) (apply deactivate-cursor-after-undo 28) (apply activate-cursor-for-undo 29) (#("C" 0 1 (fontified t)) . 2694) (apply deactivate-cursor-after-undo 29) (#("C" 0 1 (fontified t)) . 2022)) nil (23156 9536 105040 900000) 0 nil]) ((apply activate-cursor-for-undo 28) (2350 . 2351) (apply deactivate-cursor-after-undo 28) (apply activate-cursor-for-undo 29) (2679 . 2680) (apply deactivate-cursor-after-undo 29) (2007 . 2008)) nil (23156 9536 105054 900000) 0 nil]) ((apply activate-cursor-for-undo 28) (#("L" 0 1 (fontified t)) . 2349) (apply deactivate-cursor-after-undo 28) (apply activate-cursor-for-undo 29) (#("L" 0 1 (fontified t)) . 2679) (apply deactivate-cursor-after-undo 29) (#("L" 0 1 (fontified t)) . 2007)) nil (23156 9536 105069 300000) 0 nil]) ((apply activate-cursor-for-undo 28) (#("e" 0 1 (fontified t)) . 2350) (apply deactivate-cursor-after-undo 28) (apply activate-cursor-for-undo 29) (#("e" 0 1 (fontified t)) . 2681) (apply deactivate-cursor-after-undo 29) (#("e" 0 1 (fontified t)) . 2007)) nil (23156 9536 105084 700000) 0 nil]) ((apply activate-cursor-for-undo 28) (#("t" 0 1 (fontified t)) . 2351) (apply deactivate-cursor-after-undo 28) (apply activate-cursor-for-undo 29) (#("t" 0 1 (fontified t)) . 2683) (apply deactivate-cursor-after-undo 29) (#("t" 0 1 (fontified t)) . 2007)) nil (23156 9536 105099 500000) 0 nil]) ((apply activate-cursor-for-undo 28) (#("a" 0 1 (fontified t)) . 2352) (apply deactivate-cursor-after-undo 28) (apply activate-cursor-for-undo 29) (#("a" 0 1 (fontified t)) . 2685) (apply deactivate-cursor-after-undo 29) (#("a" 0 1 (fontified t)) . 2007)) nil (23156 9536 105114 900000) 0 nil]) ((apply activate-cursor-for-undo 28) (#("e" 0 1 (fontified t)) . 2353) (apply deactivate-cursor-after-undo 28) (apply activate-cursor-for-undo 29) (#("e" 0 1 (fontified t)) . 2687) (apply deactivate-cursor-after-undo 29) (#("e" 0 1 (fontified t)) . 2007)) nil (23156 9536 105184 0) 0 nil]) ((apply activate-cursor-for-undo 28) (#("r" 0 1 (fontified t)) . 2354) (apply deactivate-cursor-after-undo 28) (apply activate-cursor-for-undo 29) (#("r" 0 1 (fontified t)) . 2689) (apply deactivate-cursor-after-undo 29) (#("r" 0 1 (fontified t)) . 2007)) nil (23156 9536 105199 500000) 0 nil]) ((apply activate-cursor-for-undo 28) (#("c" 0 1 (fontified t)) . 2355) (apply deactivate-cursor-after-undo 28) (apply activate-cursor-for-undo 29) (#("c" 0 1 (fontified t)) . 2691) (apply deactivate-cursor-after-undo 29) (#("c" 0 1 (fontified t)) . 2007) (t 23156 9514 867865 900000)) nil (23156 9536 105222 200000) 0 nil]) ((#("    const loc = {
      start: children[0].loc.start,
      end: children[children.length - 1].loc.end
    };
    const range = this.locationToRange(loc);
" 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 13 (fontified t face font-lock-variable-name-face) 13 114 (fontified t) 114 119 (fontified t face font-lock-keyword-face) 119 120 (fontified t) 120 125 (fontified t face font-lock-variable-name-face) 125 128 (fontified t) 128 132 (fontified t face font-lock-constant-face) 132 155 (fontified t)) . 1957) (undo-tree-id1113 . -155) (undo-tree-id1114 . -155) (undo-tree-id1115 . -155) (undo-tree-id1116 . -110) (undo-tree-id1117 . -110) (undo-tree-id1118 . -18) (undo-tree-id1119 . -103) (undo-tree-id1120 . -103) (undo-tree-id1121 . -54) (undo-tree-id1122 . -54) (undo-tree-id1123 . -18) (undo-tree-id1124 . -18) (undo-tree-id1125 . -155)) nil (23156 9514 681628 700000) 0 nil]) ((nil rear-nonsticky nil 2200 . 2201) (nil fontified nil 2191 . 2201) (nil fontified nil 2190 . 2191) (nil fontified nil 2162 . 2190) (nil fontified nil 2161 . 2162) (nil fontified nil 2157 . 2161) (nil fontified nil 2154 . 2157) (2154 . 2201)) nil (23156 9514 681670 600000) 0 nil]) ((2152 . 2154)) nil (23156 9514 681687 600000) 0 nil]) ((#("l" 0 1 (fontified t)) . -2149)) nil (23156 9514 681698 200000) 0 nil]) ((#("o" 0 1 (fontified nil)) . -2150)) nil (23156 9514 681710 300000) 0 nil]) ((#("c" 0 1 (fontified t)) . -2151)) nil (23156 9514 681743 900000) 0 nil]) ((#("," 0 1 (fontified t)) . -2152)) nil (23156 9514 681758 600000) 0 nil]) ((#(" " 0 1 (fontified t)) . -2153)) nil (23156 9514 681768 800000) 0 nil]) ((#("r" 0 1 (fontified t)) . -2154)) nil (23156 9514 681780 100000) 0 nil]) ((#("a" 0 1 (fontified t)) . -2155)) nil (23156 9514 681808 800000) 0 nil]) ((#("n" 0 1 (fontified nil)) . -2156)) nil (23156 9514 681822 0) 0 nil]) ((#("g" 0 1 (fontified t)) . -2157)) nil (23156 9514 681833 700000) 0 nil]) ((#("e" 0 1 (fontified nil)) . -2158)) nil (23156 9514 681844 700000) 0 nil]) ((#("," 0 1 (fontified t)) . -2159)) nil (23156 9514 681856 400000) 0 nil]) ((#(" " 0 1 (fontified t)) . -2160)) nil (23156 9514 681869 600000) 0 nil]) ((2466 . 2469)) nil (23156 9514 681884 300000) 0 nil]) ((2505 . 2509)) nil (23156 9514 681908 500000) 0 nil]) ((#("r" 0 1 (fontified t)) . -2505)) nil (23156 9514 682165 900000) 0 nil]) ((#("e" 0 1 (fontified t)) . -2506)) nil (23156 9514 682184 800000) 0 nil]) ((2504 . 2507)) nil (23156 9514 682197 700000) 0 nil]) ((#("d" 0 1 (fontified t)) . -2504)) nil (23156 9514 682210 900000) 0 nil]) ((#("l" 0 1 (fontified t)) . -2505)) nil (23156 9514 682224 100000) 0 nil]) ((2501 . 2506)) nil (23156 9514 682238 100000) 0 nil]) ((2500 . 2502)) nil (23156 9514 682251 300000) 0 nil]) ((nil rear-nonsticky nil 2499 . 2500) (nil fontified nil 2471 . 2500) (2471 . 2500)) nil (23156 9514 682267 100000) 0 nil]) ((2469 . 2471)) nil (23156 9514 682279 600000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-constant-face)) . -2469) (undo-tree-id1126 . -1)) nil (23156 9514 682317 700000) 0 nil] [nil nil ((nil fontified t 2471 . 2475) (nil face font-lock-constant-face 2471 . 2475) (#("this" 0 4 (fontified t face font-lock-constant-face)) . -2466) (2470 . 2479) 2470) ((#("this_path" 0 5 (fontified nil) 5 9 (fontified nil face font-lock-constant-face)) . 2470) (undo-tree-id1112 . -9) (2466 . 2470) (nil face nil 2471 . 2475)) (23156 9486 850340 100000) 0 nil]) ((2464 . 2470)) nil (23156 9486 851180 600000) 0 nil]) ((#(" " 0 1 (fontified t)) . -2464)) nil (23156 9486 850373 800000) 0 nil]) ((2464 . 2465)) nil (23156 9486 850381 700000) 0 nil]) ((#("l" 0 1 (fontified t)) . -2461)) nil (23156 9486 850388 900000) 0 nil]) ((#("o" 0 1 (fontified t)) . -2462)) nil (23156 9486 850396 0) 0 nil]) ((#("c" 0 1 (fontified t)) . -2463)) nil (23156 9486 850402 800000) 0 nil]) ((#("," 0 1 (fontified t)) . -2464)) nil (23156 9486 850412 600000) 0 nil]) ((#(" " 0 1 (fontified t)) . -2465)) nil (23156 9486 850419 800000) 0 nil]) ((#("r" 0 1 (fontified t)) . -2466)) nil (23156 9486 850426 600000) 0 nil]) ((#("a" 0 1 (fontified t)) . -2467)) nil (23156 9486 850433 400000) 0 nil]) ((#("n" 0 1 (fontified t)) . -2468)) nil (23156 9486 850440 600000) 0 nil]) ((#("g" 0 1 (fontified t)) . -2469)) nil (23156 9486 850447 800000) 0 nil]) ((#("e" 0 1 (fontified t)) . -2470)) nil (23156 9486 850455 300000) 0 nil]) ((#("," 0 1 (fontified t)) . -2471)) nil (23156 9486 850462 100000) 0 nil]) ((#(" " 0 1 (fontified t)) . -2472)) nil (23156 9486 850482 500000) 0 nil] [nil nil ((#(" " 0 1 (fontified t)) . -2476)) ((2476 . 2477)) (23156 9480 715866 100000) 0 nil]) ((2993 . 2994)) nil (23156 9480 716574 500000) 0 nil]) ((2982 . 2983)) nil (23156 9480 715897 500000) 0 nil]) ((2993 . 2994)) nil (23156 9480 715904 600000) 0 nil]) ((2982 . 2992)) nil (23156 9480 715911 100000) 0 nil]) ((2981 . 2983)) nil (23156 9480 715917 500000) 0 nil]) ((#("chi" 0 3 (fontified t)) . 2981) (undo-tree-id1089 . -3)) nil (23156 9480 715945 800000) 0 nil]) ((2974 . 2984)) nil (23156 9480 715954 500000) 0 nil]) ((#("retrurn " 0 7 (fontified t) 7 8 (fontified t face (my-face-u-1))) . 2974) (undo-tree-id1090 . -8)) nil (23156 9480 715964 700000) 0 nil]) ((2974 . 2982)) nil (23156 9480 715973 0) 0 nil]) ((2969 . 2974)) nil (23156 9480 715978 700000) 0 nil]) ((#("    
" 0 4 (fontified t face (my-face-u-1)) 4 5 (fontified t)) . 2970) (undo-tree-id1091 . -5) (undo-tree-id1092 . -5) (undo-tree-id1093 . -5)) nil (23156 9480 716008 500000) 0 nil]) ((nil fontified nil 2969 . 2970) (nil fontified nil 2947 . 2969) (nil fontified nil 2943 . 2947) (nil fontified nil 2940 . 2943) (nil fontified nil 2935 . 2940) (nil fontified nil 2934 . 2935) (nil fontified nil 2929 . 2934) (nil fontified nil 2828 . 2929) (nil fontified nil 2825 . 2828) (nil fontified nil 2824 . 2825) (nil fontified nil 2819 . 2824) (nil fontified nil 2815 . 2819) (2815 . 2970)) nil (23156 9480 716031 100000) 0 nil]) ((2814 . 2819)) nil (23156 9480 716045 100000) 0 nil]) ((#("    const loc = {
      start: children[0].loc.start,
      end: children[children.length - 1].loc.end
    };
    const range = this.locationToRange(loc);
" 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 13 (fontified t face font-lock-variable-name-face) 13 114 (fontified t) 114 119 (fontified t face font-lock-keyword-face) 119 120 (fontified t) 120 125 (fontified t face font-lock-variable-name-face) 125 128 (fontified t) 128 132 (fontified t face font-lock-constant-face) 132 154 (fontified t) 154 155 (rear-nonsticky t fontified t)) . 2420) (undo-tree-id1094 . -155) (undo-tree-id1095 . -155) (undo-tree-id1096 . -155) (undo-tree-id1097 . -155) (undo-tree-id1098 . -155) (undo-tree-id1099 . -155) (undo-tree-id1100 . -18) (undo-tree-id1101 . -18) (undo-tree-id1102 . -54) (undo-tree-id1103 . -54) (undo-tree-id1104 . -103) (undo-tree-id1105 . -103) (undo-tree-id1106 . -110) (undo-tree-id1107 . -110) (undo-tree-id1108 . -155) (undo-tree-id1109 . -155) (undo-tree-id1110 . -155) (undo-tree-id1111 . -155) 2575) nil (23156 9480 716136 100000) 0 nil]) ((2969 . 2972)) nil (23156 9480 716161 800000) 0 nil]) ((2967 . 2970)) nil (23156 9480 716172 0) 0 nil]) ((2958 . 2966)) nil (23156 9480 716180 300000) 0 nil]) ((2948 . 2959)) nil (23156 9480 716187 800000) 0 nil]) ((2928 . 2948)) nil (23156 9480 716195 400000) 0 nil]) ((2926 . 2928) (#("  " 0 2 (fontified nil)) . 2925) (2925 . 2927) (2925 . 2926) (#("  " 0 2 (fontified t face (my-face-u-1))) . 2925) 2927) nil (23156 9480 716210 100000) 0 nil]) ((2924 . 2927) (t 23156 9398 968621 600000)) nil (23156 9480 716223 0) 0 nil]) ((#("  " 0 2 (fontified nil)) . 2172) (2172 . 2174) (2172 . 2173)) nil (23156 9398 813133 300000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2172) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (t 23156 9321 447747 300000)) nil (23156 9398 813187 300000) 0 nil]) ((#("    const loc = {

    }
" 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 13 (fontified t face font-lock-variable-name-face) 13 15 (fontified t) 15 18 (fontified t) 18 19 (fontified t) 19 24 (fontified t) 24 25 (fontified t)) . 2575) (undo-tree-id1030 . -25) (undo-tree-id1031 . -25) (undo-tree-id1032 . -18) (undo-tree-id1033 . -18) (undo-tree-id1034 . -19) (undo-tree-id1035 . -19) (undo-tree-id1036 . -25) (undo-tree-id1037 . -25) (undo-tree-id1038 . -25) (undo-tree-id1039 . -25) (undo-tree-id1040 . -25) (undo-tree-id1041 . -25) (undo-tree-id1042 . 7) (undo-tree-id1043 . 8) (undo-tree-id1044 . -25) (undo-tree-id1045 . -25) 2600) nil (23156 9321 290534 600000) 0 nil]) ((nil rear-nonsticky nil 2574 . 2575) (nil fontified nil 2552 . 2575) (nil fontified nil 2548 . 2552) (nil fontified nil 2545 . 2548) (nil fontified nil 2540 . 2545) (nil fontified nil 2539 . 2540) (nil fontified nil 2534 . 2539) (nil fontified nil 2433 . 2534) (nil fontified nil 2430 . 2433) (nil fontified nil 2429 . 2430) (nil fontified nil 2424 . 2429) (nil fontified nil 2420 . 2424) (2420 . 2575)) nil (23156 9321 290585 300000) 0 nil]) ((#("      start" 0 11 (fontified t)) . 2438) (undo-tree-id1046 . -11)) nil (23156 9321 290603 800000) 0 nil]) ((2444 . 2449)) nil (23156 9321 290612 800000) 0 nil]) ((2437 . 2444)) nil (23156 9321 290620 400000) 0 nil]) ((2437 . 2442)) nil (23156 9321 290627 200000) 0 nil]) ((2436 . 2438)) nil (23156 9321 290640 400000) 0 nil]) ((nil rear-nonsticky nil 2259 . 2260) (nil fontified nil 2232 . 2260) (nil fontified nil 2229 . 2232) (nil fontified nil 2227 . 2229) (nil fontified nil 2223 . 2227) (nil fontified nil 2220 . 2223) (nil fontified nil 2217 . 2220) (nil fontified nil 2216 . 2217) (nil fontified nil 2211 . 2216) (nil fontified nil 2207 . 2211) (2207 . 2260)) nil (23156 9321 290655 900000) 0 nil]) ((#("  
" 0 2 (fontified t face (my-face-u-1)) 2 3 (fontified t)) . 2173) (undo-tree-id1047 . -3) (undo-tree-id1048 . -3) (undo-tree-id1049 . -3)) nil (23156 9321 290683 100000) 0 nil]) ((2173 . 2175) (#("  " 0 2 (fontified nil)) . 2172) (2172 . 2174) (2172 . 2173)) nil (23156 9321 290699 700000) 0 nil]) ((2371 . 2383)) nil (23156 9321 290711 800000) 0 nil]) ((2366 . 2371)) nil (23156 9321 290720 800000) 0 nil]) ((#("
    const raw = elem.text;
    const loc = this.findLocation(raw.split(/\\n/), lineno);
    const range = this.locationToRange(loc);
    const children = [
      {
        type: \"Paragraph\",
        children: [{ type: \"Str\", value: raw, loc, range, raw }],
        loc,
        range,
        raw
      }
    ];
" 0 1 (fontified t) 1 5 (fontified t) 5 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t) 11 14 (fontified t face font-lock-variable-name-face) 14 28 (fontified t) 28 32 (fontified t) 32 37 (fontified t face font-lock-keyword-face) 37 38 (fontified t) 38 41 (fontified t face font-lock-variable-name-face) 41 44 (fontified t) 44 48 (fontified t face font-lock-constant-face) 48 72 (fontified t) 72 73 (fontified t face font-lock-string-face syntax-table #1#) 73 75 (fontified t face font-lock-string-face) 75 76 (fontified t face font-lock-string-face syntax-table #2#) 76 88 (fontified t) 88 92 (fontified t) 92 97 (fontified t face font-lock-keyword-face) 97 98 (fontified t) 98 103 (fontified t face font-lock-variable-name-face) 103 106 (fontified t) 106 110 (fontified t face font-lock-constant-face) 110 133 (fontified t) 133 137 (fontified t) 137 142 (fontified t face font-lock-keyword-face) 142 143 (fontified t) 143 151 (fontified t face font-lock-variable-name-face) 151 155 (fontified t) 155 156 (fontified t) 156 164 (fontified t) 164 178 (fontified t) 178 189 (fontified t face font-lock-string-face) 189 218 (fontified t) 218 223 (fontified t face font-lock-string-face) 223 312 (fontified t)) . 2367) (undo-tree-id1050 . -312) (undo-tree-id1051 . -305) (undo-tree-id1052 . -305) (undo-tree-id1053 . -312) (undo-tree-id1054 . -312) (undo-tree-id1055 . -156) (undo-tree-id1056 . -156) (undo-tree-id1057 . -164) (undo-tree-id1058 . -164) (undo-tree-id1059 . -191) (undo-tree-id1060 . -191) (undo-tree-id1061 . -257) (undo-tree-id1062 . -257) (undo-tree-id1063 . -270) (undo-tree-id1064 . -270) (undo-tree-id1065 . -285) (undo-tree-id1066 . -285) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -297) (undo-tree-id1070 . -297) (undo-tree-id1071 . -88) (undo-tree-id1072 . -88) (undo-tree-id1073 . -133) (undo-tree-id1074 . -133) (undo-tree-id1075 . -28) (undo-tree-id1076 . -28) (undo-tree-id1077 . -284) (undo-tree-id1078 . -133) (undo-tree-id1079 . -133) (undo-tree-id1080 . -28) (undo-tree-id1081 . -155) (undo-tree-id1082 . -312) (undo-tree-id1083 . -312)) nil (23156 9321 290872 200000) 0 nil]) ((2365 . 2366)) nil (23156 9321 290897 500000) 0 nil]) ((2352 . 2364)) nil (23156 9321 290907 300000) 0 nil]) ((2351 . 2353)) nil (23156 9321 290916 400000) 0 nil]) ((#("[" 0 1 (fontified t)) . -2351)) nil (23156 9321 290935 300000) 0 nil]) ((#("]" 0 1 (fontified t)) . -2352) (undo-tree-id1084 . 1) (undo-tree-id1085 . -1)) nil (23156 9321 290950 800000) 0 nil]) ((2340 . 2353)) nil (23156 9321 290959 100000) 0 nil]) ((2334 . 2340)) nil (23156 9321 290965 900000) 0 nil]) ((2330 . 2334)) nil (23156 9321 290972 300000) 0 nil]) ((#("    const loc" 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 13 (fontified t face font-lock-variable-name-face)) . 2330)) nil (23156 9321 290985 500000) 0 nil]) ((2334 . 2343)) nil (23156 9321 290993 100000) 0 nil]) ((2329 . 2334)) nil (23156 9321 290999 500000) 0 nil]) ((#("    " 0 4 (fontified nil)) . 2330) (2330 . 2334) (2330 . 2331)) nil (23156 9321 291012 300000) 0 nil]) ((2328 . 2329)) nil (23156 9321 291024 400000) 0 nil]) ((nil rear-nonsticky nil 2327 . 2328) (nil fontified nil 2285 . 2328) (nil fontified nil 2281 . 2285) (2281 . 2328)) nil (23156 9321 291046 300000) 0 nil]) ((2272 . 2281)) nil (23156 9321 291057 200000) 0 nil]) ((#("childre" 0 7 (fontified t face font-lock-variable-name-face)) . 2272)) nil (23156 9321 291063 200000) 0 nil] [nil nil ((#("
    const" 0 1 (fontified t) 1 5 (fontified t) 5 10 (fontified t face font-lock-keyword-face)) . 2279) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -10)) ((2279 . 2289)) (23156 9237 107392 100000) 0 nil]) ((2266 . 2279)) nil (23156 9237 108452 400000) 0 nil]) ((2261 . 2266)) nil (23156 9237 107426 100000) 0 nil]) ((#("]" 0 1 (fontified t)) . 2612)) nil (23156 9237 107434 0) 0 nil]) ((#(": [p" 0 4 (fontified t)) . 2612)) nil (23156 9237 107443 100000) 0 nil]) ((#(":" 0 1 (fontified t)) . -2629)) nil (23156 9237 107450 600000) 0 nil]) ((#(" " 0 1 (fontified t)) . -2630)) nil (23156 9237 107458 600000) 0 nil]) ((#("p" 0 1 (fontified t)) . -2631)) nil (23156 9237 107472 900000) 0 nil]) ((#("." 0 1 (fontified t)) . -2632)) nil (23156 9237 107480 100000) 0 nil]) ((2629 . 2633)) nil (23156 9237 107488 800000) 0 nil]) ((2615 . 2616)) nil (23156 9237 107495 600000) 0 nil]) ((2612 . 2616)) nil (23156 9237 107502 700000) 0 nil]) ((2260 . 2261)) nil (23156 9237 107509 500000) 0 nil]) ((2242 . 2259)) nil (23156 9237 107516 700000) 0 nil]) ((2241 . 2243)) nil (23156 9237 107523 500000) 0 nil]) ((2217 . 2221)) nil (23156 9237 107530 700000) 0 nil]) ((nil rear-nonsticky nil 2236 . 2237) (nil fontified nil 2222 . 2237) (nil fontified nil 2221 . 2222) (nil fontified nil 2217 . 2221) (2217 . 2237)) nil (23156 9237 107547 700000) 0 nil]) ((2211 . 2217)) nil (23156 9237 107556 0) 0 nil]) ((2206 . 2211)) nil (23156 9237 107563 200000) 0 nil]) ((#("this.createParagraph" 0 4 (fontified t face font-lock-constant-face) 4 5 (fontified t) 5 20 (fontified t)) . 2361) (undo-tree-id1025 . -20)) nil (23156 9237 107574 900000) 0 nil]) ((#("cre" 0 3 (fontified t)) . -2366) (2369 . 2384) 2369) nil (23156 9237 107585 100000) 0 nil]) ((2361 . 2369)) nil (23156 9237 107593 400000) 0 nil]) ((#("c" 0 1 (fontified t)) . -2361)) nil (23156 9237 107600 200000) 0 nil]) ((#("h" 0 1 (fontified t)) . -2362)) nil (23156 9237 107613 800000) 0 nil]) ((2361 . 2363)) nil (23156 9237 107621 700000) 0 nil]) ((2862 . 2863)) nil (23156 9237 107628 500000) 0 nil]) ((#("  " 0 2 (fontified t)) . -2861)) nil (23156 9237 107634 900000) 0 nil]) ((#("  " 0 2 (fontified t)) . -2853) 2853) nil (23156 9237 107643 600000) 0 nil]) ((#("  " 0 2 (fontified t)) . -2840) 2840) nil (23156 9237 107652 600000) 0 nil]) ((#("  " 0 2 (fontified t)) . -2829) 2829) nil (23156 9237 107660 600000) 0 nil]) ((#("  " 0 2 (fontified t)) . -2765) 2765) nil (23156 9237 107668 100000) 0 nil]) ((#("  " 0 2 (fontified t)) . -2740) 2734) nil (23156 9237 107679 800000) 0 nil]) ((2725 . 2732)) nil (23156 9237 107687 400000) 0 nil]) ((#("  " 0 2 (fontified t)) . -2725) 2721) nil (23156 9237 107694 900000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2721) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1)) nil (23156 9237 107714 600000) 0 nil]) ((#("    const children = [" 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 18 (fontified t face font-lock-variable-name-face) 18 22 (fontified t)) . 2721)) nil (23156 9237 107722 500000) 0 nil]) ((2604 . 2612)) nil (23156 9237 107729 700000) 0 nil]) ((#("    
" 0 4 (fontified t face (my-face-u-1)) 4 5 (fontified t)) . 2885) (undo-tree-id1028 . -5) (undo-tree-id1029 . -5)) nil (23156 9237 107750 900000) 0 nil]) ((nil rear-nonsticky nil 2884 . 2885) (nil fontified nil 2803 . 2885) (nil fontified nil 2798 . 2803) (nil fontified nil 2769 . 2798) (nil fontified nil 2758 . 2769) (nil fontified nil 2744 . 2758) (nil fontified nil 2736 . 2744) (nil fontified nil 2731 . 2736) (nil fontified nil 2723 . 2731) (nil fontified nil 2722 . 2723) (nil fontified nil 2717 . 2722) (nil fontified nil 2713 . 2717) (nil fontified nil 2690 . 2713) (nil fontified nil 2686 . 2690) (nil fontified nil 2683 . 2686) (nil fontified nil 2678 . 2683) (nil fontified nil 2677 . 2678) (nil fontified nil 2672 . 2677) (nil fontified nil 2668 . 2672) (nil fontified nil 2656 . 2668) (nil fontified nil 2655 . 2656) (nil fontified nil 2653 . 2655) (nil fontified nil 2652 . 2653) (nil fontified nil 2628 . 2652) (nil fontified nil 2624 . 2628) (nil fontified nil 2621 . 2624) (nil fontified nil 2618 . 2621) (nil fontified nil 2617 . 2618) (nil fontified nil 2612 . 2617) (nil fontified nil 2608 . 2612) (2608 . 2885)) nil (23156 9237 107781 500000) 0 nil]) ((2607 . 2612)) nil (23156 9237 107795 800000) 0 nil]) ((2601 . 2604)) nil (23156 9237 107803 0) 0 nil]) ((#("lines" 0 5 (fontified t)) . 2601)) nil (23156 9237 107809 400000) 0 nil]) ((2609 . 2612)) nil (23156 9237 107826 0) 0 nil]) ((2607 . 2610)) nil (23156 9237 107834 300000) 0 nil]) ((#("," 0 1 (fontified t)) . -2606)) nil (23156 9237 107844 500000) 0 nil]) ((#(" " 0 1 (fontified t)) . -2607)) nil (23156 9237 107852 100000) 0 nil]) ((#("," 0 1 (fontified t)) . 2608)) nil (23156 9237 107859 600000) 0 nil]) ((2601 . 2608)) nil (23156 9237 107867 500000) 0 nil]) ((#(" es" 0 3 (fontified t)) . 2601)) nil (23156 9237 107875 100000) 0 nil]) ((#("lin" 0 3 (fontified t)) . 2601)) nil (23156 9237 107882 600000) 0 nil]) ((2601 . 2608)) nil (23156 9237 107891 0) 0 nil]) ((#("row" 0 3 (fontified t)) . 2601)) nil (23156 9237 107898 100000) 0 nil]) ((2601 . 2604)) nil (23156 9237 107906 400000) 0 nil]) ((#("elem" 0 4 (fontified t)) . 2601)) nil (23156 9237 107917 800000) 0 nil]) ((#("," 0 1 (fontified t)) . -2605)) nil (23156 9237 107925 300000) 0 nil]) ((2601 . 2606)) nil (23156 9237 107933 200000) 0 nil]) ((2585 . 2602)) nil (23156 9237 107941 200000) 0 nil]) ((2583 . 2585)) nil (23156 9237 107948 300000) 0 nil]) ((#("  pr" 0 4 (fontified t)) . 2583)) nil (23156 9237 107955 900000) 0 nil]) ((2585 . 2587)) nil (23156 9237 107964 200000) 0 nil]) ((2583 . 2585) (#("  " 0 2 (fontified nil)) . 2582) (2582 . 2584) (2582 . 2583) (#("  " 0 2 (fontified t face (my-face-u-1))) . 2582) 2584) nil (23156 9237 107976 300000) 0 nil]) ((2581 . 2584) (t 23156 9112 828117 500000)) nil (23156 9237 107988 0) 0 nil]) ((#("
    const children = this.convertElementList(elem.$blocks(), lineno);
" 0 1 (fontified t) 1 5 (fontified t) 5 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t) 11 19 (fontified t face font-lock-variable-name-face) 19 22 (fontified t) 22 26 (fontified t face font-lock-constant-face) 26 70 (fontified t) 70 71 (fontified t rear-nonsticky t)) . 2339) (undo-tree-id1006 . -71) (undo-tree-id1007 . -71) (undo-tree-id1008 . -71) (undo-tree-id1009 . -71) (undo-tree-id1010 . -71) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . 71) (undo-tree-id1014 . -5) (undo-tree-id1015 . -71) (undo-tree-id1016 . -71)) nil (23156 9112 643887 200000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2410) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1)) nil (23156 9112 643938 900000) 0 nil]) ((#("    " 0 4 (fontified nil)) . 2339) (2339 . 2343) (2339 . 2340)) nil (23156 9112 643959 300000) 0 nil]) ((#("    " 0 4 (fontified t)) . -2343) 2339) nil (23156 9112 643972 900000) 0 nil]) ((nil rear-nonsticky nil 2412 . 2413) (nil fontified nil 2368 . 2413) (nil fontified nil 2364 . 2368) (nil fontified nil 2361 . 2364) (nil fontified nil 2353 . 2361) (nil fontified nil 2352 . 2353) (nil fontified nil 2347 . 2352) (nil fontified nil 2343 . 2347) (2343 . 2413)) nil (23156 9112 643992 900000) 0 nil]) ((2338 . 2343) (t 23156 8511 874663 900000)) nil (23156 9112 644007 300000) 0 nil]) ((750 . 755)) nil (23156 8511 675951 300000) 0 nil]) ((744 . 751)) nil (23156 8511 675980 0) 0 nil]) ((nil rear-nonsticky nil 743 . 744) (nil fontified nil 732 . 744) (732 . 744)) nil (23156 8511 675997 300000) 0 nil]) ((728 . 732) (t 23156 8180 876771 300000)) nil (23156 8511 676010 200000) 0 nil]) ((394 . 3897) (#(" min: 1, max: this.lines.length, update: true });
  }

  convertElement(elem, lineno) {
    if (elem.context === \"document\") {
      return this.convertDocument(elem, lineno);
    } else if (elem.context === \"paragraph\") {
      return this.convertParagraph(elem, lineno);
    } else if (elem.context === \"ulist\") {
      return this.convertList(elem, lineno);
    } else if (elem.context === \"list_item\") {
      return this.convertListItem(elem, lineno);
    }
  }

  convertDocument(elem, lineno) {
    const raw = elem.$source();
    const children = this.convertElementList(elem.$blocks(), lineno);
    if (children.length === 0) { return null; }
    const loc = { start: children[0].loc.start, end: children[children.length - 1].loc.end };
    const range = this.locationToRange(loc);
    return { type: \"Document\", children, loc, range, raw };
  }

  convertParagraph(elem, { min, max }) {
    const raw = elem.$source();
    const loc = this.findLocation(elem.$lines(), { min, max });
    if (!loc) {
      return null;
    }
    const range = this.locationToRange(loc);
    return {
      type: \"Paragraph\",
      children: [{ type: \"Str\", value: raw, loc, range, raw }],
      loc,
      range,
      raw,
    };
  }

  convertList(elem, { min, max }) {
    const raw = null; // TODO: fix asciidoc/asciidoc
    const children = this.convertElementList(elem.$blocks(), { min, max, update: false });
    if (children.length === 0) { return null; }
    const loc = { start: children[0].loc.start, end: children[children.length - 1].loc.end };
    const range = this.locationToRange(loc);
    return { type: \"List\", children, loc, range, raw };
  }

  convertListItem(elem, lineno) {
    const raw = elem.text;
    const loc = this.findLocation(raw.split(/\\n/), lineno);
    const range = this.locationToRange(loc);
    const children = [{
      type: \"Paragraph\",
      children: [{ type: \"Str\", value: raw, loc, range, raw }],
      loc,
      range,
      raw,
    }]
    return { type: \"ListItem\", children, loc, range, raw };
  }

  positionToIndex({ line, column }) {
    return this.chars[line - 1] + column;
  }

  locationToRange({ start, end }) {
    return [this.positionToIndex(start), this.positionToIndex(end)];
  }

  convertElementList(elements, { min, max, update }) {
    const children = [];
    for (let i = 0; i < elements.length; i++) {
      let next = { min, max, update };
      if (update) {
        next.min = elements[i].$lineno();
        if (i + 1 < elements.length) {
          next.max = elements[i + 1].$lineno();
        }
      }
      const child = this.convertElement(elements[i], next);
      if (child) {
        children.push(child);
      }
    }
    return children;
  }

  findLocation(lines, { min, max }) {
    for (let i = min; i + lines.length - 1 <= max; i++) {
      let found = true;
      for (let j = 0; j < lines.length; j++) {
        if (this.lines[i + j - 1].indexOf(lines[j]) === -1) {
          found = false;
          break;
        }
      }
      if (!found) {
        continue;
      }

      const lastLine = lines[lines.length - 1];
      const endLineNo = i + lines.length - 1;
      const endColumn = this.lines[endLineNo - 1].indexOf(lastLine) + lastLine.length
      return {
        start: { line: i, column: this.lines[i - 1].indexOf(lines[0]) },
        end: { line: endLineNo, column: endColumn }," 0 14 (fontified t) 14 18 (fontified t face font-lock-constant-face) 18 41 (fontified t) 41 45 (fontified t face font-lock-constant-face) 45 46 (fontified t) 46 47 (fontified t) 47 49 (fontified t) 49 50 (fontified t) 50 54 (fontified t) 54 55 (rear-nonsticky t fontified t) 55 57 (fontified t) 57 88 (fontified t) 88 90 (fontified t) 90 92 (fontified t) 92 94 (fontified t face font-lock-keyword-face) 94 113 (fontified t) 113 123 (fontified t face font-lock-string-face) 123 127 (fontified t) 127 129 (fontified t) 129 133 (fontified t) 133 139 (fontified t face font-lock-keyword-face) 139 140 (fontified t) 140 144 (fontified t face font-lock-constant-face) 144 176 (fontified t) 176 178 (fontified t) 178 180 (fontified t) 180 182 (fontified t) 182 186 (fontified t face font-lock-keyword-face) 186 187 (fontified t) 187 189 (fontified t face font-lock-keyword-face) 189 208 (fontified t) 208 219 (fontified t face font-lock-string-face) 219 223 (fontified t) 223 225 (fontified t) 225 227 (fontified t) 227 229 (fontified t) 229 235 (fontified t face font-lock-keyword-face) 235 236 (fontified t) 236 240 (fontified t face font-lock-constant-face) 240 273 (fontified t) 273 275 (fontified t) 275 277 (fontified t) 277 279 (fontified t) 279 283 (fontified t face font-lock-keyword-face) 283 284 (fontified t) 284 286 (fontified t face font-lock-keyword-face) 286 305 (fontified t) 305 312 (fontified t face font-lock-string-face) 312 315 (fontified t) 315 316 (rear-nonsticky t fontified t) 316 318 (fontified t) 318 320 (fontified t) 320 322 (fontified t) 322 328 (fontified t face font-lock-keyword-face) 328 329 (fontified t) 329 333 (fontified t face font-lock-constant-face) 333 360 (fontified t) 360 361 (rear-nonsticky t fontified t) 361 363 (fontified t) 363 365 (fontified t) 365 367 (fontified t) 367 371 (fontified t face font-lock-keyword-face) 371 372 (fontified t) 372 374 (fontified t face font-lock-keyword-face) 374 393 (fontified t) 393 404 (fontified t face font-lock-string-face) 404 407 (fontified t) 407 408 (rear-nonsticky t fontified t) 408 410 (fontified t) 410 412 (fontified t) 412 414 (fontified t) 414 420 (fontified t face font-lock-keyword-face) 420 421 (fontified t) 421 425 (fontified t face font-lock-constant-face) 425 448 (fontified t) 448 453 (fontified t) 453 454 (fontified t rear-nonsticky t) 454 456 (fontified t) 456 457 (rear-nonsticky t fontified t) 457 459 (fontified t) 459 461 (fontified t) 461 463 (fontified t) 463 465 (fontified t) 465 467 (fontified t) 467 468 (fontified t) 468 470 (fontified t) 470 502 (fontified t) 502 504 (fontified t) 504 506 (fontified t) 506 511 (fontified t face font-lock-keyword-face) 511 512 (fontified t) 512 515 (fontified t face font-lock-variable-name-face) 515 534 (fontified t) 534 536 (fontified t) 536 538 (fontified t) 538 543 (fontified t face font-lock-keyword-face) 543 544 (fontified t) 544 552 (fontified t face font-lock-variable-name-face) 552 555 (fontified t) 555 559 (fontified t face font-lock-constant-face) 559 560 (fontified t) 560 583 (fontified t) 583 595 (fontified t) 595 600 (fontified t) 600 601 (rear-nonsticky t fontified t) 601 602 (fontified t) 602 604 (fontified t) 604 608 (fontified t) 608 610 (fontified t face font-lock-keyword-face) 610 634 (fontified t) 634 637 (fontified t) 637 643 (fontified t face font-lock-keyword-face) 643 644 (fontified t) 644 648 (fontified t face font-lock-constant-face) 648 650 (fontified t) 650 651 (fontified t) 651 652 (fontified t rear-nonsticky t) 652 656 (fontified t) 656 661 (fontified t face font-lock-keyword-face) 661 662 (fontified t) 662 665 (fontified t face font-lock-variable-name-face) 665 667 (fontified t) 667 677 (fontified t) 677 697 (fontified t) 697 698 (rear-nonsticky t fontified t) 698 705 (fontified t) 705 742 (fontified t) 742 746 (fontified t) 746 750 (fontified t) 750 755 (fontified t face font-lock-keyword-face) 755 756 (fontified t) 756 761 (fontified t face font-lock-variable-name-face) 761 763 (fontified t) 763 764 (fontified t) 764 768 (fontified t face font-lock-constant-face) 768 769 (fontified t) 769 790 (fontified t) 790 791 (fontified t) 791 793 (fontified t) 793 795 (fontified t) 795 801 (fontified t face font-lock-keyword-face) 801 803 (fontified t) 803 804 (fontified t) 804 810 (fontified t) 810 820 (fontified t face font-lock-string-face) 820 821 (fontified t) 821 822 (fontified t) 822 831 (fontified t) 831 832 (fontified t) 832 836 (fontified t) 836 837 (fontified t) 837 843 (fontified t) 843 844 (fontified t) 844 847 (fontified t) 847 848 (fontified t) 848 851 (fontified t) 851 853 (fontified t) 853 855 (fontified t) 855 856 (fontified t) 856 858 (fontified t) 858 897 (fontified t) 897 899 (fontified t) 899 901 (fontified t) 901 906 (fontified t face font-lock-keyword-face) 906 907 (fontified t) 907 910 (fontified t face font-lock-variable-name-face) 910 929 (fontified t) 929 933 (fontified t) 933 938 (fontified t face font-lock-keyword-face) 938 939 (fontified t) 939 942 (fontified t face font-lock-variable-name-face) 942 944 (fontified t) 944 945 (fontified t) 945 949 (fontified t face font-lock-constant-face) 949 950 (fontified t) 950 993 (fontified t) 993 997 (fontified t) 997 999 (fontified t face font-lock-keyword-face) 999 1006 (fontified t) 1006 1009 (fontified t) 1009 1015 (fontified t) 1015 1021 (fontified t face font-lock-keyword-face) 1021 1022 (fontified t) 1022 1026 (fontified t face font-lock-constant-face) 1026 1028 (fontified t) 1028 1032 (fontified t) 1032 1033 (fontified t) 1033 1034 (fontified t) 1034 1038 (fontified t) 1038 1043 (fontified t face font-lock-keyword-face) 1043 1044 (fontified t) 1044 1049 (fontified t face font-lock-variable-name-face) 1049 1051 (fontified t) 1051 1052 (fontified t) 1052 1056 (fontified t face font-lock-constant-face) 1056 1057 (fontified t) 1057 1078 (fontified t) 1078 1079 (rear-nonsticky t fontified t) 1079 1081 (fontified t) 1081 1083 (fontified t) 1083 1089 (fontified t face font-lock-keyword-face) 1089 1092 (fontified t) 1092 1094 (fontified t) 1094 1096 (fontified t) 1096 1098 (fontified t) 1098 1104 (fontified t) 1104 1115 (fontified t face font-lock-string-face) 1115 1117 (fontified t) 1117 1119 (fontified t) 1119 1121 (fontified t) 1121 1123 (fontified t) 1123 1134 (fontified t) 1134 1135 (fontified t) 1135 1136 (fontified t) 1136 1142 (fontified t) 1142 1147 (fontified t face font-lock-string-face) 1147 1148 (fontified t) 1148 1149 (fontified t) 1149 1161 (fontified t) 1161 1165 (fontified t) 1165 1166 (fontified t) 1166 1172 (fontified t) 1172 1173 (fontified t) 1173 1177 (fontified t) 1177 1178 (fontified t) 1178 1181 (fontified t) 1181 1183 (fontified t) 1183 1185 (fontified t) 1185 1187 (fontified t) 1187 1192 (fontified t) 1192 1194 (fontified t) 1194 1196 (fontified t) 1196 1198 (fontified t) 1198 1204 (fontified t) 1204 1205 (fontified t) 1205 1207 (fontified t) 1207 1209 (fontified t) 1209 1211 (fontified t) 1211 1215 (fontified t) 1215 1216 (fontified t) 1216 1218 (fontified t) 1218 1220 (fontified t) 1220 1222 (fontified t) 1222 1223 (fontified t) 1223 1225 (fontified t) 1225 1227 (fontified t) 1227 1228 (fontified t) 1228 1261 (fontified t) 1261 1264 (fontified t) 1264 1268 (fontified t) 1268 1273 (fontified t face font-lock-keyword-face) 1273 1274 (fontified t) 1274 1277 (fontified t face font-lock-variable-name-face) 1277 1279 (fontified t) 1279 1280 (fontified t) 1280 1284 (fontified t face font-lock-constant-face) 1284 1285 (fontified t) 1285 1286 (fontified t) 1286 1287 (fontified t face font-lock-comment-delimiter-face) 1287 1288 (fontified t face font-lock-comment-delimiter-face) 1288 1289 (fontified t face font-lock-comment-delimiter-face) 1289 1294 (fontified t face font-lock-comment-face) 1294 1298 (fontified t face font-lock-comment-face) 1298 1299 (fontified t face font-lock-comment-face) 1299 1307 (fontified t face font-lock-comment-face) 1307 1308 (rear-nonsticky t fontified t face font-lock-comment-face) 1308 1316 (fontified t face font-lock-comment-face) 1316 1317 (fontified t face font-lock-comment-face) 1317 1321 (fontified t) 1321 1326 (fontified t face font-lock-keyword-face) 1326 1327 (fontified t) 1327 1335 (fontified t face font-lock-variable-name-face) 1335 1337 (fontified t) 1337 1338 (fontified t) 1338 1342 (fontified t face font-lock-constant-face) 1342 1343 (fontified t) 1343 1366 (fontified t) 1366 1398 (fontified t) 1398 1403 (fontified t face font-lock-constant-face) 1403 1404 (fontified t) 1404 1405 (fontified t) 1405 1406 (fontified t) 1406 1408 (fontified t) 1408 1412 (fontified t) 1412 1414 (fontified t face font-lock-keyword-face) 1414 1438 (fontified t) 1438 1441 (fontified t) 1441 1447 (fontified t face font-lock-keyword-face) 1447 1448 (fontified t) 1448 1452 (fontified t face font-lock-constant-face) 1452 1454 (fontified t) 1454 1455 (fontified t) 1455 1456 (fontified t) 1456 1460 (fontified t) 1460 1465 (fontified t face font-lock-keyword-face) 1465 1466 (fontified t) 1466 1469 (fontified t face font-lock-variable-name-face) 1469 1471 (fontified t) 1471 1481 (fontified t) 1481 1501 (fontified t) 1501 1502 (rear-nonsticky t fontified t) 1502 1509 (fontified t) 1509 1546 (fontified t) 1546 1550 (fontified t) 1550 1554 (fontified t) 1554 1559 (fontified t face font-lock-keyword-face) 1559 1560 (fontified t) 1560 1565 (fontified t face font-lock-variable-name-face) 1565 1567 (fontified t) 1567 1568 (fontified t) 1568 1572 (fontified t face font-lock-constant-face) 1572 1573 (fontified t) 1573 1594 (fontified t) 1594 1595 (fontified t) 1595 1597 (fontified t) 1597 1599 (fontified t) 1599 1605 (fontified t face font-lock-keyword-face) 1605 1607 (fontified t) 1607 1608 (fontified t) 1608 1614 (fontified t) 1614 1620 (fontified t face font-lock-string-face) 1620 1621 (fontified t) 1621 1622 (fontified t) 1622 1631 (fontified t) 1631 1632 (fontified t) 1632 1636 (fontified t) 1636 1637 (fontified t) 1637 1643 (fontified t) 1643 1644 (fontified t) 1644 1647 (fontified t) 1647 1648 (fontified t) 1648 1650 (fontified t) 1650 1651 (rear-nonsticky t fontified t) 1651 1655 (fontified t) 1655 1656 (fontified t) 1656 1658 (fontified t) 1658 1687 (fontified t) 1687 1690 (fontified t) 1690 1694 (fontified t) 1694 1699 (fontified t face font-lock-keyword-face) 1699 1700 (fontified t) 1700 1703 (fontified t face font-lock-variable-name-face) 1703 1705 (fontified t) 1705 1717 (fontified t) 1717 1721 (fontified t) 1721 1726 (fontified t face font-lock-keyword-face) 1726 1727 (fontified t) 1727 1730 (fontified t face font-lock-variable-name-face) 1730 1732 (fontified t) 1732 1733 (fontified t) 1733 1737 (fontified t face font-lock-constant-face) 1737 1738 (fontified t) 1738 1761 (fontified t) 1761 1762 (fontified t syntax-table #1# face font-lock-string-face) 1762 1764 (fontified t face font-lock-string-face) 1764 1765 (fontified t syntax-table #2# face font-lock-string-face) 1765 1777 (fontified t) 1777 1781 (fontified t) 1781 1786 (fontified t face font-lock-keyword-face) 1786 1787 (fontified t) 1787 1792 (fontified t face font-lock-variable-name-face) 1792 1794 (fontified t) 1794 1795 (fontified t) 1795 1799 (fontified t face font-lock-constant-face) 1799 1800 (fontified t) 1800 1822 (fontified t) 1822 1826 (fontified t) 1826 1831 (fontified t face font-lock-keyword-face) 1831 1832 (fontified t) 1832 1840 (fontified t face font-lock-variable-name-face) 1840 1842 (fontified t) 1842 1844 (fontified t) 1844 1846 (fontified t) 1846 1848 (fontified t) 1848 1850 (fontified t) 1850 1852 (fontified t) 1852 1858 (fontified t) 1858 1869 (fontified t face font-lock-string-face) 1869 1871 (fontified t) 1871 1873 (fontified t) 1873 1875 (fontified t) 1875 1877 (fontified t) 1877 1888 (fontified t) 1888 1889 (fontified t) 1889 1890 (fontified t) 1890 1896 (fontified t) 1896 1901 (fontified t face font-lock-string-face) 1901 1902 (fontified t) 1902 1903 (fontified t) 1903 1915 (fontified t) 1915 1919 (fontified t) 1919 1920 (fontified t) 1920 1926 (fontified t) 1926 1927 (fontified t) 1927 1931 (fontified t) 1931 1932 (fontified t) 1932 1935 (fontified t) 1935 1937 (fontified t) 1937 1939 (fontified t) 1939 1941 (fontified t) 1941 1946 (fontified t) 1946 1948 (fontified t) 1948 1950 (fontified t) 1950 1952 (fontified t) 1952 1958 (fontified t) 1958 1959 (fontified t) 1959 1961 (fontified t) 1961 1963 (fontified t) 1963 1965 (fontified t) 1965 1969 (fontified t) 1969 1970 (rear-nonsticky t fontified t) 1970 1975 (fontified t) 1975 1976 (fontified t) 1976 1977 (fontified t) 1977 1979 (fontified t) 1979 1981 (fontified t) 1981 1987 (fontified t face font-lock-keyword-face) 1987 1989 (fontified t) 1989 1990 (fontified t) 1990 1996 (fontified t) 1996 2006 (fontified t face font-lock-string-face) 2006 2007 (fontified t) 2007 2008 (fontified t) 2008 2016 (fontified t) 2016 2017 (fontified t) 2017 2023 (fontified t) 2023 2029 (fontified t) 2029 2030 (fontified t) 2030 2033 (fontified t) 2033 2034 (fontified t) 2034 2036 (fontified t) 2036 2037 (rear-nonsticky t fontified t) 2037 2040 (fontified t) 2040 2041 (rear-nonsticky t fontified t) 2041 2042 (fontified t) 2042 2077 (fontified t) 2077 2080 (fontified t) 2080 2084 (fontified t) 2084 2090 (fontified t face font-lock-keyword-face) 2090 2091 (fontified t) 2091 2095 (fontified t face font-lock-constant-face) 2095 2096 (fontified t) 2096 2121 (fontified t) 2121 2122 (fontified t) 2122 2126 (fontified t) 2126 2127 (fontified t) 2127 2160 (fontified t) 2160 2163 (fontified t) 2163 2167 (fontified t) 2167 2173 (fontified t face font-lock-keyword-face) 2173 2175 (fontified t) 2175 2179 (fontified t face font-lock-constant-face) 2179 2180 (fontified t) 2180 2204 (fontified t) 2204 2208 (fontified t face font-lock-constant-face) 2208 2209 (fontified t) 2209 2229 (fontified t) 2229 2231 (fontified t) 2231 2232 (fontified t) 2232 2236 (fontified t) 2236 2237 (fontified t) 2237 2289 (fontified t) 2289 2292 (fontified t) 2292 2296 (fontified t) 2296 2301 (fontified t face font-lock-keyword-face) 2301 2302 (fontified t) 2302 2310 (fontified t face font-lock-variable-name-face) 2310 2312 (fontified t) 2312 2317 (fontified t) 2317 2319 (fontified t) 2319 2321 (fontified t) 2321 2324 (fontified t face font-lock-keyword-face) 2324 2326 (fontified t) 2326 2329 (fontified t face font-lock-keyword-face) 2329 2330 (fontified t) 2330 2331 (fontified t face font-lock-variable-name-face) 2331 2365 (fontified t) 2365 2371 (fontified t) 2371 2374 (fontified t face font-lock-keyword-face) 2374 2375 (fontified t) 2375 2379 (fontified t face font-lock-variable-name-face) 2379 2381 (fontified t) 2381 2403 (fontified t) 2403 2404 (fontified t) 2404 2410 (fontified t) 2410 2412 (fontified t face font-lock-keyword-face) 2412 2421 (fontified t) 2421 2424 (fontified t) 2424 2440 (fontified t) 2440 2442 (fontified t) 2442 2443 (fontified t) 2443 2463 (fontified t) 2463 2464 (rear-nonsticky t fontified t) 2464 2466 (fontified t) 2466 2474 (fontified t) 2474 2476 (fontified t face font-lock-keyword-face) 2476 2502 (fontified t) 2502 2505 (fontified t) 2505 2523 (fontified t) 2523 2525 (fontified t) 2525 2526 (fontified t) 2526 2533 (fontified t) 2533 2534 (rear-nonsticky t fontified t) 2534 2552 (fontified t) 2552 2553 (fontified t) 2577 2582 (face font-lock-keyword-face) 2583 2588 (face font-lock-variable-name-face) 2591 2595 (face font-lock-constant-face) 2637 2639 (face font-lock-keyword-face) 2680 2687 (fontified t) 2687 2688 (fontified t) 2688 2690 (fontified t) 2690 2692 (fontified t) 2692 2694 (fontified t) 2694 2698 (fontified t) 2698 2704 (fontified t face font-lock-keyword-face) 2704 2714 (fontified t) 2714 2715 (fontified t) 2715 2719 (fontified t) 2719 2720 (fontified t) 2720 2753 (fontified t) 2753 2755 (fontified t) 2755 2758 (fontified t) 2758 2762 (fontified t) 2762 2765 (fontified t face font-lock-keyword-face) 2765 2767 (fontified t) 2767 2770 (fontified t face font-lock-keyword-face) 2770 2771 (fontified t) 2771 2772 (fontified t face font-lock-variable-name-face) 2772 2812 (fontified t) 2812 2813 (fontified t) 2813 2816 (fontified t) 2816 2822 (fontified t) 2822 2825 (fontified t face font-lock-keyword-face) 2825 2826 (fontified t) 2826 2831 (fontified t face font-lock-variable-name-face) 2831 2833 (fontified t) 2833 2834 (fontified t) 2834 2838 (fontified t face font-lock-constant-face) 2838 2840 (fontified t) 2840 2846 (fontified t) 2846 2849 (fontified t face font-lock-keyword-face) 2849 2851 (fontified t) 2851 2854 (fontified t face font-lock-keyword-face) 2854 2855 (fontified t) 2855 2856 (fontified t face font-lock-variable-name-face) 2856 2883 (fontified t) 2883 2884 (fontified t) 2884 2887 (fontified t) 2887 2895 (fontified t) 2895 2897 (fontified t face font-lock-keyword-face) 2897 2899 (fontified t) 2899 2903 (fontified t face font-lock-constant-face) 2903 2937 (fontified t) 2937 2938 (rear-nonsticky t fontified t) 2938 2945 (fontified t) 2945 2946 (fontified t) 2946 2949 (fontified t) 2949 2964 (fontified t) 2964 2966 (fontified t) 2966 2967 (fontified t) 2967 2972 (fontified t face font-lock-constant-face) 2972 2973 (fontified t) 2973 2974 (fontified t) 2974 2984 (fontified t) 2984 2989 (fontified t face font-lock-keyword-face) 2989 2990 (fontified t) 2990 2991 (fontified t) 2991 3001 (fontified t) 3001 3009 (fontified t) 3009 3015 (fontified t) 3015 3017 (fontified t face font-lock-keyword-face) 3017 3020 (fontified t) 3020 3026 (fontified t) 3026 3029 (fontified t) 3029 3037 (fontified t) 3037 3045 (fontified t face font-lock-keyword-face) 3045 3046 (fontified t) 3046 3047 (fontified t) 3047 3054 (fontified t) 3054 3055 (fontified t) 3055 3056 (fontified t) 3056 3062 (fontified t) 3062 3067 (fontified t face font-lock-keyword-face) 3067 3068 (fontified t) 3068 3076 (fontified t face font-lock-variable-name-face) 3076 3078 (fontified t) 3078 3079 (fontified t) 3079 3101 (fontified t) 3101 3102 (rear-nonsticky t fontified t) 3102 3103 (fontified t) 3103 3104 (fontified t) 3104 3110 (fontified t) 3110 3115 (fontified t face font-lock-keyword-face) 3115 3116 (fontified t) 3116 3125 (fontified t face font-lock-variable-name-face) 3125 3127 (fontified t) 3127 3128 (fontified t) 3128 3143 (fontified t) 3143 3144 (rear-nonsticky t fontified t) 3144 3148 (fontified t) 3148 3149 (fontified t) 3149 3150 (fontified t) 3150 3156 (fontified t) 3156 3161 (fontified t face font-lock-keyword-face) 3161 3162 (fontified t) 3162 3171 (fontified t face font-lock-variable-name-face) 3171 3173 (fontified t) 3173 3174 (fontified t) 3174 3178 (fontified t face font-lock-constant-face) 3178 3194 (fontified t) 3194 3198 (fontified t) 3198 3200 (fontified t) 3200 3208 (fontified t) 3208 3216 (fontified t) 3216 3220 (fontified t) 3220 3227 (fontified t) 3227 3228 (rear-nonsticky t fontified t) 3228 3234 (fontified t) 3234 3235 (rear-nonsticky t fontified t) 3235 3236 (fontified t) 3236 3242 (fontified t) 3242 3248 (fontified t face font-lock-keyword-face) 3248 3251 (fontified t) 3251 3265 (fontified t) 3265 3267 (fontified t) 3267 3276 (fontified t) 3276 3285 (fontified t) 3285 3289 (fontified t face font-lock-constant-face) 3289 3321 (fontified t) 3321 3323 (fontified t) 3323 3324 (fontified t) 3324 3336 (fontified t) 3336 3338 (fontified t) 3338 3355 (fontified t) 3355 3363 (fontified t) 3363 3364 (fontified t) 3364 3373 (fontified t) 3373 3374 (fontified t) 3374 3376 (fontified t)) . 394) (undo-tree-id917 . -113) (undo-tree-id918 . 2161) (undo-tree-id919 . -113) (undo-tree-id920 . -113) (undo-tree-id921 . -856) (undo-tree-id922 . -1028) (undo-tree-id923 . -1550) (undo-tree-id924 . -54) (undo-tree-id925 . -54) (undo-tree-id926 . -316) (undo-tree-id927 . -604) (undo-tree-id928 . -604) (undo-tree-id929 . -534) (undo-tree-id930 . -534) (undo-tree-id931 . -502) (undo-tree-id932 . -502) (undo-tree-id933 . -468) (undo-tree-id934 . -468) (undo-tree-id935 . -463) (undo-tree-id936 . -463) (undo-tree-id937 . -467) (undo-tree-id938 . -467) (undo-tree-id939 . -1308) (undo-tree-id940 . -929) (undo-tree-id941 . -1717) (undo-tree-id942 . -2037) (undo-tree-id943 . -1768) (undo-tree-id944 . -1550) (undo-tree-id945 . -1777) (undo-tree-id946 . -1181) (undo-tree-id947 . -1092) (undo-tree-id948 . -1846) (undo-tree-id949 . -1844) (undo-tree-id950 . -1822) (undo-tree-id951 . -652) (undo-tree-id952 . -652) (undo-tree-id953 . -457) (undo-tree-id954 . -457) (undo-tree-id955 . -361) (undo-tree-id956 . -361) (undo-tree-id957 . -316) (undo-tree-id958 . -316) (undo-tree-id959 . -273) (undo-tree-id960 . -273) (undo-tree-id961 . -223) (undo-tree-id962 . -223) (undo-tree-id963 . -176) (undo-tree-id964 . -176) (undo-tree-id965 . -127) (undo-tree-id966 . -127) (undo-tree-id967 . -88) (undo-tree-id968 . -88) (undo-tree-id969 . -55) (undo-tree-id970 . -55) (undo-tree-id971 . -54) (undo-tree-id972 . -54) (undo-tree-id973 . -50) (undo-tree-id974 . -50) (undo-tree-id975 . -408) (undo-tree-id976 . -408) (undo-tree-id977 . -1977) (undo-tree-id978 . -1408) (undo-tree-id979 . -1408) (undo-tree-id980 . -604) (undo-tree-id981 . -746) (undo-tree-id982 . -746) (undo-tree-id983 . -791) (undo-tree-id984 . -791) (undo-tree-id985 . -851) (undo-tree-id986 . -851) (undo-tree-id987 . -855) (undo-tree-id988 . -855) (undo-tree-id989 . -856) (undo-tree-id990 . -856) (undo-tree-id991 . -897) (undo-tree-id992 . -897) (undo-tree-id993 . -929) (undo-tree-id994 . -929) (undo-tree-id995 . -993) (undo-tree-id996 . -993) (undo-tree-id997 . -1009) (undo-tree-id998 . -1009) (undo-tree-id999 . -1028) (undo-tree-id1000 . -1028) (undo-tree-id1001 . -1034) (undo-tree-id1002 . -1034) (undo-tree-id1003 . -1079) (undo-tree-id1004 . -1079) (undo-tree-id1005 . -652) (t 23152 18273 857439 500000)) nil (23156 8511 676535 400000) 0 nil]) ((nil rear-nonsticky nil 1045 . 1046) (nil fontified nil 1045 . 1046) (nil fontified nil 1044 . 1045) (nil fontified nil 1042 . 1044) (nil fontified nil 1038 . 1042) (nil fontified nil 1037 . 1038) (nil fontified nil 1031 . 1037) (nil fontified nil 1028 . 1031) (nil fontified nil 1004 . 1028) (nil fontified nil 1002 . 1004) (nil fontified nil 998 . 1002) (998 . 1046)) nil (23152 18273 677763 700000) 0 nil]) ((1786 . 1800)) nil (23152 18273 677787 100000) 0 nil]) ((1784 . 1787)) nil (23152 18273 677795 400000) 0 nil]) ((1770 . 1783)) nil (23152 18273 677802 200000) 0 nil]) ((1762 . 1770)) nil (23152 18273 677808 600000) 0 nil]) ((1758 . 1763)) nil (23152 18273 677814 300000) 0 nil]) ((1753 . 1758) (t 23152 18110 472164 100000)) nil (23152 18273 677821 800000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1848) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1)) nil (23152 18110 250095 200000) 0 nil]) ((#("    console.log(loc);" 0 21 (fontified t)) . 1848) (undo-tree-id916 . -21) (t 23152 18090 361314 300000)) nil (23152 18110 250132 600000) 0 nil]) ((1852 . 1869)) nil (23152 18090 148741 500000) 0 nil]) ((1847 . 1852)) nil (23152 18090 148762 200000) 0 nil]) ((#("      
" 0 6 (fontified t face (my-face-u-1)) 6 7 (fontified t)) . 2144) (undo-tree-id908 . -7) (undo-tree-id909 . -7) (undo-tree-id910 . -7) (undo-tree-id911 . -7)) nil (23152 18090 148797 700000) 0 nil]) ((2143 . 2150) (t 23152 17873 654994 300000)) nil (23152 18090 148810 200000) 0 nil]) ((2316 . 2321)) nil (23152 17873 442276 100000) 0 nil]) ((#("
" 0 1 (fontified t rear-nonsticky t)) . 1754) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1)) nil (23152 17873 442321 0) 0 nil]) ((#("    console.log(children);" 0 26 (fontified t)) . 1754) (undo-tree-id907 . -26) (t 23152 17861 111070 600000)) nil (23152 17873 442337 600000) 0 nil]) ((1770 . 1778)) nil (23152 17860 956667 800000) 0 nil]) ((#("chidlren" 0 8 (fontified t)) . 1770) (undo-tree-id903 . -8) (t 23152 17858 853854 300000)) nil (23152 17860 956697 300000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1754) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . 1) (undo-tree-id902 . -1)) nil (23152 17858 665172 600000) 0 nil]) ((#("    " 0 4 (fontified nil)) . 1754) (1754 . 1758) (1754 . 1755) (t 23152 17844 974529 700000)) nil (23152 17858 665199 700000) 0 nil]) ((1778 . 1780)) nil (23152 17844 756241 600000) 0 nil]) ((1758 . 1778)) nil (23152 17844 756268 100000) 0 nil]) ((1753 . 1758) (t 23152 17826 834516 800000)) nil (23152 17844 756283 500000) 0 nil]) ((#("
" 0 1 (fontified t rear-nonsticky t)) . 2120) (undo-tree-id890 . -1) (undo-tree-id891 . 1) (undo-tree-id892 . 1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1)) nil (23152 17826 619668 300000) 0 nil]) ((#("    console.log(range);" 0 23 (fontified t)) . 2120) (undo-tree-id896 . 23) (undo-tree-id897 . 23) (undo-tree-id898 . -23) (t 23152 17816 710066 700000)) nil (23152 17826 619706 800000) 0 nil]) ((2136 . 2141)) nil (23152 17816 513595 700000) 0 nil]) ((#("loc" 0 3 (fontified t)) . 2136) (undo-tree-id880 . -3)) nil (23152 17816 513639 100000) 0 nil]) ((nil rear-nonsticky nil 2141 . 2142) (nil fontified nil 2141 . 2142) (nil fontified nil 2120 . 2141) (2120 . 2142)) nil (23152 17816 513659 500000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2075) (undo-tree-id881 . -1) (undo-tree-id882 . 1) (undo-tree-id883 . 1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1)) nil (23152 17816 513702 600000) 0 nil]) ((#("    console.log(loc);" 0 21 (fontified t)) . 2075) (undo-tree-id887 . 21) (undo-tree-id888 . 21) (undo-tree-id889 . -21) (t 23152 17792 908852 700000)) nil (23152 17816 513731 600000) 0 nil]) ((2079 . 2096)) nil (23152 17792 705788 600000) 0 nil]) ((2074 . 2079) (t 23152 17782 353303 400000)) nil (23152 17792 705810 100000) 0 nil] [nil nil ((#("{
      type: \"Paragraph\",
      children: [{ type: \"Str\", value: raw, loc, range, raw }],
      loc,
      range,
      raw,
    }" 0 2 (fontified t) 2 4 (fontified t) 4 6 (fontified t) 6 8 (fontified t) 8 14 (fontified t) 14 25 (fontified t face font-lock-string-face) 25 27 (fontified t) 27 29 (fontified t) 29 31 (fontified t) 31 33 (fontified t) 33 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 52 (fontified t) 52 57 (fontified t face font-lock-string-face) 57 58 (fontified t) 58 59 (fontified t) 59 71 (fontified t) 71 75 (fontified t) 75 76 (fontified t) 76 82 (fontified t) 82 83 (fontified t) 83 87 (fontified t) 87 88 (fontified t) 88 91 (fontified t) 91 93 (fontified t) 93 95 (fontified t) 95 97 (fontified t) 97 102 (fontified t) 102 104 (fontified t) 104 106 (fontified t) 106 108 (fontified t) 108 114 (fontified t) 114 115 (fontified t) 115 117 (fontified t) 117 119 (fontified t) 119 121 (fontified t) 121 125 (fontified t) 125 126 (fontified t rear-nonsticky t) 126 131 (fontified t)) . 2142) (undo-tree-id859 . -126) (undo-tree-id860 . -2) (undo-tree-id861 . -2) (undo-tree-id862 . -27) (undo-tree-id863 . -27) (undo-tree-id864 . -91) (undo-tree-id865 . -91) (undo-tree-id866 . -102) (undo-tree-id867 . -102) (undo-tree-id868 . -126) (undo-tree-id869 . -126) (undo-tree-id870 . -115) (undo-tree-id871 . -115) (undo-tree-id872 . -126) (undo-tree-id873 . -2) (undo-tree-id874 . -131) (undo-tree-id875 . 1) (undo-tree-id876 . -131) (undo-tree-id877 . 131) (undo-tree-id878 . -1) 2273 (t 23152 17742 90374 200000)) ((2142 . 2273) (t 23152 17771 634449 700000)) (23152 17771 453898 300000) 0 nil]) ((#("      
" 0 6 (fontified t face (my-face-u-1)) 6 7 (fontified t)) . 2268) (undo-tree-id855 . -7) (undo-tree-id856 . -7) (undo-tree-id857 . -7)) nil (23152 17778 522350 800000) 0 nil]) ((nil rear-nonsticky nil 2267 . 2268) (nil fontified nil 2267 . 2268) (nil fontified nil 2263 . 2267) (nil fontified nil 2261 . 2263) (nil fontified nil 2259 . 2261) (nil fontified nil 2257 . 2259) (nil fontified nil 2256 . 2257) (nil fontified nil 2250 . 2256) (nil fontified nil 2248 . 2250) (nil fontified nil 2246 . 2248) (nil fontified nil 2244 . 2246) (nil fontified nil 2239 . 2244) (nil fontified nil 2237 . 2239) (nil fontified nil 2235 . 2237) (nil fontified nil 2233 . 2235) (nil fontified nil 2230 . 2233) (nil fontified nil 2229 . 2230) (nil fontified nil 2225 . 2229) (nil fontified nil 2224 . 2225) (nil fontified nil 2218 . 2224) (nil fontified nil 2217 . 2218) (nil fontified nil 2213 . 2217) (nil fontified nil 2201 . 2213) (nil fontified nil 2200 . 2201) (nil fontified nil 2199 . 2200) (nil fontified nil 2194 . 2199) (nil fontified nil 2188 . 2194) (nil fontified nil 2187 . 2188) (nil fontified nil 2186 . 2187) (nil fontified nil 2175 . 2186) (nil fontified nil 2173 . 2175) (nil fontified nil 2171 . 2173) (nil fontified nil 2169 . 2171) (nil fontified nil 2167 . 2169) (nil fontified nil 2156 . 2167) (nil fontified nil 2150 . 2156) (nil fontified nil 2148 . 2150) (nil fontified nil 2146 . 2148) (nil fontified nil 2144 . 2146) (2144 . 2268)) nil (23152 17741 931803 300000) 0 nil]) ((2143 . 2150)) nil (23152 17741 931839 500000) 0 nil]) ((2143 . 2148)) nil (23152 17741 931856 100000) 0 nil]) ((2142 . 2144)) nil (23152 17741 931865 600000) 0 nil]) ((#(": [], loc" 0 5 (fontified t) 5 6 (fontified t) 6 9 (fontified t)) . 2183) (undo-tree-id858 . -9)) nil (23152 17741 931882 200000) 0 nil]) ((2124 . 2143)) nil (23152 17741 931893 500000) 0 nil]) ((2119 . 2124) (t 23152 17713 695056 100000)) nil (23152 17741 931902 900000) 0 nil]) ((2159 . 2163) (t 23152 17701 275490 300000)) nil (23152 17713 510912 200000) 0 nil]) ((2140 . 2148)) nil (23152 17701 72410 0) 0 nil]) ((#("List" 0 4 (fontified t face font-lock-string-face)) . 2140) (undo-tree-id833 . -4)) nil (23152 17701 72448 200000) 0 nil]) ((#("    
" 0 4 (fontified t face (my-face-u-1)) 4 5 (fontified t rear-nonsticky t)) . 2176) (undo-tree-id834 . -5) (undo-tree-id835 . -5) (undo-tree-id836 . -5) (undo-tree-id837 . -5) (undo-tree-id838 . -5)) nil (23152 17701 72475 700000) 0 nil]) ((nil fontified nil 2175 . 2176) (nil fontified nil 2173 . 2175) (nil fontified nil 2172 . 2173) (nil fontified nil 2169 . 2172) (nil fontified nil 2168 . 2169) (nil fontified nil 2162 . 2168) (nil fontified nil 2161 . 2162) (nil fontified nil 2157 . 2161) (nil fontified nil 2156 . 2157) (nil fontified nil 2147 . 2156) (nil fontified nil 2146 . 2147) (nil fontified nil 2145 . 2146) (nil fontified nil 2139 . 2145) (nil fontified nil 2133 . 2139) (nil fontified nil 2132 . 2133) (nil fontified nil 2130 . 2132) (nil fontified nil 2124 . 2130) (nil fontified nil 2122 . 2124) (nil fontified nil 2120 . 2122) (nil fontified nil 2119 . 2120) (nil fontified nil 2098 . 2119) (nil fontified nil 2097 . 2098) (nil fontified nil 2093 . 2097) (nil fontified nil 2092 . 2093) (nil fontified nil 2090 . 2092) (nil fontified nil 2085 . 2090) (nil fontified nil 2084 . 2085) (nil fontified nil 2079 . 2084) (nil fontified nil 2075 . 2079) (2075 . 2176)) nil (23152 17701 72506 700000) 0 nil]) ((2074 . 2079)) nil (23152 17701 72520 300000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2075) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1)) nil (23152 17701 72542 200000) 0 nil]) ((2066 . 2072)) nil (23152 17701 72553 500000) 0 nil]) ((#("{ min, max }" 0 12 (fontified t)) . 2066) (undo-tree-id842 . -12) (undo-tree-id843 . 1) (undo-tree-id844 . -12) (undo-tree-id845 . 12) (undo-tree-id846 . -1) (undo-tree-id847 . -12) 2078) nil (23152 17701 72590 200000) 0 nil]) ((2060 . 2062)) nil (23152 17701 72603 400000) 0 nil]) ((2059 . 2061)) nil (23152 17701 72612 800000) 0 nil]) ((2049 . 2060)) nil (23152 17701 72620 700000) 0 nil]) ((#(")" 0 1 (fontified t)) . 2049)) nil (23152 17701 72628 300000) 0 nil]) ((#("(" 0 1 (fontified t)) . 2049) (undo-tree-id848 . 1) (undo-tree-id849 . -1)) nil (23152 17701 72646 800000) 0 nil]) ((#(".$lines" 0 7 (fontified t)) . 2049)) nil (23152 17701 72658 100000) 0 nil]) ((#("elem" 0 4 (fontified t)) . 2049)) nil (23152 17701 72667 200000) 0 nil]) ((#("
" 0 1 (fontified t rear-nonsticky t)) . 2079) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1)) nil (23152 17701 72695 500000) 0 nil]) ((#("    const loc = this.findLocation(elem.$lines(), { min, max });" 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 13 (fontified t face font-lock-variable-name-face) 13 15 (fontified t) 15 16 (fontified t) 16 20 (fontified t face font-lock-constant-face) 20 21 (fontified t) 21 63 (fontified t)) . 2079) (undo-tree-id854 . -4)) nil (23152 17701 72713 200000) 0 nil]) ((#("    " 0 4 (fontified t)) . -2083) 2079) nil (23152 17701 72725 700000) 0 nil]) ((nil rear-nonsticky nil 2146 . 2147) (nil fontified nil 2104 . 2147) (nil fontified nil 2103 . 2104) (nil fontified nil 2099 . 2103) (nil fontified nil 2098 . 2099) (nil fontified nil 2096 . 2098) (nil fontified nil 2093 . 2096) (nil fontified nil 2092 . 2093) (nil fontified nil 2087 . 2092) (nil fontified nil 2083 . 2087) (2083 . 2147)) nil (23152 17701 72746 500000) 0 nil]) ((nil rear-nonsticky nil 2078 . 2079) (nil fontified nil 2036 . 2079) (nil fontified nil 2035 . 2036) (nil fontified nil 2031 . 2035) (nil fontified nil 2030 . 2031) (nil fontified nil 2028 . 2030) (nil fontified nil 2025 . 2028) (nil fontified nil 2024 . 2025) (nil fontified nil 2019 . 2024) (nil fontified nil 2015 . 2019) (2015 . 2079)) nil (23152 17701 72769 900000) 0 nil]) ((2015 . 2019)) nil (23152 17701 72814 400000) 0 nil]) ((#("    const " 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t face (my-face-u-1))) . 2015)) nil (23152 17701 72820 900000) 0 nil]) ((2019 . 2025)) nil (23152 17701 72829 200000) 0 nil]) ((2015 . 2019)) nil (23152 17701 72835 200000) 0 nil]) ((#("    const children " 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 18 (fontified t face font-lock-variable-name-face) 18 19 (fontified t face (my-face-u-1))) . 2015)) nil (23152 17701 72841 200000) 0 nil]) ((2019 . 2034)) nil (23152 17701 72848 800000) 0 nil]) ((2014 . 2019) (t 23152 17638 177269 400000)) nil (23152 17701 72856 0) 0 nil]) ((#("/" 0 1 (fontified t rear-nonsticky t face font-lock-comment-face)) . -1662) (undo-tree-id828 . -1) (undo-tree-id829 . -1)) nil (23152 17637 956015 800000) 0 nil]) ((nil rear-nonsticky nil 1662 . 1663) (nil fontified nil 1654 . 1663) (1654 . 1663)) nil (23152 17637 956038 800000) 0 nil]) ((nil rear-nonsticky nil 1653 . 1654) (nil fontified nil 1645 . 1654) (1645 . 1654)) nil (23152 17637 956049 0) 0 nil]) ((#("asciidoc/" 0 9 (fontified t face font-lock-comment-face)) . 1645) (undo-tree-id830 . -9)) nil (23152 17637 956060 700000) 0 nil]) ((1639 . 1654)) nil (23152 17637 956069 0) 0 nil]) ((#(" " 0 1 (fontified t face (font-lock-comment-face my-face-u-1))) . -1639)) nil (23152 17637 956075 100000) 0 nil]) ((#(":" 0 1 (fontified t face font-lock-comment-face)) . -1640)) nil (23152 17637 956083 400000) 0 nil]) ((1639 . 1641)) nil (23152 17637 956089 400000) 0 nil]) ((#(" " 0 1 (fontified t face (font-lock-comment-face my-face-u-1))) . -1639)) nil (23152 17637 956095 100000) 0 nil]) ((#("(" 0 1 (fontified t face font-lock-comment-face)) . -1640)) nil (23152 17637 956101 100000) 0 nil]) ((#(")" 0 1 (fontified t face font-lock-comment-face)) . -1641) (undo-tree-id831 . 1) (undo-tree-id832 . -1)) nil (23152 17637 956114 700000) 0 nil]) ((#("b" 0 1 (fontified t face font-lock-comment-face)) . -1642)) nil (23152 17637 956122 600000) 0 nil]) ((1631 . 1643) (t 23152 17614 519384 200000)) nil (23152 17637 956131 700000) 0 nil]) ((1978 . 1983)) nil (23152 17614 339055 500000) 0 nil]) ((#("item" 0 4 (fontified t)) . 1978) (undo-tree-id827 . -4)) nil (23152 17614 339093 600000) 0 nil]) ((1981 . 1982)) nil (23152 17614 339104 600000) 0 nil]) ((1961 . 1981)) nil (23152 17614 339112 100000) 0 nil]) ((1957 . 1961)) nil (23152 17614 339118 600000) 0 nil]) ((#("    const raw = elem.text." 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 13 (fontified t face font-lock-variable-name-face) 13 15 (fontified t) 15 26 (fontified t)) . 1957)) nil (23152 17614 339125 0) 0 nil]) ((1973 . 1983)) nil (23152 17614 339132 200000) 0 nil]) ((#("e" 0 1 (fontified t)) . -1973)) nil (23152 17614 339138 200000) 0 nil]) ((#("lines" 0 5 (fontified t)) . 1974)) nil (23152 17614 339146 100000) 0 nil]) ((1973 . 1974)) nil (23152 17614 339152 600000) 0 nil]) ((1961 . 1978)) nil (23152 17614 339158 600000) 0 nil]) ((1957 . 1961)) nil (23152 17614 339164 600000) 0 nil]) ((#("    return" 0 4 (fontified t) 4 10 (fontified t face font-lock-keyword-face)) . 1957)) nil (23152 17614 339171 100000) 0 nil]) ((1961 . 1967)) nil (23152 17614 339178 200000) 0 nil]) ((1957 . 1961)) nil (23152 17614 339183 900000) 0 nil]) ((#("    const " 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t face (my-face-u-1))) . 1957)) nil (23152 17614 339189 900000) 0 nil]) ((1961 . 1967)) nil (23152 17614 339196 700000) 0 nil]) ((1956 . 1961) (t 23152 17527 673168 0)) nil (23152 17614 339204 300000) 0 nil]) ((1947 . 1953)) nil (23152 17527 473298 0) 0 nil]) ((#("{ min, max }" 0 12 (fontified t)) . 1947) (undo-tree-id818 . -12) (undo-tree-id819 . 1) (undo-tree-id820 . -12) (undo-tree-id821 . 12) (undo-tree-id822 . -1) (undo-tree-id823 . -12) 1959) nil (23152 17527 473352 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 1967) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1)) nil (23152 17527 473375 0) 0 nil]) ((#("  " 0 2 (fontified nil face (my-face-u-1))) . -1965) (1967 . 1968)) nil (23152 17527 473384 800000) 0 nil]) ((1962 . 1967)) nil (23152 17527 473392 400000) 0 nil]) ((1936 . 1940)) nil (23152 17527 473399 600000) 0 nil]) ((#("  " 0 2 (fontified t)) . -1925) 1923) nil (23152 17527 473406 400000) 0 nil]) ((nil rear-nonsticky nil 1960 . 1961) (nil fontified nil 1958 . 1961) (nil fontified nil 1925 . 1958) (1925 . 1961)) nil (23152 17527 473416 200000) 0 nil]) ((1923 . 1925) (#("  " 0 2 (fontified nil)) . 1922) (1922 . 1924) (1922 . 1923) (#("  " 0 2 (fontified t face (my-face-u-1))) . 1922) 1924) nil (23152 17527 473428 600000) 0 nil]) ((1921 . 1924) (t 23152 17510 557808 700000)) nil (23152 17527 473438 100000) 0 nil]) ((1677 . 1681)) nil (23152 17510 382290 100000) 0 nil]) ((#("this" 0 4 (fontified t face font-lock-constant-face)) . 1677) (undo-tree-id817 . -4) (t 23152 17498 427773 200000)) nil (23152 17510 382346 800000) 0 nil]) ((1882 . 1886)) nil (23152 17498 249312 900000) 0 nil]) ((#("Document" 0 8 (fontified t face font-lock-string-face)) . 1882) (undo-tree-id801 . -8)) nil (23152 17498 249360 800000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1922) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1)) nil (23152 17498 249389 900000) 0 nil]) ((#("    return { type: \"List\", children, loc, range, raw };" 0 4 (fontified t) 4 10 (fontified t face font-lock-keyword-face) 10 12 (fontified t) 12 18 (fontified t) 18 19 (fontified t) 19 25 (fontified t face font-lock-string-face) 25 26 (fontified t) 26 36 (fontified t) 36 41 (fontified t) 41 48 (fontified t) 48 52 (fontified t) 52 55 (fontified t)) . 1922) (undo-tree-id805 . -55)) nil (23152 17498 249407 300000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1922) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1)) nil (23152 17498 249439 0) 0 nil]) ((#("    const range = null; // this.locationToRange(loc);" 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 15 (fontified t face font-lock-variable-name-face) 15 17 (fontified t) 17 18 (fontified t) 18 22 (fontified t face font-lock-constant-face) 22 24 (fontified t) 24 25 (fontified t face font-lock-comment-delimiter-face) 25 27 (fontified t face font-lock-comment-delimiter-face) 27 31 (fontified t face font-lock-comment-face) 31 32 (fontified t face font-lock-comment-face) 32 53 (fontified t face font-lock-comment-face)) . 1922) (undo-tree-id810 . -53)) nil (23152 17498 249455 200000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1922) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1)) nil (23152 17498 249478 600000) 0 nil]) ((#("    const loc = null;" 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 13 (fontified t face font-lock-variable-name-face) 13 15 (fontified t) 15 16 (fontified t) 16 20 (fontified t face font-lock-constant-face) 20 21 (fontified t)) . 1922) (undo-tree-id814 . -21)) nil (23152 17498 249507 400000) 0 nil]) ((nil rear-nonsticky nil 1921 . 1922) (nil fontified nil 1919 . 1922) (nil fontified nil 1918 . 1919) (nil fontified nil 1915 . 1918) (nil fontified nil 1914 . 1915) (nil fontified nil 1908 . 1914) (nil fontified nil 1907 . 1908) (nil fontified nil 1903 . 1907) (nil fontified nil 1902 . 1903) (nil fontified nil 1893 . 1902) (nil fontified nil 1892 . 1893) (nil fontified nil 1891 . 1892) (nil fontified nil 1881 . 1891) (nil fontified nil 1875 . 1881) (nil fontified nil 1874 . 1875) (nil fontified nil 1872 . 1874) (nil fontified nil 1866 . 1872) (nil fontified nil 1864 . 1866) (nil fontified nil 1862 . 1864) (nil fontified nil 1861 . 1862) (nil fontified nil 1840 . 1861) (nil fontified nil 1839 . 1840) (nil fontified nil 1835 . 1839) (nil fontified nil 1834 . 1835) (nil fontified nil 1832 . 1834) (nil fontified nil 1827 . 1832) (nil fontified nil 1826 . 1827) (nil fontified nil 1821 . 1826) (nil fontified nil 1817 . 1821) (nil fontified nil 1813 . 1817) (nil fontified nil 1776 . 1813) (nil fontified nil 1769 . 1776) (nil fontified nil 1768 . 1769) (nil fontified nil 1748 . 1768) (nil fontified nil 1738 . 1748) (nil fontified nil 1736 . 1738) (nil fontified nil 1733 . 1736) (nil fontified nil 1732 . 1733) (nil fontified nil 1727 . 1732) (nil fontified nil 1723 . 1727) (1723 . 1922)) nil (23152 17498 249555 700000) 0 nil]) ((1718 . 1719)) nil (23152 17498 249577 200000) 0 nil]) ((#("," 0 1 (fontified t)) . -1718)) nil (23152 17498 249586 300000) 0 nil]) ((#(" " 0 1 (fontified t)) . -1719)) nil (23152 17498 249596 900000) 0 nil]) ((1714 . 1720)) nil (23152 17498 249605 900000) 0 nil]) ((1694 . 1714)) nil (23152 17498 249614 600000) 0 nil]) ((#("m" 0 1 (fontified t)) . -1694)) nil (23152 17498 249622 900000) 0 nil]) ((1693 . 1695)) nil (23152 17498 249632 400000) 0 nil]) ((#("`" 0 1 (fontified t)) . -1693)) nil (23152 17498 249640 300000) 0 nil]) ((1677 . 1695)) nil (23152 17498 249650 500000) 0 nil]) ((1676 . 1678)) nil (23152 17498 249659 200000) 0 nil]) ((#("convertEle" 0 10 (fontified t)) . -1658) (1668 . 1686) 1668) nil (23152 17498 249669 700000) 0 nil]) ((1653 . 1668)) nil (23152 17498 249679 600000) 0 nil]) ((#("[" 0 1 (fontified t)) . -1653)) nil (23152 17498 249687 900000) 0 nil]) ((#("]" 0 1 (fontified t)) . -1654) (undo-tree-id815 . 1) (undo-tree-id816 . -1) (t 23152 17445 370734 0)) nil (23152 17498 249710 500000) 0 nil]) ((nil rear-nonsticky nil 1656 . 1657) (nil fontified nil 1656 . 1657) (nil fontified nil 1652 . 1656) (nil fontified nil 1650 . 1652) (nil fontified nil 1642 . 1650) (nil fontified nil 1641 . 1642) (nil fontified nil 1636 . 1641) (nil fontified nil 1632 . 1636) (1632 . 1657)) nil (23152 17445 191795 600000) 0 nil]) ((#("    const children = [];
" 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 18 (fontified t face font-lock-variable-name-face) 18 20 (fontified t) 20 24 (fontified t) 24 25 (fontified t)) . 1708) (undo-tree-id793 . -25) (undo-tree-id794 . -25) (undo-tree-id795 . -25) (undo-tree-id796 . -25) 1733) nil (23152 17445 191855 700000) 0 nil]) ((1678 . 1681)) nil (23152 17445 191869 600000) 0 nil]) ((#("." 0 1 (fontified t)) . -1678)) nil (23152 17445 191877 200000) 0 nil]) ((#("/" 0 1 (fontified t)) . -1679)) nil (23152 17445 191885 500000) 0 nil]) ((1672 . 1680)) nil (23152 17445 191893 400000) 0 nil]) ((1652 . 1653)) nil (23152 17445 191901 0) 0 nil]) ((1648 . 1649)) nil (23152 17445 191907 800000) 0 nil]) ((1636 . 1651)) nil (23152 17445 191914 600000) 0 nil]) ((1631 . 1636)) nil (23152 17445 191921 700000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1632) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1)) nil (23152 17445 191941 400000) 0 nil]) ((#("    const loc = this.findLocation(elem.$blocks(), { min, max, update: false });" 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 13 (fontified t face font-lock-variable-name-face) 13 15 (fontified t) 15 16 (fontified t) 16 20 (fontified t face font-lock-constant-face) 20 21 (fontified t) 21 70 (fontified t) 70 75 (fontified t face font-lock-constant-face) 75 76 (fontified t) 76 79 (fontified t)) . 1632) (undo-tree-id800 . -79) (t 23152 17412 14551 0)) nil (23152 17445 191962 500000) 0 nil]) ((1777 . 1781)) nil (23152 17411 819189 0) 0 nil]) ((#("{" 0 1 (fontified t)) . -1777)) nil (23152 17411 819208 600000) 0 nil]) ((1777 . 1778)) nil (23152 17411 819218 500000) 0 nil]) ((1767 . 1775)) nil (23152 17411 819226 0) 0 nil]) ((#("childrne" 0 8 (fontified t face font-lock-variable-name-face)) . 1767) (undo-tree-id775 . -8)) nil (23152 17411 819250 200000) 0 nil]) ((1761 . 1777)) nil (23152 17411 819258 100000) 0 nil]) ((#("c" 0 1 (fontified t)) . -1761)) nil (23152 17411 819263 800000) 0 nil]) ((1761 . 1762)) nil (23152 17411 819270 200000) 0 nil]) ((1756 . 1761)) nil (23152 17411 819278 100000) 0 nil]) ((#("   " 0 3 (fontified t)) . -1810) 1809) nil (23152 17411 819286 100000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1809) (undo-tree-id776 . -1) (undo-tree-id777 . -1)) nil (23152 17411 819300 400000) 0 nil]) ((#("     " 0 5 (fontified t)) . -1806) 1805) nil (23152 17411 819308 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -1805) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . 1)) nil (23152 17411 819322 300000) 0 nil]) ((#("     " 0 5 (fontified t)) . -1799) 1798) nil (23152 17411 819331 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -1798) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . 1)) nil (23152 17411 819345 700000) 0 nil]) ((#("     " 0 5 (fontified t)) . -1794) 1793) nil (23152 17411 819353 600000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1793) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . 1)) nil (23152 17411 819368 0) 0 nil]) ((#("     " 0 5 (fontified t)) . -1784) 1783) nil (23152 17411 819375 900000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1783) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . 1)) nil (23152 17411 819389 900000) 0 nil]) ((#("     " 0 5 (fontified t)) . -1770) 1769) nil (23152 17411 819399 700000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1769) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . 1)) nil (23152 17411 819423 500000) 0 nil]) ((1836 . 1839)) nil (23152 17411 819434 400000) 0 nil]) ((1829 . 1836)) nil (23152 17411 819443 500000) 0 nil]) ((1823 . 1829)) nil (23152 17411 819452 600000) 0 nil]) ((1816 . 1823)) nil (23152 17411 819460 900000) 0 nil]) ((1812 . 1816)) nil (23152 17411 819469 200000) 0 nil]) ((1805 . 1812)) nil (23152 17411 819475 200000) 0 nil]) ((1796 . 1805)) nil (23152 17411 819481 600000) 0 nil]) ((1789 . 1796)) nil (23152 17411 819486 900000) 0 nil]) ((1788 . 1789)) nil (23152 17411 819492 200000) 0 nil]) ((1783 . 1787)) nil (23152 17411 819497 900000) 0 nil]) ((1776 . 1784)) nil (23152 17411 819505 800000) 0 nil]) ((1769 . 1776)) nil (23152 17411 819513 700000) 0 nil]) ((1769 . 1774)) nil (23152 17411 819522 800000) 0 nil]) ((1755 . 1756)) nil (23152 17411 819530 0) 0 nil]) ((1751 . 1754)) nil (23152 17411 819538 700000) 0 nil]) ((1750 . 1752)) nil (23152 17411 819548 100000) 0 nil]) ((nil fontified t 1747 . 1750) (#("loc" 0 3 (fontified t)) . -1735) (1738 . 1753) 1738) nil (23152 17411 819559 800000) 0 nil]) ((#("lo" 0 2 (fontified t)) . -1735) (1737 . 1740) 1737) nil (23152 17411 819585 500000) 0 nil]) ((1736 . 1737)) nil (23152 17411 819595 700000) 0 nil]) ((1716 . 1736)) nil (23152 17411 819602 900000) 0 nil]) ((1711 . 1716)) nil (23152 17411 819610 400000) 0 nil]) ((1710 . 1711)) nil (23152 17411 819618 0) 0 nil]) ((1703 . 1708)) nil (23152 17411 819633 400000) 0 nil]) ((1683 . 1703)) nil (23152 17411 819641 400000) 0 nil]) ((1666 . 1684)) nil (23152 17411 819649 700000) 0 nil]) ((1665 . 1667)) nil (23152 17411 819658 0) 0 nil]) ((#("findLo" 0 6 (fontified t)) . -1653) (1659 . 1671) 1659) nil (23152 17411 819667 400000) 0 nil]) ((1656 . 1659)) nil (23152 17411 819675 300000) 0 nil]) ((1636 . 1656)) nil (23152 17411 819681 800000) 0 nil]) ((1631 . 1636) (t 23152 17345 742259 100000)) nil (23152 17411 819688 900000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1632) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1)) nil (23152 17345 576654 900000) 0 nil]) ((#("    const loc " 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 13 (fontified t face font-lock-variable-name-face) 13 14 (fontified t face (my-face-u-1))) . 1632) (undo-tree-id773 . -14)) nil (23152 17345 576680 900000) 0 nil]) ((1641 . 1646)) nil (23152 17345 576691 900000) 0 nil]) ((1632 . 1636) 1637) nil (23152 17345 576699 800000) 0 nil]) ((1632 . 1637)) nil (23152 17345 576706 600000) 0 nil]) ((#("    cosnt loc" 0 9 (fontified t) 9 13 (fontified t)) . 1632) (undo-tree-id774 . -13)) nil (23152 17345 576716 800000) 0 nil]) ((1636 . 1645)) nil (23152 17345 576724 700000) 0 nil]) ((1631 . 1636) (t 23152 17328 885279 500000)) nil (23152 17345 576733 0) 0 nil]) ((1626 . 1631)) nil (23152 17328 702736 900000) 0 nil]) ((#("elem.$source();" 0 15 (fontified t)) . 1626) (undo-tree-id769 . -15) (t 23152 17306 19375 0)) nil (23152 17328 702777 700000) 0 nil]) ((1646 . 1656)) nil (23152 17305 844417 600000) 0 nil]) ((1641 . 1646)) nil (23152 17305 844442 200000) 0 nil]) ((1621 . 1641)) nil (23152 17305 844455 0) 0 nil]) ((#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -1621)) nil (23152 17305 844464 100000) 0 nil]) ((1614 . 1622)) nil (23152 17305 844475 800000) 0 nil]) ((1609 . 1614)) nil (23152 17305 844484 500000) 0 nil]) ((1609 . 1612)) nil (23152 17305 844493 100000) 0 nil]) ((1607 . 1610)) nil (23152 17305 844501 800000) 0 nil]) ((1604 . 1605)) nil (23152 17305 844509 0) 0 nil]) ((#("," 0 1 (fontified t)) . -1604)) nil (23152 17305 844517 700000) 0 nil]) ((#(" " 0 1 (fontified t)) . -1605)) nil (23152 17305 844527 100000) 0 nil]) ((1604 . 1606)) nil (23152 17305 844537 700000) 0 nil]) ((#("," 0 1 (fontified t)) . -1604)) nil (23152 17305 844547 100000) 0 nil]) ((#(" " 0 1 (fontified t)) . -1605)) nil (23152 17305 844557 300000) 0 nil]) ((1595 . 1606)) nil (23152 17305 844567 100000) 0 nil]) ((1588 . 1596)) nil (23152 17305 844576 200000) 0 nil]) ((1576 . 1589)) nil (23152 17305 844586 400000) 0 nil]) ((1574 . 1576) (#("  " 0 2 (fontified nil)) . 1573) (1573 . 1575) (1573 . 1574) (#("  " 0 2 (fontified t face (my-face-u-1))) . 1573) 1575) nil (23152 17305 844602 300000) 0 nil]) ((1572 . 1575)) nil (23152 17305 844614 300000) 0 nil]) ((#("lastLineNo" 0 10 (fontified t)) . 848)) nil (23152 17305 844621 500000) 0 nil]) ((nil rear-nonsticky nil 847 . 848) (nil fontified nil 842 . 848) (842 . 848)) nil (23152 17305 844633 600000) 0 nil]) ((746 . 752)) nil (23152 17305 844642 300000) 0 nil]) ((#("lastLineNo" 0 10 (fontified t)) . 746)) nil (23152 17305 844651 400000) 0 nil]) ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -810) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -763) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -714) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -671) 871 (t 23152 17224 876297 700000)) nil (23152 17305 844666 500000) 0 nil]) ((#("  // private
" 0 2 (fontified t) 2 4 (fontified t face font-lock-comment-delimiter-face) 4 5 (fontified t face font-lock-comment-delimiter-face) 5 12 (fontified t face font-lock-comment-face) 12 13 (fontified t face font-lock-comment-face)) . 1594) (undo-tree-id765 . -13) (undo-tree-id766 . -13) (undo-tree-id767 . -13) (undo-tree-id768 . -13) 1607 (t 23152 17213 884746 300000)) nil (23152 17224 677100 600000) 0 nil]) ((#(" ----" 0 5 (fontified t face font-lock-comment-face)) . 1606) (undo-tree-id758 . -5)) nil (23152 17213 697435 600000) 0 nil]) ((#("-" 0 1 (fontified t face font-lock-comment-face)) . -1599)) nil (23152 17213 697458 300000) 0 nil]) ((#("-" 0 1 (fontified t face font-lock-comment-face)) . -1600)) nil (23152 17213 697467 400000) 0 nil]) ((#("-" 0 1 (fontified t face font-lock-comment-face)) . -1601)) nil (23152 17213 697474 200000) 0 nil]) ((#("-" 0 1 (fontified t face font-lock-comment-face)) . -1602)) nil (23152 17213 697481 300000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -1603)) nil (23152 17213 697487 700000) 0 nil]) ((1611 . 1616)) nil (23152 17213 697494 900000) 0 nil]) ((1599 . 1604)) nil (23152 17213 697501 700000) 0 nil]) ((#("  // private
" 0 2 (fontified t) 2 4 (fontified t face font-lock-comment-delimiter-face) 4 5 (fontified t face font-lock-comment-delimiter-face) 5 12 (fontified t face font-lock-comment-face) 12 13 (fontified t rear-nonsticky t face font-lock-comment-face)) . 1692) (undo-tree-id759 . -13) (undo-tree-id760 . -13) (undo-tree-id761 . -13) (undo-tree-id762 . -13) (undo-tree-id763 . -13) (undo-tree-id764 . -13) 1705) nil (23152 17213 697550 400000) 0 nil]) ((nil rear-nonsticky nil 1704 . 1705) (nil fontified nil 1704 . 1705) (nil fontified nil 1697 . 1704) (nil fontified nil 1696 . 1697) (nil fontified nil 1694 . 1696) (nil fontified nil 1692 . 1694) (1692 . 1705) (t 23152 17202 461895 200000)) nil (23152 17213 697571 200000) 0 nil]) ((1596 . 1606)) nil (23152 17202 280018 400000) 0 nil]) ((1594 . 1596)) nil (23152 17202 280041 400000) 0 nil]) ((#("  
" 0 2 (fontified t face (my-face-u-1)) 2 3 (fontified t)) . 2966) (undo-tree-id739 . -3) (undo-tree-id740 . -3) (undo-tree-id741 . -3)) nil (23152 17202 280076 200000) 0 nil]) ((nil rear-nonsticky nil 2965 . 2966) (nil fontified nil 2965 . 2966) (nil fontified nil 2962 . 2965) (nil fontified nil 2961 . 2962) (nil fontified nil 2960 . 2961) (nil fontified nil 2956 . 2960) (nil fontified nil 2955 . 2956) (nil fontified nil 2949 . 2955) (nil fontified nil 2945 . 2949) (nil fontified nil 2944 . 2945) (nil fontified nil 2939 . 2944) (nil fontified nil 2938 . 2939) (nil fontified nil 2930 . 2938) (nil fontified nil 2929 . 2930) (nil fontified nil 2927 . 2929) (nil fontified nil 2926 . 2927) (nil fontified nil 2917 . 2926) (nil fontified nil 2916 . 2917) (nil fontified nil 2908 . 2916) (nil fontified nil 2891 . 2908) (nil fontified nil 2889 . 2891) (nil fontified nil 2877 . 2889) (nil fontified nil 2876 . 2877) (nil fontified nil 2874 . 2876) (nil fontified nil 2842 . 2874) (nil fontified nil 2838 . 2842) (nil fontified nil 2829 . 2838) (nil fontified nil 2820 . 2829) (nil fontified nil 2818 . 2820) (nil fontified nil 2804 . 2818) (nil fontified nil 2801 . 2804) (nil fontified nil 2795 . 2801) (nil fontified nil 2789 . 2795) (nil fontified nil 2788 . 2789) (nil fontified nil 2787 . 2788) (nil fontified nil 2781 . 2787) (nil fontified nil 2780 . 2781) (nil fontified nil 2773 . 2780) (nil fontified nil 2769 . 2773) (nil fontified nil 2761 . 2769) (nil fontified nil 2753 . 2761) (nil fontified nil 2751 . 2753) (nil fontified nil 2747 . 2751) (nil fontified nil 2731 . 2747) (nil fontified nil 2727 . 2731) (nil fontified nil 2726 . 2727) (nil fontified nil 2724 . 2726) (nil fontified nil 2715 . 2724) (nil fontified nil 2714 . 2715) (nil fontified nil 2709 . 2714) (nil fontified nil 2703 . 2709) (nil fontified nil 2702 . 2703) (nil fontified nil 2701 . 2702) (nil fontified nil 2697 . 2701) (nil fontified nil 2696 . 2697) (nil fontified nil 2681 . 2696) (nil fontified nil 2680 . 2681) (nil fontified nil 2678 . 2680) (nil fontified nil 2669 . 2678) (nil fontified nil 2668 . 2669) (nil fontified nil 2663 . 2668) (nil fontified nil 2657 . 2663) (nil fontified nil 2656 . 2657) (nil fontified nil 2655 . 2656) (nil fontified nil 2654 . 2655) (nil fontified nil 2632 . 2654) (nil fontified nil 2631 . 2632) (nil fontified nil 2629 . 2631) (nil fontified nil 2621 . 2629) (nil fontified nil 2620 . 2621) (nil fontified nil 2615 . 2620) (nil fontified nil 2609 . 2615) (nil fontified nil 2608 . 2609) (nil fontified nil 2607 . 2608) (nil fontified nil 2600 . 2607) (nil fontified nil 2599 . 2600) (nil fontified nil 2598 . 2599) (nil fontified nil 2590 . 2598) (nil fontified nil 2582 . 2590) (nil fontified nil 2579 . 2582) (nil fontified nil 2573 . 2579) (nil fontified nil 2570 . 2573) (nil fontified nil 2568 . 2570) (nil fontified nil 2562 . 2568) (nil fontified nil 2554 . 2562) (nil fontified nil 2544 . 2554) (nil fontified nil 2543 . 2544) (nil fontified nil 2542 . 2543) (nil fontified nil 2537 . 2542) (nil fontified nil 2527 . 2537) (nil fontified nil 2526 . 2527) (nil fontified nil 2525 . 2526) (nil fontified nil 2520 . 2525) (nil fontified nil 2519 . 2520) (nil fontified nil 2517 . 2519) (nil fontified nil 2502 . 2517) (nil fontified nil 2499 . 2502) (nil fontified nil 2498 . 2499) (nil fontified nil 2491 . 2498) (nil fontified nil 2490 . 2491) (nil fontified nil 2456 . 2490) (nil fontified nil 2452 . 2456) (nil fontified nil 2450 . 2452) (nil fontified nil 2448 . 2450) (nil fontified nil 2440 . 2448) (nil fontified nil 2437 . 2440) (nil fontified nil 2436 . 2437) (nil fontified nil 2409 . 2436) (nil fontified nil 2408 . 2409) (nil fontified nil 2407 . 2408) (nil fontified nil 2404 . 2407) (nil fontified nil 2402 . 2404) (nil fontified nil 2399 . 2402) (nil fontified nil 2393 . 2399) (nil fontified nil 2391 . 2393) (nil fontified nil 2387 . 2391) (nil fontified nil 2386 . 2387) (nil fontified nil 2384 . 2386) (nil fontified nil 2379 . 2384) (nil fontified nil 2378 . 2379) (nil fontified nil 2375 . 2378) (nil fontified nil 2369 . 2375) (nil fontified nil 2366 . 2369) (nil fontified nil 2365 . 2366) (nil fontified nil 2325 . 2365) (nil fontified nil 2324 . 2325) (nil fontified nil 2323 . 2324) (nil fontified nil 2320 . 2323) (nil fontified nil 2318 . 2320) (nil fontified nil 2315 . 2318) (nil fontified nil 2311 . 2315) (nil fontified nil 2308 . 2311) (nil fontified nil 2306 . 2308) (nil fontified nil 2273 . 2306) (nil fontified nil 2272 . 2273) (nil fontified nil 2268 . 2272) (nil fontified nil 2267 . 2268) (nil fontified nil 2257 . 2267) (nil fontified nil 2251 . 2257) (nil fontified nil 2247 . 2251) (nil fontified nil 2245 . 2247) (nil fontified nil 2243 . 2245) (nil fontified nil 2241 . 2243) (nil fontified nil 2240 . 2241) (nil fontified nil 2233 . 2240) (nil fontified nil 2232 . 2233) (nil fontified nil 2203 . 2232) (nil fontified nil 2200 . 2203) (nil fontified nil 2192 . 2200) (nil fontified nil 2190 . 2192) (nil fontified nil 2184 . 2190) (nil fontified nil 2149 . 2184) (nil fontified nil 2148 . 2149) (nil fontified nil 2144 . 2148) (nil fontified nil 2143 . 2144) (nil fontified nil 2141 . 2143) (nil fontified nil 2136 . 2141) (nil fontified nil 2135 . 2136) (nil fontified nil 2130 . 2135) (nil fontified nil 2124 . 2130) (nil fontified nil 2116 . 2124) (nil fontified nil 2115 . 2116) (nil fontified nil 2106 . 2115) (nil fontified nil 2105 . 2106) (nil fontified nil 2087 . 2105) (nil fontified nil 2086 . 2087) (nil fontified nil 2079 . 2086) (nil fontified nil 2078 . 2079) (nil fontified nil 2076 . 2078) (nil fontified nil 2058 . 2076) (nil fontified nil 2055 . 2058) (nil fontified nil 2029 . 2055) (nil fontified nil 2027 . 2029) (nil fontified nil 2019 . 2027) (nil fontified nil 2017 . 2019) (nil fontified nil 2016 . 2017) (nil fontified nil 1996 . 2016) (nil fontified nil 1995 . 1996) (nil fontified nil 1993 . 1995) (nil fontified nil 1977 . 1993) (nil fontified nil 1974 . 1977) (nil fontified nil 1965 . 1974) (nil fontified nil 1963 . 1965) (nil fontified nil 1957 . 1963) (nil fontified nil 1956 . 1957) (nil fontified nil 1934 . 1956) (nil fontified nil 1932 . 1934) (nil fontified nil 1928 . 1932) (nil fontified nil 1927 . 1928) (nil fontified nil 1924 . 1927) (nil fontified nil 1918 . 1924) (nil fontified nil 1884 . 1918) (nil fontified nil 1883 . 1884) (nil fontified nil 1882 . 1883) (nil fontified nil 1879 . 1882) (nil fontified nil 1877 . 1879) (nil fontified nil 1874 . 1877) (nil fontified nil 1872 . 1874) (nil fontified nil 1870 . 1872) (nil fontified nil 1865 . 1870) (nil fontified nil 1863 . 1865) (nil fontified nil 1855 . 1863) (nil fontified nil 1854 . 1855) (nil fontified nil 1849 . 1854) (nil fontified nil 1845 . 1849) (nil fontified nil 1842 . 1845) (nil fontified nil 1790 . 1842) (nil fontified nil 1789 . 1790) (nil fontified nil 1785 . 1789) (nil fontified nil 1784 . 1785) (nil fontified nil 1782 . 1784) (nil fontified nil 1762 . 1782) (nil fontified nil 1761 . 1762) (nil fontified nil 1757 . 1761) (nil fontified nil 1733 . 1757) (nil fontified nil 1732 . 1733) (nil fontified nil 1728 . 1732) (nil fontified nil 1726 . 1728) (nil fontified nil 1720 . 1726) (nil fontified nil 1716 . 1720) (nil fontified nil 1713 . 1716) (nil fontified nil 1680 . 1713) (nil fontified nil 1679 . 1680) (nil fontified nil 1675 . 1679) (nil fontified nil 1674 . 1675) (nil fontified nil 1649 . 1674) (nil fontified nil 1648 . 1649) (nil fontified nil 1644 . 1648) (nil fontified nil 1643 . 1644) (nil fontified nil 1637 . 1643) (nil fontified nil 1633 . 1637) (nil fontified nil 1630 . 1633) (nil fontified nil 1595 . 1630) (nil fontified nil 1594 . 1595) (1594 . 2966)) nil (23152 17202 280250 200000) 0 nil]) ((1594 . 1596) (#("  " 0 2 (fontified nil)) . 1593) (1593 . 1595) (1593 . 1594) (#("  " 0 2 (fontified t face (my-face-u-1))) . 1593) 1595) nil (23152 17202 280337 100000) 0 nil]) ((1592 . 1595)) nil (23152 17202 280351 400000) 0 nil]) ((#("
  positionToIndex({ line, column }) {
    return this.chars[line - 1] + column;
  }

  locationToRange({ start, end }) {
    return [this.positionToIndex(start), this.positionToIndex(end)];
  }

  convertElementList(elements, { min, max, update }) {
    const children = [];
    for (let i = 0; i < elements.length; i++) {
      let next = { min, max, update };
      if (update) {
        next.min = elements[i].$lineno();
        if (i + 1 < elements.length) {
          next.max = elements[i + 1].$lineno();
        }
      }
      const child = this.convertElement(elements[i], next);
      if (child) {
        children.push(child);
      }
    }
    return children;
  }

  findLocation(lines, { min, max }) {
    for (let i = min; i + lines.length - 1 <= max; i++) {
      let found = true;
      for (let j = 0; j < lines.length; j++) {
        if (this.lines[i + j - 1].indexOf(lines[j]) === -1) {
          found = false;
          break;
        }
      }
      if (!found) {
        continue;
      }

      const lastLine = lines[lines.length - 1];
      const endLineNo = i + lines.length - 1;
      const endColumn = this.lines[endLineNo - 1].indexOf(lastLine) + lastLine.length
      return {
        start: { line: i, column: this.lines[i - 1].indexOf(lines[0]) },
        end: { line: endLineNo, column: endColumn },
      };
    }
    return null;
  }
" 0 1 (fontified t) 1 36 (fontified t) 36 39 (fontified t) 39 43 (fontified t) 43 49 (fontified t face font-lock-keyword-face) 49 50 (fontified t) 50 54 (fontified t face font-lock-constant-face) 54 55 (fontified t) 55 80 (fontified t) 80 81 (fontified t) 81 85 (fontified t) 85 86 (fontified t) 86 119 (fontified t) 119 122 (fontified t) 122 126 (fontified t) 126 132 (fontified t face font-lock-keyword-face) 132 134 (fontified t) 134 138 (fontified t face font-lock-constant-face) 138 139 (fontified t) 139 163 (fontified t) 163 167 (fontified t face font-lock-constant-face) 167 168 (fontified t) 168 188 (fontified t) 188 190 (fontified t) 190 191 (fontified t) 191 195 (fontified t) 195 196 (fontified t) 196 248 (fontified t) 248 251 (fontified t) 251 255 (fontified t) 255 260 (fontified t face font-lock-keyword-face) 260 261 (fontified t) 261 269 (fontified t face font-lock-variable-name-face) 269 271 (fontified t) 271 276 (fontified t) 276 278 (fontified t) 278 280 (fontified t) 280 283 (fontified t face font-lock-keyword-face) 283 285 (fontified t) 285 288 (fontified t face font-lock-keyword-face) 288 289 (fontified t) 289 290 (fontified t face font-lock-variable-name-face) 290 324 (fontified t) 324 330 (fontified t) 330 333 (fontified t face font-lock-keyword-face) 333 334 (fontified t) 334 338 (fontified t face font-lock-variable-name-face) 338 340 (fontified t) 340 362 (fontified t) 362 363 (fontified t) 363 369 (fontified t) 369 371 (fontified t face font-lock-keyword-face) 371 380 (fontified t) 380 383 (fontified t) 383 399 (fontified t) 399 401 (fontified t) 401 402 (fontified t) 402 422 (fontified t) 422 423 (rear-nonsticky t fontified t) 423 425 (fontified t) 425 433 (fontified t) 433 435 (fontified t face font-lock-keyword-face) 435 461 (fontified t) 461 464 (fontified t) 464 482 (fontified t) 482 484 (fontified t) 484 485 (fontified t) 485 492 (fontified t) 492 493 (rear-nonsticky t fontified t) 493 511 (fontified t) 511 512 (fontified t) 512 521 (fontified t) 521 522 (fontified t) 522 530 (fontified t) 530 536 (fontified t) 536 541 (fontified t face font-lock-keyword-face) 541 542 (fontified t) 542 547 (fontified t face font-lock-variable-name-face) 547 549 (fontified t) 549 550 (fontified t) 550 554 (fontified t face font-lock-constant-face) 554 555 (fontified t) 555 590 (fontified t) 590 596 (fontified t) 596 598 (fontified t face font-lock-keyword-face) 598 606 (fontified t) 606 609 (fontified t) 609 638 (fontified t) 638 639 (fontified t) 639 646 (fontified t) 646 647 (fontified t) 647 649 (fontified t) 649 651 (fontified t) 651 653 (fontified t) 653 657 (fontified t) 657 663 (fontified t face font-lock-keyword-face) 663 673 (fontified t) 673 674 (fontified t) 674 678 (fontified t) 678 679 (fontified t) 679 712 (fontified t) 712 714 (fontified t) 714 717 (fontified t) 717 721 (fontified t) 721 724 (fontified t face font-lock-keyword-face) 724 726 (fontified t) 726 729 (fontified t face font-lock-keyword-face) 729 730 (fontified t) 730 731 (fontified t face font-lock-variable-name-face) 731 771 (fontified t) 771 772 (fontified t) 772 775 (fontified t) 775 781 (fontified t) 781 784 (fontified t face font-lock-keyword-face) 784 785 (fontified t) 785 790 (fontified t face font-lock-variable-name-face) 790 792 (fontified t) 792 793 (fontified t) 793 797 (fontified t face font-lock-constant-face) 797 799 (fontified t) 799 805 (fontified t) 805 808 (fontified t face font-lock-keyword-face) 808 810 (fontified t) 810 813 (fontified t face font-lock-keyword-face) 813 814 (fontified t) 814 815 (fontified t face font-lock-variable-name-face) 815 842 (fontified t) 842 843 (fontified t) 843 846 (fontified t) 846 854 (fontified t) 854 856 (fontified t face font-lock-keyword-face) 856 858 (fontified t) 858 862 (fontified t face font-lock-constant-face) 862 896 (fontified t) 896 897 (rear-nonsticky t fontified t) 897 904 (fontified t) 904 905 (fontified t) 905 908 (fontified t) 908 923 (fontified t) 923 925 (fontified t) 925 926 (fontified t) 926 931 (fontified t face font-lock-constant-face) 931 932 (fontified t) 932 933 (fontified t) 933 943 (fontified t) 943 948 (fontified t face font-lock-keyword-face) 948 949 (fontified t) 949 950 (fontified t) 950 960 (fontified t) 960 968 (fontified t) 968 974 (fontified t) 974 976 (fontified t face font-lock-keyword-face) 976 979 (fontified t) 979 985 (fontified t) 985 988 (fontified t) 988 996 (fontified t) 996 1004 (fontified t face font-lock-keyword-face) 1004 1005 (fontified t) 1005 1006 (fontified t) 1006 1013 (fontified t) 1013 1014 (fontified t) 1014 1015 (fontified t) 1015 1021 (fontified t) 1021 1026 (fontified t face font-lock-keyword-face) 1026 1027 (fontified t) 1027 1035 (fontified t face font-lock-variable-name-face) 1035 1037 (fontified t) 1037 1038 (fontified t) 1038 1060 (fontified t) 1060 1061 (rear-nonsticky t fontified t) 1061 1062 (fontified t) 1062 1063 (fontified t) 1063 1069 (fontified t) 1069 1074 (fontified t face font-lock-keyword-face) 1074 1075 (fontified t) 1075 1084 (fontified t face font-lock-variable-name-face) 1084 1086 (fontified t) 1086 1087 (fontified t) 1087 1102 (fontified t) 1102 1103 (rear-nonsticky t fontified t) 1103 1107 (fontified t) 1107 1108 (fontified t) 1108 1109 (fontified t) 1109 1115 (fontified t) 1115 1120 (fontified t face font-lock-keyword-face) 1120 1121 (fontified t) 1121 1130 (fontified t face font-lock-variable-name-face) 1130 1132 (fontified t) 1132 1133 (fontified t) 1133 1137 (fontified t face font-lock-constant-face) 1137 1153 (fontified t) 1153 1157 (fontified t) 1157 1159 (fontified t) 1159 1167 (fontified t) 1167 1175 (fontified t) 1175 1179 (fontified t) 1179 1186 (fontified t) 1186 1187 (rear-nonsticky t fontified t) 1187 1193 (fontified t) 1193 1194 (rear-nonsticky t fontified t) 1194 1195 (fontified t) 1195 1201 (fontified t) 1201 1207 (fontified t face font-lock-keyword-face) 1207 1210 (fontified t) 1210 1224 (fontified t) 1224 1226 (fontified t) 1226 1235 (fontified t) 1235 1244 (fontified t) 1244 1248 (fontified t face font-lock-constant-face) 1248 1280 (fontified t) 1280 1282 (fontified t) 1282 1283 (fontified t) 1283 1295 (fontified t) 1295 1297 (fontified t) 1297 1314 (fontified t) 1314 1322 (fontified t) 1322 1323 (fontified t) 1323 1332 (fontified t) 1332 1333 (fontified t) 1333 1335 (fontified t) 1335 1336 (fontified t) 1336 1344 (fontified t) 1344 1345 (fontified t) 1345 1350 (fontified t) 1350 1351 (fontified t) 1351 1355 (fontified t) 1355 1361 (fontified t face font-lock-keyword-face) 1361 1362 (fontified t) 1362 1366 (fontified t face font-lock-constant-face) 1366 1367 (fontified t) 1367 1368 (fontified t) 1368 1371 (fontified t) 1371 1372 (fontified t)) . 448) (undo-tree-id742 . -1038) (undo-tree-id743 . -1027) (undo-tree-id744 . -1332) (undo-tree-id745 . -512) (undo-tree-id746 . -1015) (undo-tree-id747 . -1179) (undo-tree-id748 . -1345) (undo-tree-id749 . -1345) (undo-tree-id750 . -653) (undo-tree-id751 . -86) (undo-tree-id752 . -968) (undo-tree-id753 . -858) (undo-tree-id754 . -1015) (undo-tree-id755 . -590) (undo-tree-id756 . -1015) (undo-tree-id757 . -1372) 1820 (t 23152 17046 438746 300000)) nil (23152 17202 280439 800000) 0 nil]) ((#("      " 0 6 (fontified nil)) . 1462) (1462 . 1468) (1462 . 1463)) nil (23152 17046 231843 0) 0 nil]) ((#("
" 0 1 (rear-nonsticky t fontified t)) . 1792) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1)) nil (23152 17046 231895 100000) 0 nil]) ((#("      }" 0 7 (fontified t)) . 1792) (undo-tree-id735 . -7)) nil (23152 17046 231911 800000) 0 nil]) ((#("  " 0 2 (fontified t)) . -1789) 1783) nil (23152 17046 231922 300000) 0 nil]) ((#("  " 0 2 (fontified t)) . -1738) 1738) nil (23152 17046 231932 100000) 0 nil]) ((#("  " 0 2 (fontified t)) . -1665) 1663) nil (23152 17046 231940 800000) 0 nil]) ((#("  " 0 2 (fontified t)) . -1648) 1648) nil (23152 17046 231949 100000) 0 nil]) ((#("  " 0 2 (fontified t)) . -1562) 1562) nil (23152 17046 231957 400000) 0 nil]) ((#("  " 0 2 (fontified t)) . -1516) 1516) nil (23152 17046 231966 900000) 0 nil]) ((#("  " 0 2 (fontified t)) . -1468) 1462) nil (23152 17046 231974 800000) 0 nil]) ((1444 . 1453)) nil (23152 17046 231982 700000) 0 nil]) ((1435 . 1444)) nil (23152 17046 231990 300000) 0 nil]) ((#("  " 0 2 (fontified nil face (my-face-u-1))) . -1442) (1444 . 1445)) nil (23152 17046 231998 600000) 0 nil]) ((1435 . 1444)) nil (23152 17046 232008 400000) 0 nil]) ((1426 . 1427)) nil (23152 17046 232018 200000) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-string-face)) . -1426)) nil (23152 17046 232028 0) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-string-face)) . -1427)) nil (23152 17046 232040 100000) 0 nil]) ((1426 . 1428)) nil (23152 17046 232050 300000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1416) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (t 23152 17033 43137 800000)) nil (23152 17046 232071 500000) 0 nil]) ((#("      " 0 6 (fontified nil)) . 1416) (1416 . 1422) (1416 . 1417) (t 23152 17028 280648 200000)) nil (23152 17032 899424 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 1416) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (t 23152 17025 963647 600000)) nil (23152 17028 129365 500000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1247) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1)) nil (23152 17025 789502 300000) 0 nil]) ((#("      console.log(lines, this.lines);" 0 25 (fontified t) 25 29 (fontified t face font-lock-constant-face) 29 35 (fontified t) 35 37 (fontified t)) . 1247) (undo-tree-id727 . -37) (t 23152 16994 430360 100000)) nil (23152 17025 789535 100000) 0 nil]) ((1203 . 1207) (t 23152 16985 975633 700000)) nil (23152 16994 249736 900000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1165) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1)) nil (23152 16985 787957 900000) 0 nil]) ((#("    console.log(min, max);" 0 20 (fontified t) 20 26 (fontified t)) . 1165) (undo-tree-id722 . -26) (t 23152 16978 216530 300000)) nil (23152 16985 787989 200000) 0 nil]) ((1189 . 1191)) nil (23152 16978 29787 100000) 0 nil]) ((1169 . 1189)) nil (23152 16978 29805 300000) 0 nil]) ((1164 . 1169) (t 23152 16972 583297 0)) nil (23152 16978 29814 300000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1243) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . 1) (undo-tree-id718 . -1)) nil (23152 16972 356762 500000) 0 nil]) ((#("      " 0 6 (fontified nil)) . 1243) (1243 . 1249) (1243 . 1244) (t 23152 16959 216891 200000)) nil (23152 16972 356797 200000) 0 nil]) ((1279 . 1280)) nil (23152 16959 19920 400000) 0 nil]) ((1261 . 1278)) nil (23152 16959 19944 100000) 0 nil]) ((1249 . 1262)) nil (23152 16959 19953 600000) 0 nil]) ((1242 . 1249) (t 23152 16942 500284 600000)) nil (23152 16959 19961 500000) 0 nil]) ((1314 . 1318)) nil (23152 16942 304727 400000) 0 nil]) ((#("      consolel.l

" 0 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t)) . 1409) (undo-tree-id709 . -18) (undo-tree-id710 . -18) (undo-tree-id711 . -17) (undo-tree-id712 . -17) (undo-tree-id713 . -18) (undo-tree-id714 . -18) 1427) nil (23152 16942 304802 900000) 0 nil]) ((1415 . 1425)) nil (23152 16942 304822 600000) 0 nil]) ((1409 . 1415) (#("      " 0 6 (fontified nil)) . 1408) (1408 . 1414) (1408 . 1409) (#("      " 0 6 (fontified t face (my-face-u-1))) . 1408) 1414) nil (23152 16942 304839 600000) 0 nil]) ((1407 . 1414) (t 23152 16923 458945 500000)) nil (23152 16942 304853 200000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1165) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1)) nil (23152 16923 257427 300000) 0 nil]) ((#("    console.log(lines);" 0 23 (fontified t)) . 1165) (undo-tree-id708 . -23) (t 23152 16914 817192 300000)) nil (23152 16923 257453 300000) 0 nil]) ((1187 . 1188)) nil (23152 16914 623914 200000) 0 nil]) ((1181 . 1186)) nil (23152 16914 623942 500000) 0 nil]) ((1169 . 1182)) nil (23152 16914 623955 0) 0 nil]) ((1164 . 1169) (t 23152 16891 889063 300000)) nil (23152 16914 623964 800000) 0 nil]) ((2753 . 2757) (#(" " 0 1 (fontified nil)) . 2753) (2752 . 2753)) nil (23152 16891 713281 900000) 0 nil]) ((2733 . 2740) (#(" " 0 1 (fontified t)) . 2733) 2734) nil (23152 16891 713306 400000) 0 nil]) ((#("b" 0 1 (fontified t)) . -2748)) nil (23152 16891 713317 0) 0 nil]) ((2748 . 2749)) nil (23152 16891 713325 300000) 0 nil]) ((2733 . 2747)) nil (23152 16891 713332 100000) 0 nil]) ((2732 . 2734)) nil (23152 16891 713338 500000) 0 nil]) ((#("`" 0 1 (fontified t)) . -2732)) nil (23152 16891 713344 900000) 0 nil]) ((#("}" 0 1 (fontified t)) . -2733) (undo-tree-id703 . 1) (undo-tree-id704 . -1)) nil (23152 16891 713376 700000) 0 nil]) ((2731 . 2734)) nil (23152 16891 713389 100000) 0 nil]) ((2726 . 2730)) nil (23152 16891 713409 100000) 0 nil]) ((2722 . 2727)) nil (23152 16891 713419 0) 0 nil]) ((2717 . 2722) (t 23152 16826 288997 800000)) nil (23152 16891 713450 300000) 0 nil]) ((2017 . 2023)) nil (23152 16826 110111 500000) 0 nil]) ((#("lastLineNo" 0 10 (fontified t)) . 2017) (undo-tree-id702 . -10) (t 23152 16807 954625 900000)) nil (23152 16826 110164 300000) 0 nil]) ((2429 . 2434)) nil (23152 16807 752515 200000) 0 nil]) ((2399 . 2406) (t 23152 16800 442129 200000)) nil (23152 16807 752538 200000) 0 nil]) ((#("
" 0 1 (rear-nonsticky t fontified t)) . 1101) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1)) nil (23152 16800 276305 900000) 0 nil]) ((#("    console.log(children);" 0 26 (fontified t)) . 1101) (undo-tree-id701 . -26) (t 23152 16791 406760 500000)) nil (23152 16800 276331 200000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1101) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . 1) (undo-tree-id697 . -1)) nil (23152 16791 217077 0) 0 nil]) ((#("    " 0 4 (fontified nil)) . 1101) (1101 . 1105) (1101 . 1102) (t 23152 16777 225249 900000)) nil (23152 16791 217106 800000) 0 nil]) ((1125 . 1127)) nil (23152 16777 47701 100000) 0 nil]) ((1105 . 1125)) nil (23152 16777 47724 500000) 0 nil]) ((1100 . 1105) (t 23152 16762 400975 800000)) nil (23152 16777 47737 700000) 0 nil]) ((#("!" 0 1 (fontified t)) . -1048) (t 23152 16689 327592 700000)) nil (23152 16762 208925 600000) 0 nil]) ((#("endCol" 0 6 (fontified t)) . -1749) (1755 . 1764) 1755) nil (23152 16689 135082 200000) 0 nil]) ((1749 . 1755)) nil (23152 16689 135110 900000) 0 nil]) ((#("endLineNo" 0 9 (fontified t)) . 1749) (undo-tree-id692 . -9) (undo-tree-id693 . -9)) nil (23152 16689 135147 900000) 0 nil]) ((#("end" 0 3 (fontified t)) . -1749) (1752 . 1761) 1752) nil (23152 16689 135163 700000) 0 nil]) ((1749 . 1752) (t 23152 16677 235851 800000)) nil (23152 16689 135174 300000) 0 nil]) ((#("lines" 0 5 (fontified t)) . 1607) (undo-tree-id691 . -5)) nil (23152 16677 64035 500000) 0 nil]) ((nil rear-nonsticky nil 1606 . 1607) (nil fontified nil 1599 . 1607) (1599 . 1607) (t 23152 16647 203650 0)) nil (23152 16677 64069 500000) 0 nil]) ((1521 . 1525) (t 23152 16639 648092 400000)) nil (23152 16647 30756 400000) 0 nil]) ((1730 . 1732)) nil (23152 16639 470103 200000) 0 nil]) ((1567 . 1569)) nil (23152 16639 470128 500000) 0 nil]) ((1500 . 1502)) nil (23152 16639 470140 200000) 0 nil]) ((#("las" 0 3 (fontified t)) . -1579) (1582 . 1590) 1582) nil (23152 16639 470153 100000) 0 nil]) ((1579 . 1582)) nil (23152 16639 470166 600000) 0 nil]) ((1477 . 1478)) nil (23152 16639 470175 700000) 0 nil]) ((nil rear-nonsticky nil 1476 . 1477) (nil fontified nil 1454 . 1477) (1454 . 1477)) nil (23152 16639 470187 0) 0 nil]) ((#("lines[lines.length - 1]" 0 23 (fontified t)) . 1555) (undo-tree-id686 . -23) (undo-tree-id687 . 1) (undo-tree-id688 . -23) (undo-tree-id689 . 18) (undo-tree-id690 . -6) 1578) nil (23152 16639 470239 100000) 0 nil]) ((1437 . 1454)) nil (23152 16639 470252 400000) 0 nil]) ((1428 . 1437) (t 23152 16607 576000 900000)) nil (23152 16639 470263 300000) 0 nil]) ((1508 . 1515)) nil (23152 16607 378403 600000) 0 nil] [nil nil ((#(" - 1" 0 4 (fontified t)) . 1508) (undo-tree-id679 . -4)) ((1508 . 1512)) (23152 16606 59010 200000) 0 nil]) ((#(".length" 0 7 (fontified t)) . 1508) (undo-tree-id680 . -7)) nil (23152 16606 59589 400000) 0 nil]) ((#(" + lines" 0 3 (fontified t) 3 8 (fontified t)) . 1508) (undo-tree-id681 . -8)) nil (23152 16606 59086 400000) 0 nil]) ((#("i" 0 1 (fontified t)) . 1508) (undo-tree-id682 . -1)) nil (23152 16606 59100 0) 0 nil]) ((nil fontified nil 1576 . 1577) (nil fontified nil 1565 . 1576) (nil fontified nil 1530 . 1565) (nil fontified nil 1528 . 1530) (nil fontified nil 1512 . 1528) (nil fontified nil 1501 . 1512) (nil fontified nil 1497 . 1501) (1497 . 1577)) nil (23152 16606 59114 400000) 0 nil]) ((#("this.lines[i + lines.length - 1].indexOf(lines[lines.length - 1]) + lines.length" 0 4 (fontified t face font-lock-constant-face) 4 15 (fontified t) 15 31 (fontified t) 31 33 (fontified t) 33 68 (fontified t) 68 79 (fontified t) 79 80 (rear-nonsticky t fontified t)) . 1630) (undo-tree-id683 . -80) (undo-tree-id684 . -80) 1710) nil (23152 16606 59134 0) 0 nil]) ((1613 . 1620)) nil (23152 16606 59146 900000) 0 nil]) ((1469 . 1470)) nil (23152 16606 59156 300000) 0 nil]) ((nil rear-nonsticky nil 1468 . 1469) (nil fontified nil 1453 . 1469) (1453 . 1469)) nil (23152 16606 59169 900000) 0 nil]) ((#("i + lines.length" 0 16 (fontified t)) . 1596) (undo-tree-id685 . -16) 1612) nil (23152 16606 59184 200000) 0 nil]) ((1437 . 1453)) nil (23152 16606 59193 700000) 0 nil]) ((1428 . 1437)) nil (23152 16606 59200 100000) 0 nil]) ((1449 . 1455)) nil (23152 16606 59206 900000) 0 nil]) ((#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -1449)) nil (23152 16606 59213 700000) 0 nil]) ((1437 . 1450)) nil (23152 16606 59221 600000) 0 nil]) ((1428 . 1437) (t 23152 16572 222569 400000)) nil (23152 16606 59229 900000) 0 nil]) ((1650 . 1651)) nil (23152 16572 39708 900000) 0 nil]) ((#(";" 0 1 (fontified t)) . -1650)) nil (23152 16572 39736 500000) 0 nil]) ((#(" " 0 1 (fontified t)) . -1651)) nil (23152 16572 39751 600000) 0 nil]) ((#("         " 0 9 (fontified t)) . -1652) 1651) nil (23152 16572 39766 300000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1651) (undo-tree-id666 . -1) (undo-tree-id667 . -1)) nil (23152 16572 39808 200000) 0 nil]) ((#("           " 0 11 (fontified t)) . -1562) 1561) nil (23152 16572 39823 400000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1561) (undo-tree-id668 . -1) (undo-tree-id669 . -1)) nil (23152 16572 39846 800000) 0 nil]) ((#("           " 0 11 (fontified t)) . -1538) 1537) nil (23152 16572 39861 100000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1537) (undo-tree-id670 . -1) (undo-tree-id671 . -1)) nil (23152 16572 39883 800000) 0 nil]) ((1517 . 1518)) nil (23152 16572 39895 500000) 0 nil]) ((#("," 0 1 (fontified t)) . -1517)) nil (23152 16572 39905 300000) 0 nil]) ((#(" " 0 1 (fontified t)) . -1518)) nil (23152 16572 39916 200000) 0 nil]) ((#("         " 0 9 (fontified t)) . -1519) 1518) nil (23152 16572 39928 300000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1518) (undo-tree-id672 . -1) (undo-tree-id673 . -1)) nil (23152 16572 39950 600000) 0 nil]) ((#("           " 0 11 (fontified t)) . -1474) 1473) nil (23152 16572 39963 400000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1473) (undo-tree-id674 . -1) (undo-tree-id675 . -1)) nil (23152 16572 39998 900000) 0 nil]) ((#("           " 0 11 (fontified t)) . -1465) (undo-tree-id676 . -7) 1464) nil (23152 16572 40014 400000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1464) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (t 23152 16563 133907 500000)) nil (23152 16572 40150 400000) 0 nil]) ((1733 . 1734)) nil (23152 16562 950696 700000) 0 nil]) ((#("      
" 0 6 (fontified t face (my-face-u-1)) 6 7 (fontified t)) . 1742) (undo-tree-id631 . -7) (undo-tree-id632 . -7) (undo-tree-id633 . -7) (undo-tree-id634 . -7) (undo-tree-id635 . -7) (undo-tree-id636 . -7)) nil (23152 16562 950751 100000) 0 nil]) ((#("  " 0 2 (fontified t)) . -1740)) nil (23152 16562 950764 300000) 0 nil]) ((#("  " 0 2 (fontified t)) . -1732)) nil (23152 16562 950772 200000) 0 nil]) ((#("  " 0 2 (fontified t)) . -1721)) nil (23152 16562 950780 100000) 0 nil]) ((#("  " 0 2 (fontified t)) . -1621) 1621) nil (23152 16562 950788 100000) 0 nil]) ((#("  " 0 2 (fontified t)) . -1585) 1583) nil (23152 16562 950796 0) 0 nil]) ((#("  " 0 2 (fontified t)) . -1566) 1566) nil (23152 16562 950802 400000) 0 nil]) ((#("  " 0 2 (fontified t)) . -1553)) nil (23152 16562 950809 600000) 0 nil]) ((#("  " 0 2 (fontified t)) . -1498) 1498) nil (23152 16562 950816 400000) 0 nil]) ((#("  " 0 2 (fontified t)) . -1477) 1475) nil (23152 16562 950823 900000) 0 nil]) ((#("  " 0 2 (fontified t)) . -1456) 1454) nil (23152 16562 950831 100000) 0 nil]) ((#("  " 0 2 (fontified t)) . -1437) 1429) nil (23152 16562 950838 700000) 0 nil]) ((#("  " 0 2 (fontified nil)) . -1416) (#("      " 0 6 (fontified nil)) . 1409) (1409 . 1415) (1409 . 1410)) nil (23152 16562 950848 100000) 0 nil]) ((nil fontified nil 1764 . 1765) (nil fontified nil 1755 . 1764) (nil fontified nil 1754 . 1755) (nil fontified nil 1743 . 1754) (nil fontified nil 1742 . 1743) (nil fontified nil 1728 . 1742) (nil fontified nil 1727 . 1728) (nil fontified nil 1726 . 1727) (nil fontified nil 1725 . 1726) (nil fontified nil 1714 . 1725) (nil fontified nil 1679 . 1714) (nil fontified nil 1677 . 1679) (nil fontified nil 1661 . 1677) (nil fontified nil 1650 . 1661) (nil fontified nil 1646 . 1650) (nil fontified nil 1645 . 1646) (nil fontified nil 1624 . 1645) (nil fontified nil 1586 . 1624) (nil fontified nil 1583 . 1586) (nil fontified nil 1567 . 1583) (nil fontified nil 1566 . 1567) (nil fontified nil 1564 . 1566) (nil fontified nil 1519 . 1564) (nil fontified nil 1515 . 1519) (nil fontified nil 1493 . 1515) (nil fontified nil 1470 . 1493) (nil fontified nil 1467 . 1470) (nil fontified nil 1449 . 1467) (nil fontified nil 1446 . 1449) (nil fontified nil 1440 . 1446) (nil fontified nil 1430 . 1440) (nil fontified nil 1427 . 1430) (nil fontified nil 1419 . 1427) (nil fontified nil 1417 . 1419) (nil fontified nil 1409 . 1417) (1409 . 1765)) nil (23152 16562 950877 900000) 0 nil]) ((1408 . 1415)) nil (23152 16562 950895 700000) 0 nil]) ((#("        if (found) {
          return {
            start: {
              line: i,
              column: this.lines[i - 1].indexOf(lines[0]),
            },
            end: {
              line: i + lines.length,
              column: this.lines[i + lines.length - 1].indexOf(lines[lines.length - 1]) + lines.length;
            },
          }
        }
" 0 8 (fontified t) 8 10 (fontified t face font-lock-keyword-face) 10 18 (fontified t) 18 21 (fontified t) 21 31 (fontified t) 31 37 (fontified t face font-lock-keyword-face) 37 40 (fontified t) 40 58 (fontified t) 58 61 (fontified t) 61 84 (fontified t) 84 106 (fontified t) 106 110 (fontified t face font-lock-constant-face) 110 155 (fontified t) 155 157 (fontified t) 157 158 (fontified t) 158 174 (fontified t) 174 177 (fontified t) 177 215 (fontified t) 215 236 (fontified t) 236 237 (fontified t) 237 241 (fontified t face font-lock-constant-face) 241 252 (fontified t) 252 268 (fontified t) 268 270 (fontified t) 270 305 (fontified t) 305 316 (fontified t) 316 317 (rear-nonsticky t fontified t) 317 318 (fontified t) 318 319 (fontified t) 319 333 (fontified t) 333 334 (fontified t) 334 345 (fontified t) 345 346 (fontified t) 346 355 (fontified t) 355 356 (rear-nonsticky t fontified t)) . 1401) (undo-tree-id637 . -356) (undo-tree-id638 . -143) (undo-tree-id639 . -143) (undo-tree-id640 . -84) (undo-tree-id641 . -84) (undo-tree-id642 . -61) (undo-tree-id643 . -61) (undo-tree-id644 . -158) (undo-tree-id645 . -158) (undo-tree-id646 . -317) (undo-tree-id647 . -177) (undo-tree-id648 . -177) (undo-tree-id649 . -284) (undo-tree-id650 . -215) (undo-tree-id651 . -305) (undo-tree-id652 . -356) (undo-tree-id653 . -356) (undo-tree-id654 . -346) (undo-tree-id655 . -346) (undo-tree-id656 . -334) (undo-tree-id657 . -334) (undo-tree-id658 . -319) (undo-tree-id659 . -319) (undo-tree-id660 . -215) (undo-tree-id661 . -215) (undo-tree-id662 . -21) (undo-tree-id663 . -21) (undo-tree-id664 . -12) (undo-tree-id665 . -356)) nil (23152 16562 951001 0) 0 nil] [nil nil ((#("        if (found) {
          return {
            start: {
              line: i,
              column: this.lines[i - 1].indexOf(lines[0]),
            },
            end: {
              line: i + lines.length,
              column: this.lines[i + lines.length - 1].indexOf(lines[lines.length - 1]) + lines.length;
            },
          }
" 0 8 (fontified t) 8 10 (fontified t face font-lock-keyword-face) 10 18 (fontified t) 18 21 (fontified t) 21 31 (fontified t) 31 37 (fontified t face font-lock-keyword-face) 37 40 (fontified t) 40 58 (fontified t) 58 61 (fontified t) 61 84 (fontified t) 84 106 (fontified t) 106 110 (fontified t face font-lock-constant-face) 110 155 (fontified t) 155 157 (fontified t) 157 158 (fontified t) 158 174 (fontified t) 174 177 (fontified t) 177 215 (fontified t) 215 236 (fontified t) 236 237 (fontified t) 237 241 (fontified t face font-lock-constant-face) 241 252 (fontified t) 252 268 (fontified t) 268 270 (fontified t) 270 305 (fontified t) 305 316 (fontified t) 316 317 (rear-nonsticky t fontified t) 317 318 (fontified t) 318 319 (fontified t) 319 333 (fontified t) 333 334 (fontified t) 334 345 (fontified t) 345 346 (fontified t)) . 1401) (undo-tree-id598 . -143) (undo-tree-id599 . -143) (undo-tree-id600 . -84) (undo-tree-id601 . -84) (undo-tree-id602 . -61) (undo-tree-id603 . -61) (undo-tree-id604 . -158) (undo-tree-id605 . -158) (undo-tree-id606 . -317) (undo-tree-id607 . -40) (undo-tree-id608 . -40) (undo-tree-id609 . -177) (undo-tree-id610 . -177) (undo-tree-id611 . -284) (undo-tree-id612 . -215) (undo-tree-id613 . -109) (undo-tree-id614 . -317) (undo-tree-id615 . -305) (undo-tree-id616 . -346) (undo-tree-id617 . -346) (undo-tree-id618 . -334) (undo-tree-id619 . -334) (undo-tree-id620 . -319) (undo-tree-id621 . -319) (undo-tree-id622 . -215) (undo-tree-id623 . -215) (undo-tree-id624 . -21) (undo-tree-id625 . -21) (undo-tree-id626 . -12) (undo-tree-id627 . -346) (undo-tree-id628 . -346) 1747) ((1401 . 1747)) (23152 16548 130043 700000) 0 nil]) ((1414 . 1418)) nil (23152 16548 130730 500000) 0 nil]) ((#("a" 0 1 (fontified t)) . -1414)) nil (23152 16548 130082 200000) 0 nil]) ((1413 . 1415)) nil (23152 16548 130090 500000) 0 nil]) ((#("j === lines.length - 1" 0 22 (fontified t)) . 1413) (undo-tree-id629 . -22) (undo-tree-id630 . -22) 1435) nil (23152 16548 130104 800000) 0 nil]) ((1359 . 1373)) nil (23152 16548 130113 500000) 0 nil]) ((1348 . 1359)) nil (23152 16548 130121 100000) 0 nil]) ((1238 . 1243)) nil (23152 16548 130128 300000) 0 nil]) ((#("f" 0 1 (fontified t)) . -1238)) nil (23152 16548 130134 300000) 0 nil]) ((1238 . 1239)) nil (23152 16548 130141 800000) 0 nil]) ((1230 . 1235)) nil (23152 16548 130147 900000) 0 nil]) ((#("success" 0 7 (fontified t face font-lock-variable-name-face)) . 1230)) nil (23152 16548 130154 300000) 0 nil]) ((1228 . 1240)) nil (23152 16548 130161 100000) 0 nil]) ((#("x" 0 1 (fontified t)) . -1228)) nil (23152 16548 130170 900000) 0 nil]) ((1226 . 1229)) nil (23152 16548 130181 500000) 0 nil]) ((1219 . 1226) (t 23152 16514 813007 900000)) nil (23152 16548 130189 0) 0 nil]) ((#("
  // convertListItem(elem, lastLineNo) {
  //   return {
  //     type: 'ListItem',
  //     children: [],
  //     loc: {},
  //     range: [],
  //     raw: '',
  //   };
  // }

  // convertList(elem, lastLineNo) {
  //   const lineno = elem.$lineno();
  //   const children = [];
  //   const elements = elem.$blocks();
  //   for (let i = 0; i < elements.length; i++) {
  //     const next =
  //       i + 1 < elements.length ? elements[i + 1].$lineno() - 1 : lastLineNo;
  //     children.push(this.convertElement(elements[i], next));
  //   }
  //   return {
  //     type: \"List\",
  //     children,
  //     loc: {
  //       start: { line: lineno, column: 0 },
  //       end: { line: lastLineNo, column: this.lines[lastLineNo - 1].length }
  //     },
  //     range: [this.chars[lineno - 1], this.chars[lastLineNo]],
  //     raw: this.lines.slice(lineno - 1, lastLineNo).join('\\n'),
  //   };
  // }
" 0 1 (fontified t) 1 3 (fontified t) 3 6 (fontified t face font-lock-comment-delimiter-face) 6 28 (fontified t face font-lock-comment-face) 28 38 (fontified t face font-lock-comment-face) 38 39 (fontified t face font-lock-comment-face) 39 42 (fontified t face font-lock-comment-face) 42 44 (fontified t) 44 47 (fontified t face font-lock-comment-delimiter-face) 47 49 (fontified t face font-lock-comment-delimiter-face) 49 55 (fontified t face font-lock-comment-face) 55 58 (fontified t face font-lock-comment-face) 58 60 (fontified t) 60 63 (fontified t face font-lock-comment-delimiter-face) 63 67 (fontified t face font-lock-comment-delimiter-face) 67 72 (fontified t face font-lock-comment-face) 72 73 (fontified t face font-lock-comment-face) 73 83 (fontified t face font-lock-comment-face) 83 85 (fontified t face font-lock-comment-face) 85 87 (fontified t) 87 90 (fontified t face font-lock-comment-delimiter-face) 90 94 (fontified t face font-lock-comment-delimiter-face) 94 103 (fontified t face font-lock-comment-face) 103 108 (fontified t face font-lock-comment-face) 108 110 (fontified t) 110 113 (fontified t face font-lock-comment-delimiter-face) 113 117 (fontified t face font-lock-comment-delimiter-face) 117 121 (fontified t face font-lock-comment-face) 121 126 (fontified t face font-lock-comment-face) 126 128 (fontified t) 128 131 (fontified t face font-lock-comment-delimiter-face) 131 135 (fontified t face font-lock-comment-delimiter-face) 135 141 (fontified t face font-lock-comment-face) 141 146 (fontified t face font-lock-comment-face) 146 148 (fontified t) 148 151 (fontified t face font-lock-comment-delimiter-face) 151 155 (fontified t face font-lock-comment-delimiter-face) 155 159 (fontified t face font-lock-comment-face) 159 160 (fontified t face font-lock-comment-face) 160 162 (fontified t face font-lock-comment-face) 162 163 (fontified t face font-lock-comment-face) 163 164 (fontified t face font-lock-comment-face) 164 166 (fontified t) 166 169 (fontified t face font-lock-comment-delimiter-face) 169 171 (fontified t face font-lock-comment-delimiter-face) 171 173 (fontified t face font-lock-comment-face) 173 174 (rear-nonsticky t fontified t face font-lock-comment-face) 174 176 (fontified t) 176 179 (fontified t face font-lock-comment-delimiter-face) 179 180 (fontified t face font-lock-comment-face) 180 181 (fontified t face font-lock-comment-face) 181 182 (fontified t) 182 184 (fontified t) 184 187 (fontified t face font-lock-comment-delimiter-face) 187 205 (fontified t face font-lock-comment-face) 205 215 (fontified t face font-lock-comment-face) 215 216 (fontified t face font-lock-comment-face) 216 219 (fontified t face font-lock-comment-face) 219 221 (fontified t) 221 224 (fontified t face font-lock-comment-delimiter-face) 224 226 (fontified t face font-lock-comment-delimiter-face) 226 231 (fontified t face font-lock-comment-face) 231 232 (fontified t face font-lock-comment-face) 232 238 (fontified t face font-lock-comment-face) 238 257 (fontified t face font-lock-comment-face) 257 259 (fontified t) 259 262 (fontified t face font-lock-comment-delimiter-face) 262 264 (fontified t face font-lock-comment-delimiter-face) 264 269 (fontified t face font-lock-comment-face) 269 270 (fontified t face font-lock-comment-face) 270 278 (fontified t face font-lock-comment-face) 278 285 (fontified t face font-lock-comment-face) 285 287 (fontified t) 287 290 (fontified t face font-lock-comment-delimiter-face) 290 292 (fontified t face font-lock-comment-delimiter-face) 292 297 (fontified t face font-lock-comment-face) 297 298 (fontified t face font-lock-comment-face) 298 306 (fontified t face font-lock-comment-face) 306 325 (fontified t face font-lock-comment-face) 325 327 (fontified t) 327 330 (fontified t face font-lock-comment-delimiter-face) 330 332 (fontified t face font-lock-comment-delimiter-face) 332 335 (fontified t face font-lock-comment-face) 335 337 (fontified t face font-lock-comment-face) 337 340 (fontified t face font-lock-comment-face) 340 341 (fontified t face font-lock-comment-face) 341 342 (fontified t face font-lock-comment-face) 342 376 (fontified t face font-lock-comment-face) 376 378 (fontified t) 378 381 (fontified t face font-lock-comment-delimiter-face) 381 385 (fontified t face font-lock-comment-delimiter-face) 385 390 (fontified t face font-lock-comment-face) 390 391 (fontified t face font-lock-comment-face) 391 395 (fontified t face font-lock-comment-face) 395 398 (fontified t face font-lock-comment-face) 398 400 (fontified t) 400 403 (fontified t face font-lock-comment-delimiter-face) 403 409 (fontified t face font-lock-comment-delimiter-face) 409 479 (fontified t face font-lock-comment-face) 479 481 (fontified t) 481 484 (fontified t face font-lock-comment-delimiter-face) 484 488 (fontified t face font-lock-comment-delimiter-face) 488 502 (fontified t face font-lock-comment-face) 502 506 (fontified t face font-lock-comment-face) 506 543 (fontified t face font-lock-comment-face) 543 545 (fontified t) 545 548 (fontified t face font-lock-comment-delimiter-face) 548 550 (fontified t face font-lock-comment-delimiter-face) 550 552 (fontified t face font-lock-comment-face) 552 554 (fontified t) 554 557 (fontified t face font-lock-comment-delimiter-face) 557 559 (fontified t face font-lock-comment-delimiter-face) 559 565 (fontified t face font-lock-comment-face) 565 568 (fontified t face font-lock-comment-face) 568 570 (fontified t) 570 573 (fontified t face font-lock-comment-delimiter-face) 573 577 (fontified t face font-lock-comment-delimiter-face) 577 583 (fontified t face font-lock-comment-face) 583 589 (fontified t face font-lock-comment-face) 589 591 (fontified t face font-lock-comment-face) 591 593 (fontified t) 593 596 (fontified t face font-lock-comment-delimiter-face) 596 600 (fontified t face font-lock-comment-delimiter-face) 600 609 (fontified t face font-lock-comment-face) 609 610 (fontified t face font-lock-comment-face) 610 612 (fontified t) 612 615 (fontified t face font-lock-comment-delimiter-face) 615 619 (fontified t face font-lock-comment-delimiter-face) 619 626 (fontified t face font-lock-comment-face) 626 628 (fontified t) 628 631 (fontified t face font-lock-comment-delimiter-face) 631 637 (fontified t face font-lock-comment-delimiter-face) 637 673 (fontified t face font-lock-comment-face) 673 675 (fontified t) 675 678 (fontified t face font-lock-comment-delimiter-face) 678 684 (fontified t face font-lock-comment-delimiter-face) 684 717 (fontified t face font-lock-comment-face) 717 721 (fontified t face font-lock-comment-face) 721 753 (fontified t face font-lock-comment-face) 753 755 (fontified t) 755 758 (fontified t face font-lock-comment-delimiter-face) 758 762 (fontified t face font-lock-comment-delimiter-face) 762 765 (fontified t face font-lock-comment-face) 765 767 (fontified t) 767 770 (fontified t face font-lock-comment-delimiter-face) 770 774 (fontified t face font-lock-comment-delimiter-face) 774 782 (fontified t face font-lock-comment-face) 782 786 (fontified t face font-lock-comment-face) 786 806 (fontified t face font-lock-comment-face) 806 810 (fontified t face font-lock-comment-face) 810 831 (fontified t face font-lock-comment-face) 831 833 (fontified t) 833 836 (fontified t face font-lock-comment-delimiter-face) 836 840 (fontified t face font-lock-comment-delimiter-face) 840 844 (fontified t face font-lock-comment-face) 844 845 (fontified t face font-lock-comment-face) 845 849 (fontified t face font-lock-comment-face) 849 891 (fontified t face font-lock-comment-face) 891 895 (fontified t face font-lock-comment-face) 895 897 (fontified t face font-lock-comment-face) 897 898 (rear-nonsticky t fontified t face font-lock-comment-face) 898 900 (fontified t) 900 903 (fontified t face font-lock-comment-delimiter-face) 903 905 (fontified t face font-lock-comment-delimiter-face) 905 907 (fontified t face font-lock-comment-face) 907 908 (rear-nonsticky t fontified t face font-lock-comment-face) 908 910 (fontified t) 910 913 (fontified t face font-lock-comment-delimiter-face) 913 914 (fontified t face font-lock-comment-face) 914 915 (fontified t face font-lock-comment-face)) . 2856) (undo-tree-id597 . -915) 3771 (t 23152 16505 33727 200000)) nil (23152 16514 664488 800000) 0 nil]) ((#(" " 0 1 (fontified t)) . -2807)) nil (23152 16504 848937 300000) 0 nil]) ((#("     " 0 1 (fontified t) 1 3 (fontified t) 3 5 (fontified t)) . -2808) 2807) nil (23152 16504 848963 300000) 0 nil]) ((#("
" 0 1 (fontified t)) . -2807) (undo-tree-id580 . -1) (undo-tree-id581 . -1)) nil (23152 16504 848996 200000) 0 nil]) ((#(" " 0 1 (fontified t)) . -2763)) nil (23152 16504 849006 0) 0 nil]) ((#("       " 0 1 (fontified t) 1 3 (fontified t) 3 7 (fontified t)) . -2764) 2763) nil (23152 16504 849015 500000) 0 nil]) ((#("
" 0 1 (fontified t)) . -2763) (undo-tree-id582 . -1) (undo-tree-id583 . -1)) nil (23152 16504 849030 600000) 0 nil]) ((#("          " 0 2 (fontified t) 2 4 (fontified t) 4 10 (fontified t)) . -2799)) nil (23152 16504 849038 100000) 0 nil]) ((2824 . 2825)) nil (23152 16504 849045 700000) 0 nil]) ((#("," 0 1 (fontified t)) . -2824)) nil (23152 16504 849052 100000) 0 nil]) ((#(" " 0 1 (fontified t)) . -2825)) nil (23152 16504 849060 0) 0 nil]) ((#("       " 0 1 (fontified t) 1 3 (fontified t) 3 7 (fontified t)) . -2826) 2825) nil (23152 16504 849069 400000) 0 nil]) ((#("
" 0 1 (fontified t)) . -2825) (undo-tree-id584 . -1) (undo-tree-id585 . -1)) nil (23152 16504 849083 800000) 0 nil]) ((#("         " 0 1 (fontified t) 1 3 (fontified t) 3 9 (fontified t)) . -2821) 2820) nil (23152 16504 849092 900000) 0 nil]) ((#("
" 0 1 (rear-nonsticky t fontified t)) . -2820) (undo-tree-id586 . -1) (undo-tree-id587 . -1)) nil (23152 16504 849109 100000) 0 nil]) ((#("         " 0 1 (fontified t) 1 3 (fontified t) 3 9 (fontified t)) . -2814) 2813) nil (23152 16504 849123 400000) 0 nil]) ((#("
" 0 1 (fontified t)) . -2813) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1)) nil (23152 16504 849152 100000) 0 nil]) ((2798 . 2799)) nil (23152 16504 849164 600000) 0 nil]) ((#("
" 0 1 (fontified t)) . -2798) (undo-tree-id591 . -1) (undo-tree-id592 . -1)) nil (23152 16504 849183 100000) 0 nil]) ((#("         " 0 1 (fontified t) 1 3 (fontified t) 3 9 (fontified t)) . -2787) 2786) nil (23152 16504 849195 200000) 0 nil]) ((#("
" 0 1 (fontified t)) . -2786) (undo-tree-id593 . -1) (undo-tree-id594 . -1)) nil (23152 16504 849243 900000) 0 nil]) ((#("         " 0 1 (fontified t) 1 3 (fontified t) 3 9 (fontified t)) . -2774) 2773) nil (23152 16504 849257 500000) 0 nil]) ((#("
" 0 1 (fontified t)) . -2773) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (t 23152 16493 739889 800000)) nil (23152 16504 849279 800000) 0 nil]) ((2918 . 2919)) nil (23152 16493 568545 800000) 0 nil]) ((#(": elem.$source()" 0 16 (fontified t)) . 2918) (undo-tree-id559 . -16)) nil (23152 16493 568598 700000) 0 nil]) ((2907 . 2908)) nil (23152 16493 568613 400000) 0 nil]) ((#(": [this.chars[lineno - 1], this.chars[lastLineNo]]," 0 3 (fontified t) 3 7 (fontified t face font-lock-constant-face) 7 27 (fontified t) 27 31 (fontified t face font-lock-constant-face) 31 51 (fontified t)) . 2907) (undo-tree-id560 . -51)) nil (23152 16493 568627 400000) 0 nil]) ((#("        start: { line: lineno, column: 0 },
        end: { line: lastLineNo, column: this.lines[lastLineNo - 1].length }
      },
" 0 2 (fontified t) 2 4 (fontified t) 4 8 (fontified t) 8 44 (fontified t) 44 46 (fontified t) 46 48 (fontified t) 48 52 (fontified t) 52 85 (fontified t) 85 89 (fontified t face font-lock-constant-face) 89 121 (fontified t) 121 123 (fontified t) 123 125 (fontified t) 125 127 (fontified t) 127 130 (fontified t)) . 2896) (undo-tree-id561 . -130) (undo-tree-id562 . -130) (undo-tree-id563 . -121) (undo-tree-id564 . -121) (undo-tree-id565 . -44) (undo-tree-id566 . -44) (undo-tree-id567 . -130) (undo-tree-id568 . -130) 3026) nil (23152 16493 568722 500000) 0 nil]) ((2894 . 2895)) nil (23152 16493 568739 500000) 0 nil]) ((#(": {" 0 3 (fontified t)) . 2894) (undo-tree-id569 . -3)) nil (23152 16493 568750 800000) 0 nil]) ((2864 . 2865)) nil (23152 16493 568759 900000) 0 nil]) ((#(": elem.$source()" 0 16 (fontified t)) . 2864) (undo-tree-id570 . -16)) nil (23152 16493 568770 500000) 0 nil]) ((2849 . 2850)) nil (23152 16493 568778 400000) 0 nil]) ((#(": [this.chars[lineno - 1], this.chars[lastLineNo]]," 0 3 (fontified t) 3 7 (fontified t face font-lock-constant-face) 7 27 (fontified t) 27 31 (fontified t face font-lock-constant-face) 31 51 (fontified t)) . 2849) (undo-tree-id571 . -51)) nil (23152 16493 568788 600000) 0 nil]) ((#("            start: { line: lineno, column: 0 },
            end: { line: lastLineNo, column: this.lines[lastLineNo - 1].length }
          },
" 0 2 (fontified t) 2 4 (fontified t) 4 12 (fontified t) 12 48 (fontified t) 48 50 (fontified t) 50 52 (fontified t) 52 60 (fontified t) 60 93 (fontified t) 93 97 (fontified t face font-lock-constant-face) 97 129 (fontified t) 129 131 (fontified t) 131 133 (fontified t) 133 139 (fontified t) 139 142 (fontified t)) . 2834) (undo-tree-id572 . -142) (undo-tree-id573 . -142) (undo-tree-id574 . -129) (undo-tree-id575 . -129) (undo-tree-id576 . -48) (undo-tree-id577 . -48) (undo-tree-id578 . -142) (undo-tree-id579 . -142) 2976) nil (23152 16493 568832 400000) 0 nil]) ((2832 . 2833)) nil (23152 16493 568845 600000) 0 nil]) ((#(":" 0 1 (fontified t)) . -2832)) nil (23152 16493 568856 500000) 0 nil]) ((#(" " 0 1 (fontified t face (my-face-u-1))) . -2833)) nil (23152 16493 568866 400000) 0 nil]) ((#("{" 0 1 (fontified t)) . -2834) (t 23152 16477 781487 900000)) nil (23152 16493 568876 900000) 0 nil]) ((2644 . 2646)) nil (23152 16477 577509 0) 0 nil]) ((2638 . 2639) (t 23152 16469 694807 600000)) nil (23152 16477 577541 100000) 0 nil]) ((2811 . 2814)) nil (23152 16469 484718 900000) 0 nil]) ((#("elem.$source()" 0 14 (fontified t)) . 2811) (undo-tree-id553 . -14) (undo-tree-id554 . 1) (undo-tree-id555 . -14) (undo-tree-id556 . 2) (undo-tree-id557 . -13) (undo-tree-id558 . -14) 2825) nil (23152 16469 484808 800000) 0 nil]) ((#("v" 0 1 (fontified t face font-lock-variable-name-face)) . -2577)) nil (23152 16469 484829 200000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -2578)) nil (23152 16469 484840 900000) 0 nil]) ((#("l" 0 1 (fontified t face font-lock-variable-name-face)) . -2579)) nil (23152 16469 484852 200000) 0 nil]) ((#("u" 0 1 (fontified t face font-lock-variable-name-face)) . -2580)) nil (23152 16469 484862 0) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -2581)) nil (23152 16469 484873 400000) 0 nil]) ((#(" " 0 1 (fontified t)) . -2582)) nil (23152 16469 484883 600000) 0 nil]) ((#("=" 0 1 (fontified t)) . -2583)) nil (23152 16469 484893 400000) 0 nil]) ((#(" " 0 1 (fontified t)) . -2584)) nil (23152 16469 484902 800000) 0 nil]) ((2577 . 2585)) nil (23152 16469 485143 700000) 0 nil]) ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3338) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3312) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3249) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3240) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3163) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3119) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3106) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3097) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3087) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3057) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2990) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2977) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2896) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2848) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2831) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2798) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2775) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2765) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2747) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2722) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2709) 3404) nil (23152 16469 485186 700000) 0 nil]) ((2703 . 2704)) nil (23152 16469 485216 500000) 0 nil]) ((2699 . 2702)) nil (23152 16469 485226 700000) 0 nil]) ((2698 . 2700)) nil (23152 16469 485234 300000) 0 nil]) ((#("location" 0 8 (fontified t)) . -2683) (2691 . 2706) 2691) nil (23152 16469 485243 0) 0 nil]) ((2684 . 2691)) nil (23152 16469 485252 0) 0 nil]) ((2664 . 2684)) nil (23152 16469 485259 200000) 0 nil]) ((2659 . 2664) (t 23152 16439 254743 0)) nil (23152 16469 485267 100000) 0 nil]) ((2658 . 2659)) nil (23152 16439 80112 500000) 0 nil]) ((2646 . 2656)) nil (23152 16439 80135 100000) 0 nil]) ((2645 . 2647)) nil (23152 16439 80146 100000) 0 nil]) ((#("lineno" 0 6 (fontified t)) . 2645) (undo-tree-id552 . -6)) nil (23152 16439 80173 300000) 0 nil]) ((2552 . 2562)) nil (23152 16439 80183 900000) 0 nil]) ((#("m" 0 1 (fontified t)) . -2552)) nil (23152 16439 80190 700000) 0 nil]) ((2551 . 2553)) nil (23152 16439 80198 600000) 0 nil]) ((#("`" 0 1 (fontified t)) . -2551)) nil (23152 16439 80205 0) 0 nil]) ((2551 . 2553)) nil (23152 16439 80214 100000) 0 nil]) ((#("lineno" 0 6 (fontified t)) . 2551)) nil (23152 16439 80220 900000) 0 nil]) ((2627 . 2645)) nil (23152 16439 80229 500000) 0 nil]) ((2626 . 2628)) nil (23152 16439 80236 700000) 0 nil]) ((#("find" 0 4 (fontified t)) . -2614) (2618 . 2630) 2618) nil (23152 16439 80246 500000) 0 nil]) ((2617 . 2618)) nil (23152 16439 80254 500000) 0 nil]) ((2597 . 2617)) nil (23152 16439 80262 0) 0 nil]) ((2592 . 2597) (t 23152 16416 217810 700000)) nil (23152 16439 80270 300000) 0 nil]) ((#("    
" 0 4 (fontified t face (my-face-u-1)) 4 5 (fontified t)) . 2593) (undo-tree-id542 . -5) (undo-tree-id543 . -5) (undo-tree-id544 . -5) (undo-tree-id545 . 5) (undo-tree-id546 . -5)) nil (23152 16416 31145 700000) 0 nil]) ((#("    const lineno = elem.$lineno();
" 0 2 (fontified t) 2 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 16 (fontified t face font-lock-variable-name-face) 16 35 (fontified t)) . 2593) (undo-tree-id547 . -35) (undo-tree-id548 . -35) (undo-tree-id549 . 1) (undo-tree-id550 . -35) (undo-tree-id551 . -35) 2628) nil (23152 16416 31181 900000) 0 nil]) ((2627 . 2632) (t 23152 16380 933698 700000)) nil (23152 16416 31194 400000) 0 nil]) ((nil rear-nonsticky nil 1685 . 1686) (nil fontified nil 1674 . 1686) (1674 . 1686)) nil (23152 16380 721236 200000) 0 nil] [nil nil ((nil rear-nonsticky nil 1595 . 1596) (nil fontified nil 1584 . 1596) (1584 . 1596)) ((#("lines.length" 0 11 (fontified nil) 11 12 (fontified nil rear-nonsticky nil)) . 1584) (undo-tree-id540 . -12) (undo-tree-id541 . -12) (nil rear-nonsticky t 1595 . 1596)) (23152 16379 435979 400000) 0 nil]) ((1671 . 1674) (t 23152 16367 240738 200000)) nil (23152 16379 436375 900000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1390) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1)) nil (23152 16367 54830 300000) 0 nil]) ((#("          const " 0 10 (fontified t) 10 15 (fontified t face font-lock-keyword-face) 15 16 (fontified t face (my-face-u-1))) . 1390) (undo-tree-id539 . -16)) nil (23152 16367 54865 0) 0 nil]) ((1400 . 1406)) nil (23152 16367 54879 400000) 0 nil]) ((1389 . 1400) (t 23152 16358 520859 100000)) nil (23152 16367 54887 300000) 0 nil]) ((1671 . 1672)) nil (23152 16358 340682 500000) 0 nil]) ((1653 . 1669)) nil (23152 16358 340702 500000) 0 nil]) ((1647 . 1654)) nil (23152 16358 340710 900000) 0 nil]) ((1638 . 1648) (t 23152 16345 813754 400000)) nil (23152 16358 340719 500000) 0 nil]) ((1617 . 1621)) nil (23152 16345 620162 100000) 0 nil]) ((#("." 0 1 (fontified t)) . 1617)) nil (23152 16345 620190 400000) 0 nil]) ((#("this" 0 4 (fontified t face font-lock-constant-face)) . 1617) (undo-tree-id527 . -4)) nil (23152 16345 620235 800000) 0 nil]) ((1637 . 1638)) nil (23152 16345 620247 500000) 0 nil]) ((1617 . 1637)) nil (23152 16345 620256 900000) 0 nil]) ((#("l" 0 1 (fontified t)) . -1617)) nil (23152 16345 620264 800000) 0 nil]) ((#("i" 0 1 (fontified t)) . -1618)) nil (23152 16345 620273 500000) 0 nil]) ((1617 . 1619)) nil (23152 16345 620281 800000) 0 nil]) ((1605 . 1618)) nil (23152 16345 620290 100000) 0 nil]) ((1606 . 1618) (#(" " 0 1 (fontified nil)) . 1606) (1605 . 1606)) nil (23152 16345 620300 300000) 0 nil]) ((1583 . 1598) (#(" " 0 1 (fontified t)) . 1583) 1584) nil (23152 16345 620318 100000) 0 nil]) ((1545 . 1560) (#(" " 0 1 (fontified t)) . 1545) 1546) nil (23152 16345 620330 500000) 0 nil]) ((1512 . 1524) (#(" " 0 1 (fontified nil)) . 1512) (1511 . 1512)) nil (23152 16345 620343 800000) 0 nil]) ((1510 . 1511)) nil (23152 16345 620353 900000) 0 nil]) ((1452 . 1467) (#(" " 0 1 (fontified t)) . 1452) 1453) nil (23152 16345 620364 900000) 0 nil]) ((1429 . 1444) (#(" " 0 1 (fontified t)) . 1429) 1430) nil (23152 16345 620377 0) 0 nil]) ((1479 . 1480)) nil (23152 16345 620385 700000) 0 nil]) ((1473 . 1480)) nil (23152 16345 620400 400000) 0 nil]) ((1464 . 1474)) nil (23152 16345 620524 600000) 0 nil]) ((1458 . 1463)) nil (23152 16345 620535 600000) 0 nil]) ((1447 . 1459)) nil (23152 16345 620544 600000) 0 nil]) ((#("l" 0 1 (fontified t)) . -1447)) nil (23152 16345 620552 900000) 0 nil]) ((1446 . 1448)) nil (23152 16345 620562 400000) 0 nil]) ((1493 . 1501)) nil (23152 16345 620570 700000) 0 nil]) ((1469 . 1475)) nil (23152 16345 620579 0) 0 nil]) ((1439 . 1447)) nil (23152 16345 620587 300000) 0 nil]) ((1430 . 1436)) nil (23152 16345 620604 300000) 0 nil]) ((1454 . 1473)) nil (23152 16345 620613 300000) 0 nil]) ((1431 . 1433)) nil (23152 16345 620622 0) 0 nil]) ((#(" " 0 1 (fontified t)) . -1431)) nil (23152 16345 620629 600000) 0 nil]) ((#("+" 0 1 (fontified t)) . -1432)) nil (23152 16345 620637 900000) 0 nil]) ((#(" " 0 1 (fontified t)) . -1433)) nil (23152 16345 620646 200000) 0 nil]) ((#("1" 0 1 (fontified t)) . -1434)) nil (23152 16345 620654 100000) 0 nil]) ((1429 . 1435)) nil (23152 16345 620662 400000) 0 nil]) ((1430 . 1431)) nil (23152 16345 620670 400000) 0 nil]) ((1448 . 1451)) nil (23152 16345 620685 500000) 0 nil]) ((1427 . 1430)) nil (23152 16345 620693 800000) 0 nil]) ((1440 . 1445)) nil (23152 16345 620702 100000) 0 nil]) ((1427 . 1440)) nil (23152 16345 620710 0) 0 nil]) ((1421 . 1427)) nil (23152 16345 620718 300000) 0 nil]) ((1408 . 1421)) nil (23152 16345 620726 200000) 0 nil]) ((1408 . 1419)) nil (23152 16345 620734 600000) 0 nil]) ((1400 . 1409)) nil (23152 16345 620743 200000) 0 nil]) ((1389 . 1400)) nil (23152 16345 620751 500000) 0 nil]) ((#("      return {
      };
" 0 6 (fontified t) 6 12 (fontified t face font-lock-keyword-face) 12 15 (fontified t) 15 23 (fontified t) 23 24 (fontified t)) . 1408) (undo-tree-id528 . -24) (undo-tree-id529 . -24) (undo-tree-id530 . -15) (undo-tree-id531 . -15) (undo-tree-id532 . -24) (undo-tree-id533 . -24) (undo-tree-id534 . -24) (undo-tree-id535 . -24) 1432) nil (23152 16345 620805 500000) 0 nil]) ((1389 . 1398)) nil (23152 16345 620816 100000) 0 nil]) ((1387 . 1390)) nil (23152 16345 620821 800000) 0 nil]) ((1384 . 1386)) nil (23152 16345 620846 700000) 0 nil]) ((1364 . 1384)) nil (23152 16345 620853 900000) 0 nil]) ((1360 . 1365)) nil (23152 16345 620860 700000) 0 nil]) ((1351 . 1360) (t 23152 16260 924615 200000)) nil (23152 16345 620868 200000) 0 nil]) ((1335 . 1341)) nil (23152 16260 864884 800000) 0 nil]) ((#("goto fail;" 0 4 (fontified t face font-lock-keyword-face) 4 10 (fontified t)) . 1335) (undo-tree-id517 . -10)) nil (23152 16260 864923 300000) 0 nil]) ((#("
      fail:
" 0 1 (fontified t) 1 12 (fontified t) 12 13 (fontified t)) . 1388) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -13) (undo-tree-id521 . -13) (undo-tree-id522 . -13) (undo-tree-id523 . 13) (undo-tree-id524 . -13) (undo-tree-id525 . -13) (undo-tree-id526 . -13) 1401) nil (23152 16260 864965 200000) 0 nil]) ((#("      " 0 6 (fontified nil)) . 1388) (1388 . 1394) (1388 . 1389)) nil (23152 16260 864979 200000) 0 nil]) ((1386 . 1387)) nil (23152 16260 864988 300000) 0 nil]) ((1378 . 1385) (#(" " 0 1 (fontified t)) . 1378) 1379) nil (23152 16260 864996 200000) 0 nil]) ((1378 . 1379)) nil (23152 16260 865003 400000) 0 nil]) ((1370 . 1379)) nil (23152 16260 865010 200000) 0 nil]) ((1363 . 1370) (t 23152 16248 754648 200000)) nil (23152 16260 865017 700000) 0 nil]) ((1370 . 1375)) nil (23152 16248 677190 500000) 0 nil]) ((1363 . 1370)) nil (23152 16248 677216 100000) 0 nil]) ((#("      
      fail:
" 0 6 (fontified t face (my-face-u-1)) 6 7 (fontified t) 7 19 (fontified t)) . 1364) (undo-tree-id511 . -19) (undo-tree-id512 . -19) (undo-tree-id513 . -19) (undo-tree-id514 . -7) (undo-tree-id515 . -7) (undo-tree-id516 . -19) 1383) nil (23152 16248 677275 0) 0 nil]) ((1363 . 1370) (t 23152 16234 224748 100000)) nil (23152 16248 677292 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 1376) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1)) nil (23152 16234 143231 700000) 0 nil]) ((#("      ;" 0 7 (fontified t)) . 1376) (undo-tree-id510 . -7)) nil (23152 16234 143260 800000) 0 nil]) ((1382 . 1383)) nil (23152 16234 143272 800000) 0 nil]) ((1375 . 1382)) nil (23152 16234 143281 900000) 0 nil]) ((#(";" 0 1 (fontified t)) . -1375) (t 23152 16226 495348 0)) nil (23152 16234 143291 700000) 0 nil]) ((1335 . 1345)) nil (23152 16226 423773 900000) 0 nil]) ((1324 . 1335) (t 23152 16223 707028 300000)) nil (23152 16226 423796 100000) 0 nil]) ((1354 . 1355)) nil (23152 16223 547025 500000) 0 nil]) ((#("      
" 0 6 (fontified t face (my-face-u-1)) 6 7 (fontified t)) . 1355) (undo-tree-id493 . -7) (undo-tree-id494 . -7) (undo-tree-id495 . -7) (undo-tree-id496 . -7)) nil (23152 16223 547111 600000) 0 nil]) ((1354 . 1361)) nil (23152 16223 547132 700000) 0 nil]) ((1349 . 1354)) nil (23152 16223 547145 200000) 0 nil]) ((1342 . 1349)) nil (23152 16223 547156 100000) 0 nil]) ((#("          
" 0 10 (fontified t face (my-face-u-1)) 10 11 (fontified t)) . 1325) (undo-tree-id497 . -11) (undo-tree-id498 . -11) (undo-tree-id499 . 1) (undo-tree-id500 . -11)) nil (23152 16223 547192 400000) 0 nil]) ((1324 . 1335)) nil (23152 16223 547207 100000) 0 nil]) ((1324 . 1333)) nil (23152 16223 547217 300000) 0 nil]) ((1322 . 1325)) nil (23152 16223 547230 100000) 0 nil]) ((1314 . 1321)) nil (23152 16223 547240 700000) 0 nil]) ((1314 . 1315)) nil (23152 16223 547249 800000) 0 nil]) ((1275 . 1279)) nil (23152 16223 547259 600000) 0 nil]) ((1307 . 1308)) nil (23152 16223 547268 300000) 0 nil]) ((1306 . 1308)) nil (23152 16223 547278 500000) 0 nil]) ((1267 . 1275) 1298) nil (23152 16223 547289 800000) 0 nil]) ((1293 . 1298)) nil (23152 16223 547298 500000) 0 nil]) ((#("        if ()" 0 8 (fontified t) 8 10 (fontified t face font-lock-keyword-face) 10 13 (fontified t)) . 1294) (undo-tree-id501 . -13)) nil (23152 16223 547311 0) 0 nil]) ((nil rear-nonsticky nil 1293 . 1294) (nil fontified nil 1271 . 1294) (nil fontified nil 1267 . 1271) (1267 . 1294)) nil (23152 16223 547323 800000) 0 nil]) ((1275 . 1280)) nil (23152 16223 547332 100000) 0 nil]) ((#("this.lines[i - 1].indexOf()" 0 4 (fontified t face font-lock-constant-face) 4 27 (fontified t)) . 1275)) nil (23152 16223 547338 500000) 0 nil]) ((1267 . 1275) (#("      " 0 6 (fontified t)) . 1267)) nil (23152 16223 547347 200000) 0 nil]) ((#("        
" 0 8 (fontified t face (my-face-u-1)) 8 9 (fontified t)) . 1301)) nil (23152 16223 547355 100000) 0 nil]) ((nil rear-nonsticky nil 1300 . 1301) (nil fontified nil 1300 . 1301) (nil fontified nil 1277 . 1300) (nil fontified nil 1273 . 1277) (nil fontified nil 1267 . 1273) (1267 . 1301)) nil (23152 16223 547373 600000) 0 nil]) ((1266 . 1275)) nil (23152 16223 547385 0) 0 nil]) ((#("      this.lines[i - 1].indexOf()
" 0 6 (fontified t) 6 10 (fontified t face font-lock-constant-face) 10 33 (fontified t) 33 34 (fontified t)) . 1275) (undo-tree-id502 . -34) (undo-tree-id503 . -34) (undo-tree-id504 . -16) (undo-tree-id505 . -34) 1309) nil (23152 16223 547414 400000) 0 nil]) ((1266 . 1273)) nil (23152 16223 547426 500000) 0 nil]) ((1264 . 1267)) nil (23152 16223 547436 700000) 0 nil]) ((1259 . 1263)) nil (23152 16223 547446 500000) 0 nil]) ((1251 . 1258)) nil (23152 16223 547455 900000) 0 nil]) ((1237 . 1252)) nil (23152 16223 547464 300000) 0 nil]) ((#(" " 0 1 (fontified t)) . -1237)) nil (23152 16223 547473 300000) 0 nil]) ((1231 . 1238)) nil (23152 16223 547484 300000) 0 nil]) ((1226 . 1232)) nil (23152 16223 547494 500000) 0 nil]) ((1219 . 1226)) nil (23152 16223 547503 900000) 0 nil]) ((1243 . 1253) (t 23152 16161 459615 300000)) nil (23152 16223 547515 200000) 0 nil]) ((1238 . 1242) (t 23152 16150 65927 200000)) nil (23152 16161 398443 700000) 0 nil]) ((1237 . 1238)) nil (23152 16149 879943 700000) 0 nil]) ((1236 . 1238)) nil (23152 16149 879965 600000) 0 nil]) ((#(".indexOf(this.)" 0 1 (fontified t) 1 9 (fontified t) 9 13 (fontified t face font-lock-constant-face) 13 14 (fontified t) 14 15 (fontified t)) . 1236) (undo-tree-id491 . -9) (undo-tree-id492 . -15)) nil (23152 16149 880018 900000) 0 nil]) ((1245 . 1250)) nil (23152 16149 880029 800000) 0 nil]) ((1226 . 1246)) nil (23152 16149 880036 600000) 0 nil]) ((1219 . 1226)) nil (23152 16149 880043 0) 0 nil]) ((1219 . 1224)) nil (23152 16149 880048 700000) 0 nil]) ((1217 . 1220)) nil (23152 16149 880055 100000) 0 nil]) ((1211 . 1216)) nil (23152 16149 880061 200000) 0 nil]) ((1206 . 1207)) nil (23152 16149 880066 800000) 0 nil]) ((1196 . 1210)) nil (23152 16149 880073 200000) 0 nil]) ((#("." 0 1 (fontified t)) . -1196)) nil (23152 16149 880079 300000) 0 nil]) ((1183 . 1197)) nil (23152 16149 880087 600000) 0 nil]) ((#("0" 0 1 (fontified t)) . -1183)) nil (23152 16149 880094 0) 0 nil]) ((1175 . 1184)) nil (23152 16149 880101 200000) 0 nil]) ((1170 . 1176)) nil (23152 16149 880107 200000) 0 nil]) ((1165 . 1170) (t 23152 16076 627355 600000)) nil (23152 16149 880114 400000) 0 nil]) ((1170 . 1182)) nil (23152 16076 465834 200000) 0 nil]) ((1166 . 1170)) nil (23152 16076 465859 900000) 0 nil]) ((#("    for (let lineno = )" 0 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 9 (fontified t) 9 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t) 13 19 (fontified t face font-lock-variable-name-face) 19 22 (fontified t) 22 23 (fontified t)) . 1166) (undo-tree-id442 . -23)) nil (23152 16076 465887 800000) 0 nil]) ((1175 . 1188)) nil (23152 16076 465898 400000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1175)) nil (23152 16076 465904 800000) 0 nil]) ((#("int" 0 3 (fontified t face font-lock-type-face)) . 1175) (undo-tree-id443 . -3)) nil (23152 16076 465918 400000) 0 nil]) ((1175 . 1179)) nil (23152 16076 465929 300000) 0 nil]) ((1170 . 1176)) nil (23152 16076 465937 600000) 0 nil]) ((1165 . 1170)) nil (23152 16076 465946 300000) 0 nil]) nil nil (23152 16076 465954 600000) 0 nil] #3# 80001 2650 nil]